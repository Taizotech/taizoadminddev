{"version":3,"file":"static/js/155.bb016352.chunk.js","mappings":"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","sources":["components/ModalPopups/CandidateDetails/FBLeadDetailsview.js","pages/Candidate/JoinedCandidate/CandidateJoinedFilter.js","pages/Candidate/JoinedCandidate/SendInvoiceToEmployer.js","components/xlsxSheetDownLoad/xlsxDownload.js","pages/Candidate/JoinedCandidate/CandidateJoined.js","webpack://admin-login-react/./src/pages/Candidate/CandidateDialyTask/CandidateDailyTask.module.scss?ed98","pages/Candidate/CandidateDialyTask/CandidateDailyTaskFilter.js","pages/Candidate/CandidateDialyTask/CandidateDailyTask.js","pages/Candidate/ResourceCandidate/CandidateResourceFilter.js","pages/Candidate/ResourceCandidate/CandidateResource.js","webpack://admin-login-react/./src/pages/Candidate/Recruitmentleads/RecruitmentLeads.module.scss?37b9","pages/Candidate/Recruitmentleads/LeadFilter.js","pages/Candidate/Recruitmentleads/RecruitmentsLeads.js","pages/Tabsview/Candidate/CandidateTabsview.js","webpack://admin-login-react/./src/pages/Candidate/CandidateRegistered/RegisteredCandidate.module.scss?bc2f"],"sourcesContent":["/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { DDMMYYYY_formate, Detailsshow, MyModal } from \"../../../utility\";\r\nimport ModalContainer from \"../../modal_popup\";\r\nimport DetailsContainer from \"../../DetailsContainer\";\r\nimport Candidatedetailstyle from \"./CandidateDetails.module.scss\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  PutCandidateLeadCheck,\r\n  PutMetaLeadAssign,\r\n  getCandidateLead,\r\n} from \"../../../apiServices\";\r\nimport companylogo from \"../../../assets/images/user.png\";\r\nimport FBStyle from \"../../../pages/Candidate/FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport { useRef } from \"react\";\r\nimport { PiDotsThreeOutlineVerticalFill } from \"react-icons/pi\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\nimport flag from \"../../../assets/images/flag.png\";\r\n// import companylogo from \"../../assets/images/Company-Logo.png\";\r\nimport WhatsappImage from \"../../../assets/images/whatsapp-logo-removebg-preview.png\";\r\nimport { MdCall, MdOutlineContentCopy } from \"react-icons/md\";\r\nimport candidateTabsviewStyle from \"../../../pages/Tabsview/Candidate/CandidateTabsview.module.scss\";\r\nimport { Autocomplete, Card, CardContent, TextField } from \"@mui/material\";\r\nimport ScheduleInterview from \"../../../pages/Candidate/CandidateInterview/scheduleInterview\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SuccessTick from \"../../success_tick\";\r\nimport TimelineFacebookMeta from \"../../../pages/Candidate/FacebookMeta/TimelineFacebookMeta\";\r\nimport AddNotesFBLead from \"../../../pages/Candidate/FacebookMeta/PostCandidateNotes\";\r\n\r\nconst CandidateFBLeadDetailsview = ({\r\n  data,\r\n  onClose,\r\n  onAssignChange,\r\n  textHeading,\r\n}) => {\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [candiateDetails, setCandidateDetails] = useState({});\r\n  const [putCandidateLead, setPutcandidateLead] = useState({\r\n    canLeadId: \"\",\r\n    qualified: false,\r\n    notQualified: false,\r\n  });\r\n  const adminDetailsRole = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetailsRole.roleID === 1;\r\n  const [enableSubmit, setEnableSubmit] = useState(false);\r\n  const [CanputLead, setCanputLead] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [showConfirmationPopup, setShowConfirmPopup] = useState(false);\r\n  const [showConfirmationqualifiedPopup, setShowConfirmQualifiedPopup] =\r\n    useState(false);\r\n\r\n  console.log(data, \"jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\");\r\n\r\n  const [assignAdminto, setAssignAdminto] = useState({\r\n    metaLeadId: \"\",\r\n    adminId: \"\",\r\n  });\r\n\r\n  const [adminDetails, setAdminDetails] = useState({\r\n    id: null,\r\n    adminName: [],\r\n  });\r\n\r\n  const handleCancelClick = () => {\r\n    console.log(\"Cancel button clicked\");\r\n    setShowConfirmQualifiedPopup(false);\r\n    setEnableSubmit(false);\r\n  };\r\n\r\n  const handleCancelClicknotqualify = () => {\r\n    console.log(\"Cancel button clicked\");\r\n    setShowConfirmPopup(false);\r\n    setEnableSubmit(false);\r\n  };\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  const [showScheduleInterview, setShowScheduleInterview] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const params = window.location.href;\r\n\r\n    let isShowScheduleInterview = params.includes(\"interview_schedule_list\");\r\n    console.log(params, \"parameterrrs\");\r\n    setShowScheduleInterview(!isShowScheduleInterview);\r\n  }, []);\r\n\r\n  const handleTabClick = (tabNumber) => {\r\n    setActiveTab(tabNumber);\r\n  };\r\n\r\n  const inputRef = {\r\n    qualified: useRef(),\r\n    notQualified: useRef(),\r\n    // rescheduled: useRef(),\r\n  };\r\n\r\n  const handleLeadAssignfromAdmin = (metaLeadId, adminId) => {\r\n    // let selectedAdminName = event.target.value;\r\n    setAssignAdminto((prev) => ({\r\n      ...prev,\r\n      adminId: adminId,\r\n      metaLeadId: metaLeadId,\r\n    }));\r\n  };\r\n\r\n  function ConfirmFormSubmit() {\r\n    if (putCandidateLead.canLeadId) {\r\n      setEnableSubmit(true);\r\n      putCandidateLead.notes = CanputLead.notes;\r\n      PutCandidateLeadCheck(putCandidateLead).then(() => {\r\n        setShowConfirmPopup(false);\r\n        setShowConfirmQualifiedPopup(false);\r\n\r\n        getCandidateLead().then((data) => {\r\n          console.log(data);\r\n          setCandidateDetails(data);\r\n        });\r\n        setEnableSubmit(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (assignAdminto.adminId && assignAdminto.metaLeadId) {\r\n      PutMetaLeadAssign(assignAdminto).then((data) => {\r\n        // console.log(data, \"kdksjkbbh\");\r\n        if (data.code !== 200) {\r\n          alert(\"something went wrong\");\r\n          return false;\r\n        }\r\n        setShowSuccess(true);\r\n        setTimeout(() => {\r\n          setShowSuccess(false);\r\n        }, 3000);\r\n        onAssignChange();\r\n      });\r\n    }\r\n  }, [assignAdminto]);\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((data) => {\r\n      console.log(data, \"All admin details\");\r\n      const adminName = data.map((item) => item.userName);\r\n      const adminid = data.map((item) => item.id);\r\n      console.log(adminName);\r\n      console.log(adminid);\r\n      setAdminDetails((prev) => ({\r\n        ...prev,\r\n        adminName: adminName,\r\n        id: adminid,\r\n      }));\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const assignToIndex = adminid.indexOf(data.assignTo);\r\n  //   if (assignToIndex !== -1) {\r\n  //     setAssignToName(adminName[assignToIndex]);\r\n  //   }\r\n  // }, [candiateDetails.assignTo, adminid, adminName]);\r\n\r\n  const handleWhatsAppIconClick = (phoneNumber) => {\r\n    // console.log(event)\r\n    const whatsappURL = `https://api.whatsapp.com/send?phone=${phoneNumber}`;\r\n    window.open(whatsappURL, \"_blank\");\r\n  };\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const handleCopyNumber = (phoneNumber, whatsappNumber) => {\r\n    navigator.clipboard.writeText(phoneNumber, whatsappNumber).then(() => {\r\n      setIsCopied(true);\r\n    });\r\n  };\r\n\r\n  const keySkillsArray =\r\n    candiateDetails.keySkill && typeof candiateDetails.keySkill === \"string\"\r\n      ? candiateDetails.keySkill.split(\",\")\r\n      : [];\r\n  return (\r\n    <div>\r\n      {/* <div className=\"container-fluid\">\r\n        <div className=\"row d-flex justify-content-end\">\r\n          <RxCross2 />\r\n        </div>\r\n      </div> */}\r\n      <Detailsshow>\r\n        <DetailsContainer\r\n          topComponent={\r\n            <>\r\n              <div className={`${Candidatedetailstyle.boxcross}`}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h4 className=\"text-light ms-3\">{textHeading}</h4>\r\n                  </div>\r\n                  <div\r\n                    className={` ${Candidatedetailstyle.CrossStyle} pe-5 pe-lg-4`}\r\n                  >\r\n                    <b>\r\n                      <RxCross2\r\n                        onClick={() => {\r\n                          onClose();\r\n                        }}\r\n                      />\r\n                    </b>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          }\r\n          childComponent={\r\n            <>\r\n              <div className={`${Candidatedetailstyle.boxwidth}`}>\r\n                <div className=\"container-fluid\">\r\n                  <div className={`row ${Candidatedetailstyle.topcontainer}`}>\r\n                    <div className=\"col-sm-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                          {\" \"}\r\n                          {data.profilePic ? (\r\n                            <img\r\n                              src={data.profilePic}\r\n                              alt=\"Candidate Profile\"\r\n                              width={70}\r\n                            />\r\n                          ) : (\r\n                            <img src={companylogo} alt=\"Profile\" width={100} />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                          <div>\r\n                            <b>{data.candidateName} </b>\r\n                          </div>\r\n                          <div>\r\n                            {data.jobCategory ? (\r\n                              <>{data.jobCategory}</>\r\n                            ) : (\r\n                              <> {\"Fresher\"}</>\r\n                            )}{\" \"}\r\n                          </div>\r\n                          <div>\r\n                            <div className={``}>\r\n                              <div className={`${FBStyle.StatusStyle}`}>\r\n                                <div>\r\n                                  <>\r\n                                    {data.qualified === true && (\r\n                                      <div className={`${FBStyle.Green_wrp}`}>\r\n                                        <input\r\n                                          type=\"radio\"\r\n                                          name={`status_${data.id}`}\r\n                                          checked={data.qualified}\r\n                                          id={`qualified_${data.id}`}\r\n                                        />\r\n                                        <label htmlFor={`qualified_${data.id}`}>\r\n                                          Qualified\r\n                                        </label>\r\n                                      </div>\r\n                                    )}\r\n\r\n                                    {data.notQualified === true && (\r\n                                      <div className={`${FBStyle.chips_wrp}`}>\r\n                                        <input\r\n                                          type=\"radio\"\r\n                                          checked={data.notQualified}\r\n                                          name={`status_${data.id}`}\r\n                                          id={`notQualified_${data.id}`}\r\n                                        />\r\n                                        <label\r\n                                          htmlFor={`notQualified_${data.id}`}\r\n                                        >\r\n                                          Not Qualified\r\n                                        </label>\r\n                                      </div>\r\n                                    )}\r\n                                  </>\r\n                                </div>\r\n                                {/* <div className=\"btn-group dropstart\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    // className={`btn btn-light `}\r\n\r\n                                    data-bs-toggle=\"dropdown\"\r\n                                    data-bs-no-caret=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                    style={{\r\n                                      border: \"none\",\r\n                                      background: \"none\",\r\n                                      color: \"#000\",\r\n                                      cursor: \"pointer\",\r\n                                      outline: \"none\",\r\n                                      position: \"relative\",\r\n                                      right: \"5px\",\r\n                                      // backgroundColor: \"red\",\r\n                                      fontSize: 20,\r\n                                      zIndex: 1,\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"\">\r\n                                      {\" \"}\r\n                                      <BsThreeDotsVertical />{\" \"}\r\n                                    </span>\r\n                                    <AiOutlineEdit />\r\n                                  </button>{\" \"}\r\n                                  <ul\r\n                                    className=\"dropdown-menu\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                    // ref={dropdownRef}\r\n                                  >\r\n                                    <li\r\n                                      onClick={() => {\r\n                                        handleConfirmationOpenQualify(true);\r\n                                        handleIsQualified(\"qualified\");\r\n                                      }}\r\n                                    >\r\n                                      <a className=\"dropdown-item\" href=\"#\">\r\n                                        <div\r\n                                          className={`${FBStyle.select_wrp}`}\r\n                                          onClick={() => {\r\n                                            handleButtonClick(\"qualified\");\r\n                                          }}\r\n                                        >\r\n                                          <input\r\n                                            type=\"radio\"\r\n                                            // ref={inputRef.qualified}\r\n                                            name={`status_${data.id}`}\r\n                                            checked={data.qualified}\r\n                                            id={`qualified_${data.id}`}\r\n                                          />\r\n\r\n                                          <label\r\n                                            htmlFor={`qualified_${data.id}`}\r\n                                          >\r\n                                            {\" \"}\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#169C50\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />\r\n                                            Qualified\r\n                                          </label>\r\n                                        </div>\r\n                                      </a>\r\n                                    </li>\r\n\r\n                                    <li\r\n                                      onClick={() => {\r\n                                        handleConfirmationOpen(true);\r\n                                        handleIsQualified(\"notQualified\");\r\n                                      }}\r\n                                    >\r\n                                      <a\r\n                                        className=\"dropdown-item\"\r\n                                        href=\"#\"\r\n                                        onClick={() =>\r\n                                          handleButtonClick(\"notQualified\")\r\n                                        }\r\n                                      >\r\n                                        <div\r\n                                          className={`${FBStyle.select_wrp}`}\r\n                                        >\r\n                                          <input\r\n                                            // ref={inputRef.notQualified}\r\n                                            type=\"radio\"\r\n                                            checked={data.notQualified}\r\n                                            name={`status_${data.id}`}\r\n                                            id={`notQualified_${data.id}`}\r\n                                          />\r\n                                          <label\r\n                                            htmlFor={`notQualified_${data.id}`}\r\n                                          >\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#b2261c\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />{\" \"}\r\n                                            Not Qualified\r\n                                          </label>\r\n                                        </div>\r\n                                      </a>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div> */}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mt-1\">\r\n                        <div className={`${Candidatedetailstyle.Createdon}`}>\r\n                          Created on :{\" \"}\r\n                          <DDMMYYYY_formate dateValue={data.createdTime} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col\">\r\n                      {\" \"}\r\n                      \r\n                    </div> */}\r\n                    <div className={`col-sm-8`}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                          {/* <div\r\n                            className={`${Candidatedetailstyle.verticalLine}`}\r\n                          ></div> */}\r\n                          {/* <div\r\n                            className={`${Candidatedetailstyle.CandidatepastDetails}`}\r\n                          >\r\n                            <div>\r\n                              {\" \"}\r\n                              Joining Status <PiWarningCircleLight /> :\r\n                              immediate\r\n                            </div>\r\n                            <div>\r\n                              {\" \"}\r\n                              Employer Status <PiWarningCircleLight /> : working\r\n                            </div>\r\n                            <div>\r\n                              {\" \"}\r\n                              Previous Company <PiWarningCircleLight /> : Taizo\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <button className=\"btn\">\r\n                                <span className=\"\">\r\n                                  {\" \"}\r\n                                  <BsThreeDotsVertical />{\" \"}\r\n                                </span>\r\n                                <AiOutlineEdit />\r\n                              </button>\r\n                            </div>\r\n                          </div> */}\r\n                        </div>\r\n                        <div className=\"col-sm-8 \">\r\n                          <div className={`row `}>\r\n                            {/* ${Candidatedetailstyle.flexContainer} */}\r\n                            <div\r\n                              className={`col-sm-12 ${Candidatedetailstyle.flexContainer}`}\r\n                            >\r\n                              {/* <a\r\n                                href={`${webConsoleBaseUrl}/waNotifications/customCandidateupdate.html?id=${data.id}&adminId=${adminId}`}\r\n                                target=\"_blank\"\r\n                                // className=\"nav-link\"\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                  color: \"black\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  className={`${Candidatedetailstyle.LiaUserEditSolid}`}\r\n                                >\r\n                                  <div className=\"mb-1\">\r\n                                    {\" \"}\r\n                                    <LiaUserEditSolid />\r\n                                  </div>\r\n                                </div>\r\n                              </a> */}\r\n                              <div\r\n                                className={`${Candidatedetailstyle.LiaUserEditSolid}`}\r\n                              >\r\n                                <div\r\n                                  className=\"mb-1\"\r\n                                  onClick={() =>\r\n                                    handleWhatsAppIconClick(data.whatsappNumber)\r\n                                  }\r\n                                >\r\n                                  <FaWhatsapp />\r\n                                </div>\r\n                              </div>\r\n                              <div>\r\n                                {/* <div\r\n                                  className={`${Candidatedetailstyle.scheduleinterview}`}\r\n                                >\r\n                                  {showScheduleInterview &&\r\n                                    data.id && (\r\n                                      <ScheduleInterview\r\n                                        candidateId={data.id}\r\n                                      />\r\n                                    )}{\" \"}\r\n                                </div> */}\r\n                              </div>\r\n                              <div class=\"btn-group\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  // class=\"btn btn-secondary\"\r\n                                  data-bs-toggle=\"dropdown\"\r\n                                  data-bs-display=\"static\"\r\n                                  aria-expanded=\"false\"\r\n                                  style={{ border: \"none\" }}\r\n                                  className={`${Candidatedetailstyle.ThreeOutline}`}\r\n                                >\r\n                                  <PiDotsThreeOutlineVerticalFill />\r\n                                </button>\r\n                                <ul class=\"dropdown-menu dropdown-menu-end dropdown-menu-lg-end\">\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      {showScheduleInterview && data.id && (\r\n                                        <ScheduleInterview\r\n                                          candidateId={data.id}\r\n                                        />\r\n                                      )}\r\n                                    </button>\r\n                                  </li>\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      <MdCall /> +91 {data.mobileNumber}{\" \"}\r\n                                      <MdOutlineContentCopy\r\n                                        onClick={() =>\r\n                                          handleCopyNumber(data.mobileNumber)\r\n                                        }\r\n                                        className=\"ms-5\"\r\n                                      />\r\n                                    </button>\r\n                                  </li>\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      <FaWhatsapp /> +91 {data.whatsappNumber}{\" \"}\r\n                                      <MdOutlineContentCopy\r\n                                        onClick={() =>\r\n                                          handleCopyNumber(data.whatsappNumber)\r\n                                        }\r\n                                        className=\"ms-5\"\r\n                                      />\r\n                                    </button>\r\n                                  </li>\r\n                                  {/* <li>\r\n                                    <a\r\n                                      href={`${webConsoleBaseUrl}/waNotifications/customCandidateupdate.html?id=${data.id}&adminId=${adminId}`}\r\n                                      target=\"_blank\"\r\n                                      // className=\"nav-link\"\r\n                                      style={{\r\n                                        textDecoration: \"none\",\r\n                                        color: \"black\",\r\n                                      }}\r\n                                    >\r\n                                      <button\r\n                                        class=\"dropdown-item\"\r\n                                        type=\"button\"\r\n                                      >\r\n                                        <LiaUserEditSolid /> Edit Profile\r\n                                      </button>\r\n                                    </a>\r\n                                  </li> */}\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-2 px-4 \">\r\n                    <div\r\n                      className={`col-sm-4 pb-4 rounded ${Candidatedetailstyle.personalDetails}`}\r\n                    >\r\n                      <div className=\"mt-2\">\r\n                        {\" \"}\r\n                        <h6>\r\n                          <b>Personal Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>Name </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>Gender</div> */}\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              Current Location\r\n                            </div> */}\r\n                            <div style={{ lineHeight: \"2\" }}>Mobile Number</div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Whatsapp Number\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              {data.candidateName != null\r\n                                ? data.candidateName\r\n                                : \"-\"}\r\n                            </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              {data.gender != null ? data.gender : \"-\"}\r\n                            </div> */}\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              {data.city != null ? data.city : \"-\"} ,{\" \"}\r\n                              {data.state != null ? data.state : \"-\"}\r\n                            </div> */}\r\n                            <div\r\n                              className=\"d-flex \"\r\n                              style={{ lineHeight: \"2\" }}\r\n                            >\r\n                              <div\r\n                                className={`me-3 ${Candidatedetailstyle.numbersstyle}`}\r\n                              >\r\n                                <img src={flag} alt=\"\" width={15} />{\" \"}\r\n                                <span>{data.mobileNumber} </span>\r\n                                <MdOutlineContentCopy\r\n                                  onClick={() =>\r\n                                    handleCopyNumber(data.mobileNumber)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className={`${Candidatedetailstyle.Phonecall}`}\r\n                              >\r\n                                <MdCall />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex\" style={{ lineHeight: \"2\" }}>\r\n                              <div\r\n                                className={`me-3 ${Candidatedetailstyle.Whatsapnumbersstyle}`}\r\n                              >\r\n                                <img src={WhatsappImage} alt=\"\" width={16} />\r\n                                <span>\r\n                                  {data.whatsappNumber\r\n                                    ? data.whatsappNumber.slice(-10)\r\n                                    : \"\"}\r\n                                </span>\r\n\r\n                                <MdOutlineContentCopy\r\n                                  onClick={() =>\r\n                                    handleCopyNumber(data.whatsappNumber)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className={`${Candidatedetailstyle.Phonecall}`}\r\n                              >\r\n                                <FaWhatsapp\r\n                                  onClick={() =>\r\n                                    handleWhatsAppIconClick(data.whatsappNumber)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Education Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              Qualification\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Degree/Specialization\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            {\" \"}\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.educationQualification != null\r\n                                ? data.educationQualification\r\n                                : \"-\"}{\" \"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.specification != null\r\n                                ? data.specification\r\n                                : \"-\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Work Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>Job Category </div>\r\n                            <div style={{ lineHeight: \"2\" }}>Industry</div>\r\n                            <div style={{ lineHeight: \"2\" }}>Experience</div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Preferred Job City\r\n                            </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              Preferred Job Area\r\n                            </div> */}\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.jobCategory != null\r\n                                ? data.jobCategory\r\n                                : \"-\"}{\" \"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.industry != null ? data.industry : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.experience != null ? data.experience : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.preferredLocation != null\r\n                                ? data.preferredLocation\r\n                                : \"-\"}\r\n                            </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              {data.prefArea != null ? data.prefArea : \"-\"}\r\n                            </div> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Other Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div>Key Skills</div>\r\n                          </div>\r\n                          <div className=\"col-7 \">\r\n                            <div>\r\n                              <div>\r\n                                {/* {data.keySkill} \r\n                                {keySkillsArray.map((skill, index) =>\r\n                                  skill && typeof skill === \"string\" ? (\r\n                                    <div\r\n                                      className={`${Candidatedetailstyle.KeySkills}`}\r\n                                      key={index}\r\n                                    >\r\n                                      {skill.trim()}\r\n                                    </div>\r\n                                  ) : null\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                      {isSuperAdmin && (\r\n                        <div className=\"mt-2\">\r\n                          <h6>\r\n                            <b>Admin Details</b>\r\n                          </h6>\r\n                          <div\r\n                            className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                          >\r\n                            <div className=\"col-5\">\r\n                              <div>Assigned To</div>\r\n                            </div>\r\n                            <div className=\"col-7\">\r\n                              <div>\r\n                                <Autocomplete\r\n                                  id=\"clear-on-escape\"\r\n                                  clearOnEscape\r\n                                  // disableClearable\r\n                                  onChange={(event, newValue) => {\r\n                                    if (newValue) {\r\n                                      const selectedAdminName = newValue;\r\n                                      if (\r\n                                        adminDetails &&\r\n                                        adminDetails.adminName &&\r\n                                        adminDetails.id &&\r\n                                        adminDetails.adminName.indexOf &&\r\n                                        adminDetails.id.indexOf\r\n                                      ) {\r\n                                        const adminNameIndex =\r\n                                          adminDetails.adminName.indexOf(\r\n                                            selectedAdminName\r\n                                          );\r\n                                        if (\r\n                                          adminNameIndex !== -1 &&\r\n                                          adminDetails.id[adminNameIndex] !==\r\n                                            undefined\r\n                                        ) {\r\n                                          const adminId =\r\n                                            adminDetails.id[adminNameIndex];\r\n                                          handleLeadAssignfromAdmin(\r\n                                            data.id,\r\n                                            adminId\r\n                                          );\r\n                                        } else {\r\n                                          // Handle the case where selectedAdminName is not found\r\n                                          console.error(\r\n                                            `Admin with name ${selectedAdminName} not found.`\r\n                                          );\r\n                                        }\r\n                                      } else {\r\n                                        // Handle the case where adminDetails or its properties are null\r\n                                        console.error(\r\n                                          \"Invalid adminDetails structure\"\r\n                                        );\r\n                                      }\r\n                                    }\r\n                                  }}\r\n                                  value={\r\n                                    adminDetails.adminName &&\r\n                                    adminDetails.id &&\r\n                                    adminDetails.adminName[\r\n                                      adminDetails.id.indexOf(data.assignTo)\r\n                                    ]\r\n                                  }\r\n                                  options={adminDetails.adminName}\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Assign to\"\r\n                                      variant=\"standard\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              </div>\r\n                              {/* {!isSuperAdmin && (\r\n                              <div style={{ lineHeight: \"2\" }}>\r\n                                {adminDetails.adminName &&\r\n                                  adminDetails.id &&\r\n                                  adminDetails.adminName[\r\n                                    adminDetails.id.indexOf(data.assignTo)\r\n                                  ]}\r\n                              </div>\r\n                            )} */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className={` col-sm-8 rounded  ${Candidatedetailstyle.DailyDetailsupdate}`}\r\n                    >\r\n                      <div>\r\n                        <div\r\n                          className={`tab-buttons ${candidateTabsviewStyle.tab_buttons}`}\r\n                        >\r\n                          <div\r\n                            className={`d-flex ${candidateTabsviewStyle.tab_hr}`}\r\n                          >\r\n                            <div\r\n                              onClick={() => handleTabClick(1)}\r\n                              className={` ${\r\n                                activeTab === 1\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              } `}\r\n                            >\r\n                              TimeLine\r\n                            </div>\r\n                            <div\r\n                              onClick={() => handleTabClick(2)}\r\n                              className={` ${\r\n                                activeTab === 2\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              }`}\r\n                            >\r\n                              Notes\r\n                            </div>\r\n                            {/* <div\r\n                              onClick={() => handleTabClick(3)}\r\n                              className={` ${\r\n                                activeTab === 3\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              }`}\r\n                            >\r\n                              Calls\r\n                            </div> */}\r\n                            {/* <div\r\n                              onClick={() => handleTabClick(4)}\r\n                              className={` ${\r\n                                activeTab === 4\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              }`}\r\n                            >\r\n                              Files\r\n                            </div> */}\r\n                          </div>\r\n                          <hr style={{ borderTop: \"10px solid #ccc\" }} />\r\n                        </div>\r\n\r\n                        <div\r\n                          className={`tab-content ${candidateTabsviewStyle.tab_content}`}\r\n                        >\r\n                          {data.id && activeTab === 1 && (\r\n                            <p>\r\n                              <TimelineFacebookMeta facebookId={data.id} />\r\n                            </p>\r\n                          )}\r\n                          {data.id && activeTab === 2 && (\r\n                            <p>\r\n                              {/* <TimeLineForm canId={data.id} /> */}\r\n                              <Card\r\n                                style={{\r\n                                  maxWidth: 700,\r\n                                  minWidth: 350,\r\n                                  margin: \"0 auto\",\r\n                                }}\r\n                              >\r\n                                <CardContent>\r\n                                  <AddNotesFBLead\r\n                                    facebookId={data.id}\r\n\r\n                                    // close={() => {\r\n                                    //   showTimeLineDetails(\"addNotes\", false);\r\n                                    // }}\r\n                                  />\r\n                                </CardContent>\r\n                              </Card>\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {showConfirmationqualifiedPopup && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={1005}\r\n                    childComponent={\r\n                      <>\r\n                        <div>\r\n                          <div className=\"text-center mb-3\">\r\n                            Qualify Candidate\r\n                          </div>\r\n                          <TextField\r\n                            id=\"outlined-multiline-flexible\"\r\n                            label=\"Add Notes\"\r\n                            multiline\r\n                            required\r\n                            onChange={(event) => {\r\n                              setCanputLead((prev) => ({\r\n                                ...prev,\r\n                                notes: event.target.value,\r\n                              }));\r\n                            }}\r\n                            maxRows={4}\r\n                            fullWidth\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                          <button\r\n                            className=\"btn text-white me-3\"\r\n                            onClick={handleCancelClick}\r\n                            style={{ backgroundColor: \"#d00a0a\" }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn text-white\"\r\n                            onClick={ConfirmFormSubmit}\r\n                            disabled={enableSubmit}\r\n                            style={{ backgroundColor: \"#169C50\" }}\r\n                          >\r\n                            Qualify\r\n                          </button>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n\r\n              {showConfirmationPopup && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={1005}\r\n                    childComponent={\r\n                      <>\r\n                        <div>\r\n                          <div className=\"text-center mb-3\">\r\n                            Disqualify Candidate\r\n                          </div>\r\n                          <TextField\r\n                            id=\"outlined-multiline-flexible\"\r\n                            label=\"Add Notes\"\r\n                            multiline\r\n                            required\r\n                            onChange={(event) => {\r\n                              setCanputLead((prev) => ({\r\n                                ...prev,\r\n                                notes: event.target.value,\r\n                              }));\r\n                            }}\r\n                            maxRows={4}\r\n                            fullWidth\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                          <button\r\n                            className=\"btn text-white me-3\"\r\n                            onClick={handleCancelClicknotqualify}\r\n                            style={{ backgroundColor: \"#d00a0a\" }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn text-white\"\r\n                            onClick={ConfirmFormSubmit}\r\n                            disabled={enableSubmit}\r\n                            style={{ backgroundColor: \"#169C50\" }}\r\n                          >\r\n                            Disqualify\r\n                          </button>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n              {showSuccess && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={2000}\r\n                    childComponent={\r\n                      <SuccessTick HeadText=\"Successfully Updated\" />\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n            </>\r\n          }\r\n        />\r\n      </Detailsshow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidateFBLeadDetailsview;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport interviewStyle from \"../Candidate interview schedule list/candidateInterviewSchedule.module.scss\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyModal, numbersOnlyTest } from \"../../../utility\";\r\nimport { GetAllsdminDetails } from \"../../../apiServices\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport { FormControl, Menu, MenuItem, Stack, TextField } from \"@mui/material\";\r\nimport { CandidateJoinedListActions } from \"../../../redux-store/store\";\r\nfunction CandidateJoinedFilter() {\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n  const JoinedList = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter\r\n  );\r\n  const JoinedListRedDot = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.refreshRedDot\r\n  );\r\n  const size = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter.size\r\n  );\r\n  const create = useSelector(\r\n    (state) =>\r\n      state.CandidateJoinedListDetails.CandidateJoinedFilter.createdTime\r\n  );\r\n  const ended = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter.endDate\r\n  );\r\n  const joinedOn = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter.joinedOn\r\n  );\r\n  const joinedEnd = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter.joinedEnd\r\n  );\r\n  const initialValues = {\r\n    adminId: isSuperAdmin ? 0 : localStorage.getItem(\"adminID\"),\r\n    companyName: JoinedList.companyName,\r\n    contactNumber: JoinedList.contactNumber,\r\n    leftTheCompany: JoinedList.leftTheCompany,\r\n  };\r\n  const Dispatch = useDispatch();\r\n  const [formData, setFormData] = useState(initialValues);\r\n  const [adminList, setAdminList] = useState([]);\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [showCustom, setshowCustom] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n  const open = Boolean(anchorEl);\r\n  const [dateRange, setDateRange] = useState({\r\n    start: JoinedList.joinedOn,\r\n    end: JoinedList.joinedEnd,\r\n    dateFilterType: JoinedList.dateFilterType,\r\n  });\r\n\r\n  useEffect(() => {}, [formData]);\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"contactNumber\":\r\n        if (numbersOnlyTest(value) && value.length <= 10) {\r\n          setFormData({ ...formData, [field]: value });\r\n          console.log(value);\r\n        }\r\n        break;\r\n      case \"companyName\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n      case \"leftTheCompany\":\r\n        setFormData({ ...formData, [field]: value });\r\n        console.log(value, \"leftTheCompany\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  const handleAssignToChange = (e) => {\r\n    const { value, name } = e.target;\r\n    console.log(value, name);\r\n\r\n    setFormData((prev) => ({ ...prev, adminId: value }));\r\n  };\r\n  useEffect(() => {\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date(today);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const today = new Date();\r\n      const todayDayOfWeek = today.getDay();\r\n\r\n      const daysToLastMonday = (todayDayOfWeek + 6) % 7;\r\n      const lastMonday = new Date(today);\r\n      lastMonday.setDate(today.getDate() - daysToLastMonday - 7);\r\n\r\n      const startDate = new Date(lastMonday);\r\n      const endDate = new Date(lastMonday);\r\n      endDate.setDate(lastMonday.getDate() + 6);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n\r\n      setAnchorEl(null);\r\n      console.log(startDate, endDate);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const today = new Date();\r\n      const todayDayOfWeek = today.getDay();\r\n\r\n      const daysToLastMonday = (todayDayOfWeek + 13) % 14;\r\n      const lastMonday = new Date(today);\r\n      lastMonday.setDate(today.getDate() - daysToLastMonday - 14);\r\n\r\n      const startDate = new Date(lastMonday);\r\n      const endDate = new Date(lastMonday);\r\n      endDate.setDate(lastMonday.getDate() + 13);\r\n      console.log(startDate, endDate);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        start: today.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const today = new Date(); // Assuming today is the current date\r\n\r\n      const startDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\r\n\r\n      const endDate = new Date(today.getFullYear(), today.getMonth(), 0);\r\n\r\n      console.log(startDate, endDate);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const today = new Date(); // Assuming today is the current date\r\n\r\n      // Calculate yesterday's date\r\n      const yesterday = new Date(today);\r\n      yesterday.setDate(today.getDate() - 1);\r\n\r\n      // Set the start time to 12:00 AM\r\n      const startDate = new Date(yesterday);\r\n      startDate.setHours(0, 0, 0, 0);\r\n\r\n      // Set the end time to 11:59 PM\r\n      const endDate = new Date(yesterday);\r\n      endDate.setHours(23, 59, 59, 999);\r\n\r\n      console.log(startDate, endDate);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        start: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        end: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const isValid = dateRange.start && dateRange.end;\r\n\r\n    if (!dateRange.start) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!dateRange.end) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleApply = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n  function handleClickCross(e) {\r\n    e.preventDefault();\r\n    Dispatch(\r\n      CandidateJoinedListActions.setJoinedFilter({\r\n        ...formData,\r\n        page: 1,\r\n        size: size,\r\n        // createdTime: create,\r\n        // endDate: ended,\r\n        joinedOn: joinedOn,\r\n        joinedEnd: joinedEnd,\r\n        dateFilterType: dateRange.dateFilterType,\r\n      })\r\n    );\r\n    // setShowRedDot(false);\r\n    setShowFilter(false);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    Dispatch(\r\n      CandidateJoinedListActions.setJoinedFilter({\r\n        ...formData,\r\n        page: 1,\r\n        size: size,\r\n        joinedOn: dateRange.start || joinedOn,\r\n        joinedEnd: dateRange.end || joinedEnd,\r\n        dateFilterType: dateRange.dateFilterType || \"\",\r\n      })\r\n    );\r\n\r\n    const isFilterApplied = JoinedList.contactNumber || JoinedList.companyName;\r\n\r\n    Dispatch(CandidateJoinedListActions.setJoinedFilterRedDot(isFilterApplied));\r\n\r\n    setShowFilter(false);\r\n  };\r\n  function handleClear(e) {\r\n    e.preventDefault();\r\n    setFormData({\r\n      adminId: isSuperAdmin ? 0 : localStorage.getItem(\"adminID\"),\r\n      contactNumber: \"\",\r\n      companyName: \"\",\r\n      leftTheCompany: false,\r\n    });\r\n    setDateRange({\r\n      start: null,\r\n      end: null,\r\n      dateFilterType: \"\",\r\n    });\r\n    setShowRedDot(false);\r\n    Dispatch(\r\n      CandidateJoinedListActions.setJoinedFilter({\r\n        ...initialValues,\r\n        joinedOn: null,\r\n        joinedEnd: null,\r\n        page: 1,\r\n        size: size,\r\n        dateFilterType: \"\",\r\n      })\r\n    );\r\n  }\r\n  const InterviewStatus = [\r\n    {\r\n      value: true,\r\n      label: \"Left Company\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button\r\n          className={`rounded-pill d-flex align-items-center ${interviewStyle.Filterbutton}`}\r\n          variant=\"contained\"\r\n          onClick={() => setShowFilter(true)}\r\n        >\r\n          <BiFilterAlt />{\" \"}\r\n          <p\r\n            style={{\r\n              backgroundColor: JoinedListRedDot ? \"red\" : \"transparent\",\r\n              width: \"10px\",\r\n              height: \"10px\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          ></p>{\" \"}\r\n          Filter\r\n        </button>\r\n      </div>\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={1001}\r\n            childComponent={\r\n              <div className={`${interviewStyle.BoxContainerWidth}`}>\r\n                <>\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h4 className=\"text-center mb-2\">Filter by</h4>\r\n                    <h3>\r\n                      <span\r\n                        onClick={handleClickCross}\r\n                        className=\"btn btn-outline-danger\"\r\n                        style={{ cursor: \"pointer\", fontSize: 15 }}\r\n                      >\r\n                        <AiOutlineClose />\r\n                      </span>\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <form\r\n                    onSubmit={(e) => {\r\n                      handleSubmit(e);\r\n                    }}\r\n                  >\r\n                    <Stack className=\"mt-1\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                          <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Mobile number\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            value={formData.contactNumber}\r\n                            onChange={(event) =>\r\n                              handleFieldChange(\r\n                                \"contactNumber\",\r\n                                event.target.value\r\n                              )\r\n                            }\r\n                            InputProps={{\r\n                              startAdornment: (\r\n                                <span\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <AiOutlinePhone\r\n                                    style={{ marginRight: \"5px\" }}\r\n                                  />{\" \"}\r\n                                  +91\r\n                                </span>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                          <FormControl variant=\"outlined\" fullWidth>\r\n                            <TextField\r\n                              label=\"Created on\"\r\n                              id=\"basic-button\"\r\n                              value={`${dateRange.dateFilterType}`}\r\n                              // value={`${dateRange.start} - ${dateRange.end}`}\r\n                              aria-controls={open ? \"basic-menu\" : undefined}\r\n                              aria-haspopup=\"true\"\r\n                              aria-expanded={open ? \"true\" : undefined}\r\n                              onClick={handleClick}\r\n                            ></TextField>\r\n                            <Menu\r\n                              id=\"basic-menu\"\r\n                              anchorEl={anchorEl}\r\n                              open={open}\r\n                              onClose={handleClose}\r\n                              MenuListProps={{\r\n                                \"aria-labelledby\": \"basic-button\",\r\n                              }}\r\n                            >\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"today\");\r\n                                }}\r\n                                style={{ width: \"210px\" }}\r\n                              >\r\n                                Today\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"yesterday\");\r\n                                }}\r\n                              >\r\n                                Yesterday\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastWeek\");\r\n                                }}\r\n                              >\r\n                                Last 1 Week\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastTwoWeeks\");\r\n                                }}\r\n                              >\r\n                                Last 2 Week\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastMonth\");\r\n                                }}\r\n                              >\r\n                                Last Month\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"custom\");\r\n                                }}\r\n                              >\r\n                                Custom Date\r\n                              </MenuItem>\r\n                            </Menu>\r\n                          </FormControl>\r\n                          {/*  */}\r\n                          {showCustom && (\r\n                            <MyModal>\r\n                              <ModalContainer\r\n                                zIndex={1005}\r\n                                childComponent={\r\n                                  <div\r\n                                    style={{\r\n                                      minWidth: \"400px\",\r\n                                      width: \"auto\",\r\n                                    }}\r\n                                  >\r\n                                    <>\r\n                                      <div>\r\n                                        <form>\r\n                                          <p className=\"text-center \">\r\n                                            Select Custom Date{\" \"}\r\n                                          </p>\r\n                                          <div className=\"mt-2\">\r\n                                            <label htmlFor=\"start\">From</label>\r\n                                            <input\r\n                                              className={`form-control ${\r\n                                                validationErrors.start\r\n                                                  ? \"is-invalid\"\r\n                                                  : \"\"\r\n                                              }`}\r\n                                              style={{ width: \"100%\" }}\r\n                                              type=\"date\"\r\n                                              id=\"start\"\r\n                                              onChange={(value) =>\r\n                                                handleCustomDate(\r\n                                                  value,\r\n                                                  \"startDate\"\r\n                                                )\r\n                                              }\r\n                                              name=\"trip-start\"\r\n                                              min=\"2020-01-01\"\r\n                                              max={\r\n                                                new Date()\r\n                                                  .toISOString()\r\n                                                  .split(\"T\")[0]\r\n                                              }\r\n                                            />\r\n                                            {validationErrors.start && (\r\n                                              <div className=\"invalid-feedback\">\r\n                                                Start date is required.\r\n                                              </div>\r\n                                            )}\r\n                                          </div>\r\n                                          <div className=\"mt-2\">\r\n                                            <label htmlFor=\"end\">To</label>\r\n                                            <input\r\n                                              className={`form-control ${\r\n                                                validationErrors.end\r\n                                                  ? \"is-invalid\"\r\n                                                  : \"\"\r\n                                              }`}\r\n                                              style={{ width: \"100%\" }}\r\n                                              type=\"date\"\r\n                                              id=\"end\"\r\n                                              onChange={(value) =>\r\n                                                handleCustomDate(\r\n                                                  value,\r\n                                                  \"endDate\"\r\n                                                )\r\n                                              }\r\n                                              name=\"trip-end\"\r\n                                              min=\"2020-01-01\"\r\n                                              max={\r\n                                                new Date()\r\n                                                  .toISOString()\r\n                                                  .split(\"T\")[0]\r\n                                              }\r\n                                            />\r\n                                            {validationErrors.end && (\r\n                                              <div className=\"invalid-feedback\">\r\n                                                End date is required.\r\n                                              </div>\r\n                                            )}\r\n                                          </div>\r\n                                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                                            <button\r\n                                              onClick={() => {\r\n                                                setValidationErrors({\r\n                                                  start: false,\r\n                                                  end: false,\r\n                                                });\r\n                                                setshowCustom(false);\r\n                                              }}\r\n                                              style={{\r\n                                                backgroundColor: \"#b2261c\",\r\n                                              }}\r\n                                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                                            >\r\n                                              Close\r\n                                            </button>\r\n                                            <button\r\n                                              onClick={handleApply}\r\n                                              // color=\"primary\"\r\n                                              className=\"btn rounded-pill text-white px-4\"\r\n                                              style={{\r\n                                                backgroundColor: \"#169C50\",\r\n                                              }}\r\n                                            >\r\n                                              Apply\r\n                                            </button>\r\n                                          </div>\r\n                                        </form>\r\n                                      </div>\r\n                                    </>\r\n                                  </div>\r\n                                }\r\n                              />\r\n                            </MyModal>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                          <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Company name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={formData.companyName}\r\n                            onChange={(event) =>\r\n                              handleFieldChange(\r\n                                \"companyName\",\r\n                                event.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                          <div className=\"col-sm-4\">\r\n                            {\" \"}\r\n                            <TextField\r\n                              id=\"interviewStatus\"\r\n                              name=\"interviewStatus\"\r\n                              label=\"Status\"\r\n                              // className=\"mt-2\"\r\n                              select\r\n                              value={formData.leftTheCompany}\r\n                              fullWidth\r\n                              onChange={(event) =>\r\n                                handleFieldChange(\r\n                                  \"leftTheCompany\",\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                            >\r\n                              {InterviewStatus.map((option) => (\r\n                                <MenuItem\r\n                                  key={option.value}\r\n                                  value={option.value}\r\n                                >\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          </div>\r\n                          <div className=\"col-sm-4\">\r\n                            {adminList && isSuperAdmin && (\r\n                              <TextField\r\n                                onChange={(e) => handleAssignToChange(e)}\r\n                                name=\"AssignedTo\"\r\n                                id=\"AssignedTo\"\r\n                                className=\"form-control\"\r\n                                select\r\n                                fullWidth\r\n                                label=\"Assigned To\"\r\n                                value={formData.adminId}\r\n                                defaultValue={formData.adminId}\r\n                              >\r\n                                <MenuItem value={0} selected>\r\n                                  ALL\r\n                                </MenuItem>\r\n                                {adminList.map((el) => (\r\n                                  <MenuItem key={el.id} value={el.id}>\r\n                                    {el.userName}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </TextField>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row gap-2 justify-content-end mt-2\">\r\n                        <button\r\n                          className={`rounded-pill ${interviewStyle.Filterbutton}`}\r\n                          variant=\"outlined\"\r\n                          onClick={(e) => {\r\n                            handleClear(e);\r\n                          }}\r\n                        >\r\n                          Clear All\r\n                        </button>\r\n                        <button\r\n                          className={`rounded-pill ${interviewStyle.search}`}\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          sx={{ minWidth: \"150px\" }}\r\n                        >\r\n                          Search\r\n                          {/* {!formData.loading && !formData.completed && \"Search\"}\r\n\r\n                          {\r\n                            formData.loading && (\r\n                              <div className=\"spinner-border spinner-border-sm text-light\"></div>\r\n                            ) // Add spinner here\r\n                          }\r\n                          {formData.completed && \"Submitted\"} */}\r\n                        </button>\r\n                      </div>\r\n                    </Stack>\r\n                  </form>\r\n                </>\r\n              </div>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateJoinedFilter;\r\n","/* eslint-disable eqeqeq */\r\nimport React, { useState } from \"react\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { MyModal, numbersOnlyTest } from \"../../../utility\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { FormControl, FormHelperText, TextField } from \"@mui/material\";\r\nimport { PostInvoiceSendJoinedCandidate } from \"../../../apiServices\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport companylogo from \"../../../assets/images/uploadfile.png\";\r\nimport invoiceimage from \"../../../assets/images/invoice.png\";\r\nimport SuccessTick from \"../../../components/success_tick\";\r\nfunction SendInvoiceToEmployer({ close }) {\r\n  const [invoiceData, setInvoiceData] = useState({\r\n    empId: { val: \"\", err: \"\" },\r\n    contactPersonName: { val: \"\", err: \"\" },\r\n    invoiceNumber: { val: \"\", err: \"\" },\r\n    invoiceDate: { val: null, err: \"\" },\r\n    invoiceAmount: { val: \"\", err: \"\" },\r\n    dueDate: { val: null, err: \"\" },\r\n    emailId: { val: \"\", err: \"\" },\r\n    invoiceAttachment: { val: null, err: \"\" },\r\n  });\r\n  const [showSuccess, setshowSuccess] = useState(false);\r\n  // const handleFileChange = (event) => {\r\n  //   const file = event.target.files[0];\r\n\r\n  //   if (file) {\r\n  //     setInvoiceData({\r\n  //       ...invoiceData,\r\n  //       invoiceAttachment: {\r\n  //         val: {\r\n  //           name: file,\r\n  //           dataURL: URL.createObjectURL(file),\r\n  //         },\r\n  //         err: \"\",\r\n  //       },\r\n  //     });\r\n  //   } else {\r\n  //     setInvoiceData({\r\n  //       ...invoiceData,\r\n  //       invoiceAttachment: {\r\n  //         val: null,\r\n  //         err: \"Please select a file.\",\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // };\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    setInvoiceData((prev) => ({\r\n      ...prev,\r\n      invoiceAttachment: { val: selectedFile, err: \"\" },\r\n    }));\r\n  };\r\n  const resetFileInput = () => {\r\n    // Reset the file input by setting its value to an empty string\r\n    document.getElementById(\"fileInput\").value = \"\";\r\n    setInvoiceData({\r\n      ...invoiceData,\r\n      invoiceAttachment: {\r\n        val: null,\r\n        err: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  // const handleInputChange = (field, value) => {\r\n  //   setInvoiceData((prevData) => ({\r\n  //     ...prevData,\r\n  //     [field]: { val: value, err: validateField(field, value) },\r\n  //   }));\r\n  // };\r\n  const handleInputChange = (field, value) => {\r\n    setInvoiceData((prevData) => ({\r\n      ...prevData,\r\n      [field]: { val: value, err: validateField(field, value) },\r\n    }));\r\n  };\r\n  const validateField = (field, value) => {\r\n    if (value === \"\" || value === null) {\r\n      return `Please fill out the field`;\r\n    }\r\n\r\n    if (field === \"empId\") {\r\n      const isValidEmpId = numbersOnlyTest(value);\r\n      if (!isValidEmpId) {\r\n        return \"Please enter a valid 6-digit integer for Employer Id.\";\r\n      }\r\n    }\r\n\r\n    if (field === \"invoiceAmount\") {\r\n      const amount = parseFloat(value);\r\n\r\n      if (isNaN(amount) || amount <= 0) {\r\n        return \"Please enter a valid invoice amount.\";\r\n      }\r\n    }\r\n\r\n    return \"\"; // No validation error\r\n  };\r\n  const validateForm = () => {\r\n    let hasErrors = false;\r\n\r\n    Object.keys(invoiceData).forEach((field) => {\r\n      const value = invoiceData[field].val;\r\n      const error = validateField(field, value);\r\n\r\n      if (error) {\r\n        hasErrors = true;\r\n        setInvoiceData((prevData) => ({\r\n          ...prevData,\r\n          [field]: { ...prevData[field], err: error },\r\n        }));\r\n      } else {\r\n        // Reset error message to empty string if value is empty or null\r\n        setInvoiceData((prevData) => ({\r\n          ...prevData,\r\n          [field]: { ...prevData[field], err: \"\" },\r\n        }));\r\n      }\r\n    });\r\n\r\n    return !hasErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm()) {\r\n      PostInvoiceSendJoinedCandidate(invoiceData).then((data) => {\r\n        if (data.code == 400) return;\r\n        setshowSuccess(true);\r\n        console.log(data, \"data\");\r\n        setTimeout(() => {\r\n          setshowSuccess(false);\r\n        }, 2000);\r\n        setInvoiceData({\r\n          empId: { val: \"\", err: \"\" },\r\n          contactPersonName: { val: \"\", err: \"\" },\r\n          invoiceNumber: { val: \"\", err: \"\" },\r\n          invoiceDate: { val: null, err: \"\" },\r\n          invoiceAmount: { val: \"\", err: \"\" },\r\n          dueDate: { val: null, err: \"\" },\r\n          emailId: { val: \"\", err: \"\" },\r\n          invoiceAttachment: { val: null, err: \"\" },\r\n        });\r\n      });\r\n    } else {\r\n      // Form has validation errors\r\n      console.log(\"Form validation failed. Please check the fields.\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <MyModal>\r\n        <ModalContainer\r\n          childComponent={\r\n            <>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <h5>Invoice Attachment</h5>\r\n                </div>\r\n                <div>\r\n                  {\" \"}\r\n                  <button className=\"btn btn-danger\" onClick={() => close()}>\r\n                    <IoClose />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div style={{ width: \"600px\" }}>\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"\">\r\n                    <div className=\"row d-flex align-items-center justify-content-center\">\r\n                      <div className=\"col-sm-3 mt-2\">\r\n                        <FormControl\r\n                          isInvalid={Boolean(invoiceData.invoiceAttachment.err)}\r\n                        >\r\n                          <label htmlFor=\"fileInput\">\r\n                            {invoiceData.invoiceAttachment.val ? (\r\n                              <img\r\n                                src={invoiceimage}\r\n                                alt=\"Invoice Attachment\"\r\n                                className=\"\"\r\n                                style={{\r\n                                  cursor: \"pointer\",\r\n                                  width: \"100px\", // Adjust the width as needed\r\n                                  height: \"100px\", // Adjust the height as needed\r\n                                }}\r\n                                onClick={resetFileInput}\r\n                              />\r\n                            ) : (\r\n                              <>\r\n                                <img\r\n                                  className=\"\"\r\n                                  src={companylogo}\r\n                                  alt=\"Upload Icon\"\r\n                                  style={{\r\n                                    cursor: \"pointer\",\r\n                                    width: \"100px\", // Adjust the width as needed\r\n                                    height: \"100px\", // Adjust the height as needed\r\n                                  }}\r\n                                />\r\n                                {/* Upload file */}\r\n                              </>\r\n                            )}\r\n                          </label>\r\n                          <input\r\n                            id=\"fileInput\"\r\n                            type=\"file\"\r\n                            style={{ display: \"none\" }}\r\n                            onChange={handleFileChange}\r\n                            accept=\"application/pdf, image/*\"\r\n                          />\r\n                          <FormHelperText style={{ color: \"#d44349\" }}>\r\n                            {invoiceData.invoiceAttachment.err}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                        {invoiceData.invoiceAttachment.val && (\r\n                          <p>{invoiceData.invoiceAttachment.val.name}</p>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-sm-9 mt-2\">\r\n                        <TextField\r\n                          id=\"outlined-basic\"\r\n                          fullWidth\r\n                          label=\"Employer Id\"\r\n                          variant=\"outlined\"\r\n                          value={invoiceData.empId.val}\r\n                          inputProps={{\r\n                            maxLength: 6,\r\n                          }}\r\n                          onChange={(e) =>\r\n                            handleInputChange(\"empId\", e.target.value)\r\n                          }\r\n                          onInput={(e) => {\r\n                            e.target.value = e.target.value.replace(\r\n                              /[^0-9]/g,\r\n                              \"\"\r\n                            );\r\n                          }}\r\n                          error={Boolean(invoiceData.empId.err)}\r\n                          helperText={invoiceData.empId.err}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-12 mt-2\">\r\n                      <TextField\r\n                        id=\"outlined-basic\"\r\n                        fullWidth\r\n                        label=\"Contact Person Name\"\r\n                        variant=\"outlined\"\r\n                        value={invoiceData.contactPersonName.val}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\"contactPersonName\", e.target.value)\r\n                        }\r\n                        error={Boolean(invoiceData.contactPersonName.err)}\r\n                        helperText={invoiceData.contactPersonName.err}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-12 mt-2\">\r\n                      <TextField\r\n                        id=\"outlined-basic\"\r\n                        fullWidth\r\n                        label=\"EmailID\"\r\n                        variant=\"outlined\"\r\n                        value={invoiceData.emailId.val}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\"emailId\", e.target.value)\r\n                        }\r\n                        error={Boolean(invoiceData.emailId.err)}\r\n                        helperText={invoiceData.emailId.err}\r\n                      />\r\n                    </div>\r\n                    <div className=\"row mt-2 \">\r\n                      <div className=\"col-sm-6 mt-2\">\r\n                        {\" \"}\r\n                        <TextField\r\n                          id=\"outlined-basic\"\r\n                          fullWidth\r\n                          label=\"Invoice Number\"\r\n                          variant=\"outlined\"\r\n                          value={invoiceData.invoiceNumber.val}\r\n                          onChange={(e) =>\r\n                            handleInputChange(\"invoiceNumber\", e.target.value)\r\n                          }\r\n                          error={Boolean(invoiceData.invoiceNumber.err)}\r\n                          helperText={invoiceData.invoiceNumber.err}\r\n                        />\r\n                      </div>{\" \"}\r\n                      <div className=\"col-sm-6 mt-2 me-0\">\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                          <FormControl\r\n                            fullWidth\r\n                            error={Boolean(invoiceData.invoiceDate.err)}\r\n                          >\r\n                            <DatePicker\r\n                              autoFocus\r\n                              label=\"Invoice Date\"\r\n                              value={\r\n                                invoiceData.invoiceDate.val\r\n                                  ? new Date(invoiceData.invoiceDate.val)\r\n                                  : null\r\n                              }\r\n                              onChange={(date) =>\r\n                                handleInputChange(\"invoiceDate\", date)\r\n                              }\r\n                            />\r\n                            <FormHelperText>\r\n                              {invoiceData.invoiceDate.err}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        </LocalizationProvider>\r\n                      </div>\r\n                    </div>{\" \"}\r\n                    <div className=\"row mt-2\">\r\n                      <div className=\"col-sm-6\">\r\n                        <TextField\r\n                          id=\"outlined-basic\"\r\n                          fullWidth\r\n                          type=\"number\"\r\n                          label=\"Invoice Amount.\"\r\n                          variant=\"outlined\"\r\n                          value={invoiceData.invoiceAmount.val}\r\n                          onChange={(e) =>\r\n                            handleInputChange(\"invoiceAmount\", e.target.value)\r\n                          }\r\n                          error={Boolean(invoiceData.invoiceAmount.err)}\r\n                          helperText={invoiceData.invoiceAmount.err}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-sm-6\">\r\n                        {\" \"}\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                          <FormControl\r\n                            fullWidth\r\n                            error={Boolean(invoiceData.dueDate.err)}\r\n                          >\r\n                            <DatePicker\r\n                              label=\"Due Date\"\r\n                              value={\r\n                                invoiceData.dueDate.val\r\n                                  ? new Date(invoiceData.dueDate.val)\r\n                                  : null\r\n                              }\r\n                              onChange={(date) =>\r\n                                handleInputChange(\"dueDate\", date)\r\n                              }\r\n                            />\r\n                            <FormHelperText>\r\n                              {invoiceData.dueDate.err}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        </LocalizationProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex justify-content-end mt-3\">\r\n                    <button type=\"submit\" className=\"btn btn-success\">\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          }\r\n        />\r\n        {showSuccess && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex={5000}\r\n              childComponent={\r\n                <SuccessTick HeadText=\"Invoice sent Successfully \" />\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n      </MyModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendInvoiceToEmployer;\r\n","// import * as XLSX from \"xlsx\";\r\n\r\n// const downloadExcelFile = (data, filename) => {\r\n//   // Convert date values to Excel date format\r\n//   const dataArray = [data];\r\n\r\n//   const ws = XLSX.utils.json_to_sheet(dataArray, {\r\n//     cellDates: true,\r\n//   });\r\n\r\n//   // Manually set a fixed column width for all columns (adjust the value based on your needs)\r\n//   const columnWidth = 15;\r\n\r\n//   // Get the range of cell addresses in the worksheet\r\n//   const range = XLSX.utils.decode_range(ws[\"!ref\"]);\r\n\r\n//   // Ensure that !cols property exists in the worksheet\r\n//   if (!ws[\"!cols\"]) {\r\n//     ws[\"!cols\"] = [];\r\n//   }\r\n\r\n//   // Apply the fixed column width to all columns\r\n//   for (let i = range.s.c; i <= range.e.c; i++) {\r\n//     ws[\"!cols\"][i] = { wch: columnWidth };\r\n//   }\r\n\r\n//   const wb = XLSX.utils.book_new();\r\n\r\n//   XLSX.utils.book_append_sheet(wb, ws, \"Sheet 1\");\r\n\r\n//   XLSX.writeFile(wb, filename);\r\n// };\r\n// export default downloadExcelFile;\r\n\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst downloadExcelFile = (dataArray, filename) => {\r\n  // Convert date values to Excel date format\r\n\r\n  const ws = XLSX.utils.json_to_sheet(dataArray, {\r\n    cellDates: true,\r\n  });\r\n\r\n  // Manually set a fixed column width for all columns (adjust the value based on your needs)\r\n  const columnWidth = 15;\r\n\r\n  // Get the range of cell addresses in the worksheet\r\n  const range = XLSX.utils.decode_range(ws[\"!ref\"]);\r\n\r\n  // Ensure that !cols property exists in the worksheet\r\n  if (!ws[\"!cols\"]) {\r\n    ws[\"!cols\"] = [];\r\n  }\r\n\r\n  // Apply the fixed column width to all columns\r\n  for (let i = range.s.c; i <= range.e.c; i++) {\r\n    ws[\"!cols\"][i] = { wch: columnWidth };\r\n  }\r\n\r\n  const wb = XLSX.utils.book_new();\r\n\r\n  XLSX.utils.book_append_sheet(wb, ws, \"Sheet 1\");\r\n\r\n  XLSX.writeFile(wb, filename);\r\n};\r\n\r\nexport default downloadExcelFile;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable no-redeclare */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport canLeadStyle from \"../CandidateLeadTable/candidateLead.module.scss\";\r\nimport interviewStyle from \"../Candidate interview schedule list/candidateInterviewSchedule.module.scss\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormHelperText,\r\n  Pagination,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  tableCellClasses,\r\n} from \"@mui/material\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { LuRefreshCcw } from \"react-icons/lu\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  GetJoinedCandidate,\r\n  PutInterviewStatus,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../apiServices\";\r\nimport Nojoid from \"../Candidate interview schedule list/Nojoid\";\r\nimport {\r\n  DMMMYYYY_formate,\r\n  MyModal,\r\n  capitalizeWords,\r\n  formatDate,\r\n  textTruncate,\r\n} from \"../../../utility\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CandidateJoinedListActions,\r\n  commonPopupActions,\r\n} from \"../../../redux-store/store\";\r\nimport CandidateJoinedFilter from \"./CandidateJoinedFilter\";\r\nimport SendInvoiceToEmployer from \"./SendInvoiceToEmployer\";\r\nimport { MdSendToMobile } from \"react-icons/md\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport SuccessTick from \"../../../components/success_tick\";\r\nimport downloadExcelFile from \"../../../components/xlsxSheetDownLoad/xlsxDownload\";\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#e2dedeed\",\r\n    color: \"#545454f0\",\r\n    maxWidth: \"350px\",\r\n    padding: \"8px\",\r\n    \"@media (max-width: 992px)\": {\r\n      // backgroundColor: \"red\",\r\n      // padding: \"5px 50px\",\r\n      // textAlign: \"left\",\r\n    },\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    padding: \"8px\",\r\n    \"@media (max-width: 992px)\": {\r\n      // backgroundColor: \"red\",\r\n      // padding: \"5px 50px\",\r\n      // textAlign: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CandidateJoined() {\r\n  //   const [formData, setFormDate] = useState({\r\n  //     page: 1,\r\n  //     size: 10,\r\n  //   });\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n  const JoinedList = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter\r\n  );\r\n  const size = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter.size\r\n  );\r\n  const [currentMetaDetail, setCurrentMetaDetail] = useState();\r\n  const [currentJoningDate, setCurrenJoningDate] = useState();\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [pageCount, setpageCount] = useState();\r\n  const [openInvoiceSend, setOpenInvoiceSend] = useState(false);\r\n  const Dispatch = useDispatch();\r\n  const [joinedCandidateList, setJoinedCandidateList] = useState([]);\r\n  const [adminName, setAdminName] = useState([]);\r\n  const [adminid, setAdminId] = useState([]);\r\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState([]);\r\n  const [isNotesEmpty, setIsNotesEmpty] = useState(false);\r\n  const [currentInterviewId, setCurrentInterviewId] = useState(\"\");\r\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\r\n  const [interviewStatus, setInterviewStatus] = useState({\r\n    caninterviewid: \"\",\r\n    statusfield: \"\",\r\n    date: \"\",\r\n    notes: \"\",\r\n  });\r\n  const handleClick = (id) => {\r\n    setCurrentInterviewId(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((data) => {\r\n      console.log(data, \"All admin details\");\r\n      const adminNames = data.map((item) => item.userName);\r\n      const adminIds = data.map((item) => item.id);\r\n      setAdminName(adminNames);\r\n      setAdminId(adminIds);\r\n    });\r\n\r\n    let adminId = isSuperAdmin ? 0 : localStorage.getItem(\"adminID\");\r\n    Dispatch(CandidateJoinedListActions.setJoinedFilterAdminId(adminId));\r\n  }, [adminDetails]);\r\n  useEffect(() => {}, [JoinedList]);\r\n  useEffect(() => {\r\n    GetJoinedCandidate(JoinedList).then((data) => {\r\n      console.log(data, \"Candidate Joinded response\");\r\n      setJoinedCandidateList(data.candidateList);\r\n      setpageCount(Math.ceil(data.totalCount / size));\r\n    });\r\n  }, [JoinedList]);\r\n  const calculateDuration = (joinedOn) => {\r\n    const joinedDate = new Date(joinedOn);\r\n    const currentDate = new Date();\r\n    const timeDifference = currentDate - joinedDate;\r\n    return Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n  };\r\n  const handleReset = () => {\r\n    // setShowLoader(true);\r\n\r\n    setJoinedCandidateList({\r\n      page: 1,\r\n      size: 10,\r\n    });\r\n\r\n    // Fetch data after resetting\r\n    GetJoinedCandidate(JoinedList).then((data) => {\r\n      console.log(data, \"Candidate Joinded response\");\r\n      setJoinedCandidateList(data.candidateList);\r\n      setpageCount(Math.ceil(data.totalCount / size));\r\n    });\r\n  };\r\n  function candidatePagination(event, page) {\r\n    const currentPage = page;\r\n\r\n    Dispatch(CandidateJoinedListActions.setJoinedFilterPage(currentPage));\r\n  }\r\n  function candidateSize(size) {\r\n    Dispatch(CandidateJoinedListActions.setJoinedFilterSize(size));\r\n\r\n    console.log(size);\r\n  }\r\n  const handleCandidateDetails = async (candidateId, type) => {\r\n    let data;\r\n    if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateId);\r\n    } else if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n  const handlePopupDetails = (id, type) => {\r\n    console.log(id);\r\n\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: type,\r\n        id: id,\r\n      })\r\n    );\r\n  };\r\n  function handleCloseNotes() {\r\n    setShowConfirmPopup(false);\r\n    setIsNotesEmpty(false);\r\n  }\r\n\r\n  function handleConfirmationOpen() {\r\n    setShowConfirmPopup(true);\r\n  }\r\n  const handleRadioBtn = (candidateId, statusFieldName, event) => {\r\n    // let isChecked = event.target.checked;\r\n    console.log(candidateId, \"candidateId\");\r\n    if (!event || event) {\r\n      handleConfirmationOpen();\r\n      setInterviewStatus((prev) => ({\r\n        ...prev,\r\n        caninterviewid: currentInterviewId,\r\n        statusfield: statusFieldName,\r\n      }));\r\n\r\n      // Retrieve contactPersonName from CandidateInterviewList\r\n      const selectedCandidate = joinedCandidateList.find(\r\n        (candidate) => candidate.candidateInterview.id === currentInterviewId\r\n      );\r\n      // if (selectedCandidate) {\r\n      //   setContactPersonName(selectedCandidate.CandidateModel.firstName);\r\n      // }\r\n      // if (selectedCandidate) {\r\n      //   setcontactID(selectedCandidate.candidateInterview.id);\r\n      // }\r\n    }\r\n  };\r\n  const ConfirmFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // if (interviewStatus.notes.trim() === \"\") {\r\n    //   setIsNotesEmpty(true);\r\n    //   return;\r\n    // }\r\n    if (interviewStatus.notes.trim() === \"\") {\r\n      setIsNotesEmpty(true);\r\n      return;\r\n    } else {\r\n      PutInterviewStatus(\r\n        interviewStatus.caninterviewid,\r\n        interviewStatus.statusfield,\r\n        interviewStatus.date,\r\n        interviewStatus.notes\r\n      ).then(() => {\r\n        setShowSuccess(true);\r\n        setTimeout(() => {\r\n          setShowSuccess(false);\r\n          setShowConfirmPopup(false);\r\n        }, 3000);\r\n      });\r\n    }\r\n  };\r\n  function handleCloseNotes() {\r\n    setShowConfirmPopup(false);\r\n    setIsNotesEmpty(false);\r\n  }\r\n\r\n  function handleConfirmationOpen() {\r\n    setShowConfirmPopup(true);\r\n  }\r\n  useEffect(() => {\r\n    console.log(\"Checked Values:\", selectedCheckboxes);\r\n  }, [selectedCheckboxes]);\r\n\r\n  const data = [\r\n    {\r\n      candidateid: currentJoningDate?.candidateInterview?.id,\r\n      \"Candidate Name\": capitalizeWords(\r\n        (currentMetaDetail?.firstName || \"N/A\") +\r\n          \" \" +\r\n          (currentMetaDetail?.lastName || \"\")\r\n      ),\r\n      \"Mobile Number\": currentMetaDetail?.mobileNumber || \"N/A\",\r\n      \"Job Category\":\r\n        capitalizeWords(currentJoningDate?.JobsModel?.jobCategory) || \"N/A\",\r\n      \"Company Name\":\r\n        capitalizeWords(currentJoningDate?.candidateInterview?.companyName) ||\r\n        \"N/A\",\r\n      \"Joining Date\": formatDate(\r\n        currentJoningDate?.candidateInterview?.joinedOn\r\n      ),\r\n    },\r\n  ];\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n      const existingIndex = prevSelectedCheckboxes.findIndex(\r\n        (item) => item.id === id\r\n      );\r\n\r\n      if (existingIndex !== -1) {\r\n        return [\r\n          ...prevSelectedCheckboxes.slice(0, existingIndex),\r\n          ...prevSelectedCheckboxes.slice(existingIndex + 1),\r\n        ];\r\n      } else {\r\n        // Add new checkbox with associated data\r\n        return [...prevSelectedCheckboxes, { id, data }];\r\n      }\r\n    });\r\n  };\r\n  const getDataForId = (id) => {\r\n    const selectedData = selectedCheckboxes.flatMap((checkbox) => {\r\n      return checkbox.data.map((data) => ({\r\n        \"Candidate Name\": data[\"Candidate Name\"],\r\n        \"Mobile Number\": data[\"Mobile Number\"],\r\n        \"Company Name\": data[\"Company Name\"],\r\n        \"Job Category\": data[\"Job Category\"],\r\n        \"Joining Date\": data[\"Joining Date\"],\r\n        // \"candidate id\": data[\"candidate id\"],\r\n      }));\r\n    });\r\n\r\n    console.log(selectedData, \"hgh\");\r\n    return selectedData;\r\n  };\r\n\r\n  const handleXlsxDownload = (id) => {\r\n    downloadExcelFile(getDataForId(), \"example.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className={`${interviewStyle.FilterHead}`}>\r\n          {\" \"}\r\n          <div className=\"d-flex \">\r\n            Show {\"  \"}\r\n            <select\r\n              name=\"\"\r\n              id=\"\"\r\n              className=\"px-1 py-1 mx-2\"\r\n              onChange={(event) => candidateSize(event.target.value)}\r\n            >\r\n              <option selected value=\"10\">\r\n                10\r\n              </option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"30\">30</option>\r\n            </select>\r\n            {\"   \"}\r\n            Entries\r\n          </div>\r\n          <div className={`${canLeadStyle.filterAdduser}`}>\r\n            {/* <div className=\"mt-1 me-2 \">Total Count : {totalCount}</div> */}\r\n            {/* <div\r\n              className=\"btn btn-danger p-1 me-2 mx-2 ms-auto mt-1\"\r\n                          onClick={handleXlsxDownload.bind(\r\n                null,\r\n                currentJoningDate?.candidateInterview?.id\r\n              )}\r\n            >\r\n              download\r\n            </div> */}\r\n            <div\r\n              className=\"p-1 success me-2 mx-2 ms-auto mt-1\"\r\n              onClick={handleReset}\r\n            >\r\n              <LuRefreshCcw />\r\n            </div>\r\n            <button\r\n              className={`me-2 ${canLeadStyle.NewLead}`}\r\n              onClick={() => setOpenInvoiceSend(true)}\r\n            >\r\n              <MdSendToMobile /> Send Invoice\r\n            </button>\r\n            <CandidateJoinedFilter />\r\n          </div>\r\n        </div>\r\n        <div className={`${interviewStyle.Container}`}>\r\n          {/* <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}> */}\r\n          <div className={`table-responsive-sm ${interviewStyle.responsive}`}>\r\n            <TableContainer className={`${interviewStyle.TableContainer}`}>\r\n              <Table\r\n                stickyHeader\r\n                aria-label=\"sticky table\"\r\n                // size={isSmallScreen ? \"medium\" : \"small\"}\r\n                className={`${interviewStyle.TableDetails}`}\r\n                // style={{ width: \"1600px\", overflowX: \"auto\" }}\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {/* <StyledTableCell>Select</StyledTableCell> */}\r\n                    <StyledTableCell>Name</StyledTableCell>\r\n                    <StyledTableCell style={{ width: \"auto\" }} align=\"left\">\r\n                      Mobile&nbsp;Number\r\n                    </StyledTableCell>\r\n                    <StyledTableCell style={{ width: \"auto\" }} align=\"left\">\r\n                      Job&nbsp;Category\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      Company&nbsp;Name\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      CTC&nbsp;(in rupees)\r\n                    </StyledTableCell>\r\n                    {isSuperAdmin && (\r\n                      <StyledTableCell>Assigned To</StyledTableCell>\r\n                    )}\r\n                    <StyledTableCell align=\"left\">\r\n                      Joining&nbsp;Date\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">Duration</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">Status</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {joinedCandidateList.length > 0 ? (\r\n                    <>\r\n                      {joinedCandidateList.map((candidate, i) => (\r\n                        <TableRow\r\n                          sx={{\r\n                            \"&:last-child td, &:last-child th\": { border: 0 },\r\n                          }}\r\n                          key={i}\r\n                          onClick={() => {\r\n                            setCurrentMetaDetail(candidate.CandidateModel);\r\n                            setCurrenJoningDate(candidate);\r\n                          }}\r\n                        >\r\n                          {/*<StyledTableCell>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={selectedCheckboxes.some(\r\n                                (item) =>\r\n                                  item.id ===\r\n                                    candidate.candidateInterview?.id &&\r\n                                  item.data === data.candidateId // Compare data as well\r\n                              )}\r\n                              onChange={() =>\r\n                                handleCheckboxChange(\r\n                                  candidate.candidateInterview?.id,\r\n                                  data\r\n                                )\r\n                              }\r\n                            /> \r\n                          </StyledTableCell>*/}\r\n                          <StyledTableCell\r\n                            sx={{ color: \"#0b7af0\", cursor: \"pointer\" }}\r\n                            title={\r\n                              candidate.CandidateModel?.firstName +\r\n                                \" \" +\r\n                                candidate.CandidateModel?.lastName || null\r\n                            }\r\n                            onClick={() => {\r\n                              handleCandidateDetails(\r\n                                candidate.CandidateModel.id,\r\n                                \"RegisterCandidate\"\r\n                              );\r\n                            }}\r\n                          >\r\n                            {candidate.CandidateModel?.firstName\r\n                              ? textTruncate(\r\n                                  capitalizeWords(\r\n                                    candidate.CandidateModel.firstName\r\n                                  ),\r\n                                  15\r\n                                ) +\r\n                                \" \" +\r\n                                (candidate.CandidateModel?.lastName\r\n                                  ? textTruncate(\r\n                                      capitalizeWords(\r\n                                        candidate.CandidateModel.lastName\r\n                                      ),\r\n                                      15\r\n                                    ) + \"\"\r\n                                  : \"\")\r\n                              : \"-\"}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {candidate?.CandidateModel &&\r\n                            candidate.CandidateModel.mobileNumber != null\r\n                              ? \" \" +\r\n                                String(\r\n                                  candidate.CandidateModel.mobileNumber\r\n                                ).slice(0, 10)\r\n                              : \"-\"}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell\r\n                            title={candidate.JobsModel?.jobCategory || null}\r\n                            sx={{ color: \"#0b7af0\", cursor: \"pointer\" }}\r\n                            onClick={() => {\r\n                              handlePopupDetails(\r\n                                candidate.candidateInterview.jobId,\r\n                                \"jobDetails\"\r\n                              );\r\n                            }}\r\n                          >\r\n                            {candidate.JobsModel?.jobCategory\r\n                              ? textTruncate(\r\n                                  capitalizeWords(\r\n                                    candidate.JobsModel.jobCategory\r\n                                  ),\r\n                                  15\r\n                                )\r\n                              : \"-\"}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            sx={{ color: \"#0b7af0\", cursor: \"pointer\" }}\r\n                            title={\r\n                              candidate.candidateInterview?.companyName || null\r\n                            }\r\n                            onClick={() => {\r\n                              handlePopupDetails(\r\n                                candidate.EmployerModel.id,\r\n                                \"employerDetails\"\r\n                              );\r\n                            }}\r\n                          >\r\n                            {candidate.candidateInterview?.companyName\r\n                              ? textTruncate(\r\n                                  capitalizeWords(\r\n                                    candidate.candidateInterview.companyName\r\n                                  ),\r\n                                  15\r\n                                )\r\n                              : \"-\"}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {candidate.candidateInterview.ctc != null &&\r\n                            candidate.candidateInterview.ctc != \"\"\r\n                              ? candidate.candidateInterview.ctc\r\n                              : \"-\"}\r\n                          </StyledTableCell>\r\n                          {isSuperAdmin && (\r\n                            <StyledTableCell align=\"left\">\r\n                              <>\r\n                                {\r\n                                  adminName[\r\n                                    adminid.indexOf(\r\n                                      candidate.CandidateModel?.assignTo\r\n                                    )\r\n                                  ]\r\n                                }\r\n                              </>\r\n                            </StyledTableCell>\r\n                          )}\r\n                          <StyledTableCell>\r\n                            {\r\n                              <DMMMYYYY_formate\r\n                                dateValue={\r\n                                  candidate.candidateInterview.joinedOn\r\n                                }\r\n                              />\r\n                            }\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {calculateDuration(\r\n                              candidate.candidateInterview.joinedOn\r\n                            )}{\" \"}\r\n                            day(s)\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                              <div className={interviewStyle.LeftCompany_wrp}>\r\n                                {candidate.candidateInterview\r\n                                  .leftTheCompany && (\r\n                                  <>\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      name={`statusfield_${candidate.candidateInterview.id}`}\r\n                                      id={`leftCompany${candidate.candidateInterview.id}`}\r\n                                      checked={\r\n                                        candidate.candidateInterview\r\n                                          .leftTheCompany\r\n                                      }\r\n                                    />\r\n                                    {candidate.candidateInterview\r\n                                      .leftTheCompany ? (\r\n                                      <Tooltip title=\"Already candidate LeftCompany\">\r\n                                        <label\r\n                                          htmlFor={`leftCompany${candidate.candidateInterview.id}`}\r\n                                        >\r\n                                          Left Company\r\n                                        </label>\r\n                                      </Tooltip>\r\n                                    ) : (\r\n                                      <label\r\n                                        htmlFor={`leftCompany${candidate.candidateInterview.id}`}\r\n                                      >\r\n                                        Left Company\r\n                                      </label>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"btn-group dropstart\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  data-bs-toggle=\"dropdown\"\r\n                                  data-bs-no-caret=\"true\"\r\n                                  aria-expanded=\"false\"\r\n                                  onClick={(e) => {\r\n                                    handleClick(\r\n                                      candidate.candidateInterview.id,\r\n                                      e\r\n                                    );\r\n                                  }}\r\n                                  style={{\r\n                                    border: \"none\",\r\n                                    background: \"none\",\r\n                                    color: \"#000\",\r\n                                    cursor: \"pointer\",\r\n                                    outline: \"none\",\r\n                                    position: \"relative\",\r\n                                    right: \"5px\",\r\n                                    // backgroundColor: \"red\",\r\n                                    fontSize: 20,\r\n                                  }}\r\n                                >\r\n                                  <BsThreeDotsVertical />\r\n                                  {/* <AiOutlineEdit /> */}\r\n                                </button>\r\n                                <ul\r\n                                  className=\"dropdown-menu\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                  // ref={dropdownRef}\r\n                                >\r\n                                  {candidate.candidateInterview.joined ===\r\n                                    true && (\r\n                                    <li\r\n                                      onClick={(event) =>\r\n                                        handleRadioBtn(\r\n                                          candidate.candidateInterview.id,\r\n                                          \"isLeftCompany\",\r\n                                          event.target.checked\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <a className=\"dropdown-item\" href=\"#\">\r\n                                        <div\r\n                                          className={`${interviewStyle.select_wrp}`}\r\n                                        >\r\n                                          <input\r\n                                            // ref={inputRef.leftCompany}\r\n                                            type=\"checkbox\"\r\n                                            name={`statusfield_${candidate.candidateInterview.id}`}\r\n                                            id={`leftCompany_${candidate.candidateInterview.id}`}\r\n                                            checked={\r\n                                              candidate.candidateInterview\r\n                                                .leftCompany\r\n                                            }\r\n                                            // onChange={(event) =>\r\n\r\n                                            // }\r\n                                          />\r\n\r\n                                          <label\r\n                                            htmlFor={`leftCompany_${candidate.candidateInterview.id}`}\r\n                                          >\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#fa9e0a\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />{\" \"}\r\n                                            Left Company\r\n                                          </label>\r\n                                        </div>\r\n                                      </a>\r\n                                    </li>\r\n                                  )}\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </StyledTableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                      {\" \"}\r\n                      <Nojoid />\r\n                    </div>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center align-items-center mb-3 position-absolute bottom-0 start-50 translate-middle-x\">\r\n          <Stack spacing={2}>\r\n            <Pagination\r\n              count={pageCount}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              color=\"success\"\r\n              boundaryCount={1}\r\n              siblingCount={0}\r\n              onChange={candidatePagination}\r\n            />\r\n          </Stack>\r\n        </div>\r\n        {openInvoiceSend && (\r\n          <>\r\n            <SendInvoiceToEmployer close={() => setOpenInvoiceSend(false)} />\r\n          </>\r\n        )}\r\n        {showConfirmPopup && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      width: \"400px\",\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      component=\"form\"\r\n                      sx={{\r\n                        \"& .MuiTextField-root\": { m: 1, width: \"390px\" },\r\n                      }}\r\n                      noValidate\r\n                      autoComplete=\"off\"\r\n                    >\r\n                      <>\r\n                        <div className=\"text-center mb-2\">Add Notes</div>\r\n\r\n                        <>\r\n                          <TextField\r\n                            id=\"outlined-multiline-flexible\"\r\n                            label=\"Add Notes\"\r\n                            multiline\r\n                            // style={{ width: \"100%\" }}\r\n                            error={isNotesEmpty}\r\n                            helperText={\r\n                              isNotesEmpty ? \"Notes cannot be empty\" : \"\"\r\n                            }\r\n                            required\r\n                            onChange={(event) => {\r\n                              setInterviewStatus((prev) => ({\r\n                                ...prev,\r\n                                notes: event.target.value,\r\n                              }));\r\n                              setIsNotesEmpty(false);\r\n                            }}\r\n                            maxRows={4}\r\n                            fullWidth\r\n                          />\r\n                          <>\r\n                            {\" \"}\r\n                            {interviewStatus.statusfield ===\r\n                              \"isLeftCompany\" && (\r\n                              <>\r\n                                <label htmlFor=\"\" className=\"mt-3 ms-2\">\r\n                                  Select the date on which the candidate left ?\r\n                                </label>\r\n                                <FormControl fullWidth error={isNotesEmpty}>\r\n                                  <LocalizationProvider\r\n                                    dateAdapter={AdapterDayjs}\r\n                                  >\r\n                                    <DatePicker\r\n                                      label=\"Date\"\r\n                                      sx={{ width: \"100%\" }}\r\n                                      // value={dayjs(interviewStatus.date)}\r\n\r\n                                      onChange={(datefeild) => {\r\n                                        setInterviewStatus((prev) => ({\r\n                                          ...prev,\r\n                                          date: datefeild.$d,\r\n                                        }));\r\n                                        setIsNotesEmpty(false);\r\n                                      }}\r\n                                      fullWidth\r\n                                      required\r\n                                    />\r\n                                    {isNotesEmpty && (\r\n                                      <FormHelperText error>\r\n                                        Please select the date on which the\r\n                                        candidate left\r\n                                      </FormHelperText>\r\n                                    )}\r\n                                  </LocalizationProvider>\r\n                                </FormControl>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                          <div className=\"d-flex justify-content-end gap-1 mt-2\">\r\n                            <button\r\n                              className=\"btn text-white\"\r\n                              onClick={handleCloseNotes}\r\n                              style={{ backgroundColor: \"#d00a0a\" }}\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              className=\"btn text-white\"\r\n                              onClick={ConfirmFormSubmit}\r\n                              style={{ backgroundColor: \"#169C50\" }}\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                          </div>{\" \"}\r\n                        </>\r\n                      </>\r\n                    </Box>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n        {showSuccess && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={<SuccessTick HeadText=\"Successfully Updated\" />}\r\n            />\r\n          </MyModal>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateJoined;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"animate1\":\"CandidateDailyTask_animate1__rq0oc\",\"DailytaskBody\":\"CandidateDailyTask_DailytaskBody__vKbrK\",\"DailytaskHeader\":\"CandidateDailyTask_DailytaskHeader__8VuwZ\",\"Rowofcards\":\"CandidateDailyTask_Rowofcards__8KBB1\",\"DailytaskSm4\":\"CandidateDailyTask_DailytaskSm4__cnyPp\",\"DailytaskHead\":\"CandidateDailyTask_DailytaskHead__1HXgb\",\"DailytaskCard1\":\"CandidateDailyTask_DailytaskCard1__qMjaO\",\"DailytaskCard2\":\"CandidateDailyTask_DailytaskCard2__S+c3F\",\"DailytaskCard3\":\"CandidateDailyTask_DailytaskCard3__rH2uR\",\"fadeUp\":\"CandidateDailyTask_fadeUp__xYzr3\",\"DailytaskProfileDiv\":\"CandidateDailyTask_DailytaskProfileDiv__E16PD\",\"DailytaskProfile\":\"CandidateDailyTask_DailytaskProfile__rJK-8\",\"DailytaskProfilespan\":\"CandidateDailyTask_DailytaskProfilespan__Kq7vz\",\"DailytaskFilterButton\":\"CandidateDailyTask_DailytaskFilterButton__GzVKX\",\"FullviewCard\":\"CandidateDailyTask_FullviewCard__JbGGh\"};","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport interviewStyle from \"../Candidate interview schedule list/candidateInterviewSchedule.module.scss\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport {\r\n  Autocomplete,\r\n  FormControl,\r\n  InputLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CandidateDailyTaskActions,\r\n  CandidateFunnelActions,\r\n} from \"../../../redux-store/store\";\r\nimport { MyModal } from \"../../../utility\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { GetAllsdminDetails } from \"../../../apiServices\";\r\n\r\nfunction CandidateDailyTaskFilter({ filterType }) {\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showRedDot, setshowRedDot] = useState(false);\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const [adminDetails, setAdminDetails] = useState();\r\n\r\n  const filterName = useSelector(\r\n    (state) => state.CandidateDailyTaskDetails.selectedFilter\r\n  );\r\n\r\n  const filterDetails = useSelector(\r\n    (state) => state.CandidateDailyTaskDetails[filterName]\r\n  );\r\n\r\n  const create = useSelector(\r\n    (state) => state.CandidateDailyTaskDetails[filterName].startDate\r\n  );\r\n  const ended = useSelector(\r\n    (state) => state.CandidateDailyTaskDetails[filterName].endDate\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(filterDetails, \"filterDetails\");\r\n  }, [filterDetails]);\r\n\r\n  const [dateRange, setDateRange] = useState({\r\n    start: filterDetails.startDate,\r\n    end: filterDetails.endDate,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n  });\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n  const initialValues = {\r\n    adminId: localStorage.getItem(\"adminID\"),\r\n  };\r\n  const [formData, setFormData] = useState(initialValues);\r\n  const Dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  function openFilter() {\r\n    setShowFilter(true);\r\n    Dispatch(CandidateDailyTaskActions.setSelectedFilter(filterType));\r\n  }\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date(today);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const today = new Date();\r\n      const todayDayOfWeek = today.getDay();\r\n\r\n      const daysToLastMonday = (todayDayOfWeek + 6) % 7;\r\n      const lastMonday = new Date(today);\r\n      lastMonday.setDate(today.getDate() - daysToLastMonday - 7);\r\n\r\n      const startDate = new Date(lastMonday);\r\n      const endDate = new Date(lastMonday);\r\n      endDate.setDate(lastMonday.getDate() + 6);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n\r\n      setAnchorEl(null);\r\n      console.log(startDate, endDate);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const today = new Date();\r\n      const todayDayOfWeek = today.getDay();\r\n\r\n      const daysToLastMonday = (todayDayOfWeek + 13) % 14;\r\n      const lastMonday = new Date(today);\r\n      lastMonday.setDate(today.getDate() - daysToLastMonday - 14);\r\n\r\n      const startDate = new Date(lastMonday);\r\n      const endDate = new Date(lastMonday);\r\n      endDate.setDate(lastMonday.getDate() + 13);\r\n      console.log(startDate, endDate);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        start: today.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const today = new Date(); // Assuming today is the current date\r\n\r\n      const startDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\r\n\r\n      const endDate = new Date(today.getFullYear(), today.getMonth(), 0);\r\n\r\n      console.log(startDate, endDate);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const today = new Date(); // Assuming today is the current date\r\n\r\n      // Calculate yesterday's date\r\n      const yesterday = new Date(today);\r\n      yesterday.setDate(today.getDate() - 1);\r\n\r\n      // Set the start time to 12:00 AM\r\n      const startDate = new Date(yesterday);\r\n      startDate.setHours(0, 0, 0, 0);\r\n\r\n      // Set the end time to 11:59 PM\r\n      const endDate = new Date(yesterday);\r\n      endDate.setHours(23, 59, 59, 999);\r\n\r\n      console.log(startDate, endDate);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        start: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        end: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    // Implement your validation logic here\r\n    // For example, you can check if both start and end dates are filled\r\n    const isValid = dateRange.start && dateRange.end;\r\n\r\n    if (!dateRange.start) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!dateRange.end) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleApply = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // Your submit logic here\r\n      // Proceed with form submission\r\n      console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    Dispatch(\r\n      CandidateDailyTaskActions.setCandidateDailyTaskFilter({\r\n        filterType: filterType,\r\n        data: {\r\n          ...formData,\r\n        },\r\n      })\r\n    );\r\n\r\n    setShowFilter(false);\r\n    // console.log(showFilter, \"jhjhsjhdfh\");\r\n  };\r\n\r\n  function handleClear(e) {\r\n    e.preventDefault();\r\n    // setFormData({\r\n    //   adminId: localStorage.getItem(\"adminID\")\r\n    // });\r\n\r\n    setDateRange({\r\n      start: new Date().toISOString().split(\"T\")[0],\r\n      end: new Date().toISOString().split(\"T\")[0],\r\n      dateFilterType: \"Today\",\r\n    });\r\n    // setShowRedDot(false);\r\n    Dispatch(\r\n      CandidateDailyTaskActions.setCandidateDailyTaskFilter({\r\n        filterType: filterType,\r\n        data: {\r\n          ...initialValues,\r\n          startDate: new Date().toISOString().split(\"T\")[0],\r\n          endDate: new Date().toISOString().split(\"T\")[0],\r\n          dateFilterType: \"Today\",\r\n        },\r\n      })\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((res) => {\r\n      console.log(res, \"res adminDetails--------------------------------\");\r\n      let adminDetails = res.map((el) => {\r\n        return {\r\n          id: el.id,\r\n          label: el.userName,\r\n        };\r\n      });\r\n\r\n      setAdminDetails([{ label: \"ALL\", id: 0 }, ...adminDetails]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(adminDetails, \"adminDetails\");\r\n  }, [adminDetails]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        {/* <div>\r\n          <b className=\"fs-4\">Candidate Funnel</b>\r\n        </div> */}\r\n\r\n        <div>\r\n          {\" \"}\r\n          <div variant=\"contained\" onClick={() => openFilter()}>\r\n            <BiFilterAlt />{\" \"}\r\n          </div>\r\n        </div>\r\n        {showFilter && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex={1001}\r\n              childComponent={\r\n                <div className={\"\"} style={{ width: \"400px\" }}>\r\n                  <>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <h4 className=\"text-center mb-2\">Filter by</h4>\r\n                      <h3>\r\n                        <span\r\n                          onClick={() => setShowFilter(false)}\r\n                          className=\"btn btn-outline-danger\"\r\n                          style={{ cursor: \"pointer\", fontSize: 15 }}\r\n                        >\r\n                          <AiOutlineClose />\r\n                        </span>\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      <form\r\n                        onSubmit={(e) => {\r\n                          handleSubmit(e);\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        <div className=\"col-sm-12 mt-2\">\r\n                          {/* <FormControl variant=\"outlined\" fullWidth>\r\n                            <TextField\r\n                              label=\"Created on\"\r\n                              id=\"basic-button\"\r\n                              value={`${dateRange.dateFilterType}`}\r\n                              // value={`${dateRange.start} - ${dateRange.end}`}\r\n                              aria-controls={open ? \"basic-menu\" : undefined}\r\n                              aria-haspopup=\"true\"\r\n                              aria-expanded={open ? \"true\" : undefined}\r\n                              onClick={handleClick}\r\n                            ></TextField>\r\n                            <Menu\r\n                              id=\"basic-menu\"\r\n                              anchorEl={anchorEl}\r\n                              open={open}\r\n                              onClose={handleClose}\r\n                              MenuListProps={{\r\n                                \"aria-labelledby\": \"basic-button\",\r\n                              }}\r\n                            >\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"today\");\r\n                                }}\r\n                                selected\r\n                                style={{ width: \"400px\" }}\r\n                              >\r\n                                Today\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"yesterday\");\r\n                                }}\r\n                              >\r\n                                Yesterday\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastWeek\");\r\n                                }}\r\n                              >\r\n                                Last 1 Week\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastTwoWeeks\");\r\n                                }}\r\n                              >\r\n                                Last 2 Week\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastMonth\");\r\n                                }}\r\n                              >\r\n                                Last Month\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"custom\");\r\n                                }}\r\n                              >\r\n                                Custom Date\r\n                              </MenuItem>\r\n                            </Menu>\r\n                          </FormControl> */}\r\n                          {/*  */}\r\n                          {showCustom && (\r\n                            <MyModal>\r\n                              <ModalContainer\r\n                                zIndex={1005}\r\n                                childComponent={\r\n                                  <div\r\n                                    style={{\r\n                                      minWidth: \"400px\",\r\n                                      width: \"auto\",\r\n                                    }}\r\n                                  >\r\n                                    <>\r\n                                      <div>\r\n                                        <form>\r\n                                          <p className=\"text-center \">\r\n                                            Select Custom Date{\" \"}\r\n                                          </p>\r\n                                          <div className=\"mt-2\">\r\n                                            <label htmlFor=\"start\">From</label>\r\n                                            <input\r\n                                              className={`form-control ${\r\n                                                validationErrors.start\r\n                                                  ? \"is-invalid\"\r\n                                                  : \"\"\r\n                                              }`}\r\n                                              style={{ width: \"100%\" }}\r\n                                              type=\"date\"\r\n                                              id=\"start\"\r\n                                              onChange={(value) =>\r\n                                                handleCustomDate(\r\n                                                  value,\r\n                                                  \"startDate\"\r\n                                                )\r\n                                              }\r\n                                              name=\"trip-start\"\r\n                                              min=\"2020-01-01\"\r\n                                              max={\r\n                                                new Date()\r\n                                                  .toISOString()\r\n                                                  .split(\"T\")[0]\r\n                                              }\r\n                                            />\r\n                                            {validationErrors.start && (\r\n                                              <div className=\"invalid-feedback\">\r\n                                                Start date is required.\r\n                                              </div>\r\n                                            )}\r\n                                          </div>\r\n                                          <div className=\"mt-2\">\r\n                                            <label htmlFor=\"end\">To</label>\r\n                                            <input\r\n                                              className={`form-control ${\r\n                                                validationErrors.end\r\n                                                  ? \"is-invalid\"\r\n                                                  : \"\"\r\n                                              }`}\r\n                                              style={{ width: \"100%\" }}\r\n                                              type=\"date\"\r\n                                              id=\"end\"\r\n                                              onChange={(value) =>\r\n                                                handleCustomDate(\r\n                                                  value,\r\n                                                  \"endDate\"\r\n                                                )\r\n                                              }\r\n                                              name=\"trip-end\"\r\n                                              min=\"2020-01-01\"\r\n                                              max={\r\n                                                new Date()\r\n                                                  .toISOString()\r\n                                                  .split(\"T\")[0]\r\n                                              }\r\n                                            />\r\n                                            {validationErrors.end && (\r\n                                              <div className=\"invalid-feedback\">\r\n                                                End date is required.\r\n                                              </div>\r\n                                            )}\r\n                                          </div>\r\n                                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                                            <button\r\n                                              onClick={() => {\r\n                                                setValidationErrors({\r\n                                                  start: false,\r\n                                                  end: false,\r\n                                                });\r\n                                                setshowCustom(false);\r\n                                              }}\r\n                                              style={{\r\n                                                backgroundColor: \"#b2261c\",\r\n                                              }}\r\n                                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                                            >\r\n                                              Close\r\n                                            </button>\r\n                                            <button\r\n                                              onClick={handleApply}\r\n                                              // color=\"primary\"\r\n                                              className=\"btn rounded-pill text-white px-4\"\r\n                                              style={{\r\n                                                backgroundColor: \"#169C50\",\r\n                                              }}\r\n                                            >\r\n                                              Apply\r\n                                            </button>\r\n                                          </div>\r\n                                        </form>\r\n                                      </div>\r\n                                    </>\r\n                                  </div>\r\n                                }\r\n                              />\r\n                            </MyModal>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-sm-12  mt-3 mb-5\">\r\n                          <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">\r\n                              Status\r\n                            </InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              // value={age}\r\n                              label=\"Stage\"\r\n                              // onChange={handleChange}\r\n                            >\r\n                              <MenuItem value={10}>Candidate Lead</MenuItem>\r\n                              <MenuItem value={20}>FB Meta Lead</MenuItem>\r\n                              <MenuItem value={30}>Register</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                          <FormControl fullWidth sx={{ mt: 2 }}>\r\n                            <Autocomplete\r\n                              fullWidth\r\n                              disablePortal\r\n                              id=\"combo-box-demo\"\r\n                              options={adminDetails}\r\n                              renderInput={(params) => (\r\n                                <TextField {...params} label=\"Assigned To\" />\r\n                              )}\r\n                            />\r\n                          </FormControl>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row gap-2 justify-content-end mt-2\">\r\n                          <button\r\n                            className={`rounded-pill ${interviewStyle.Filterbutton}`}\r\n                            variant=\"outlined\"\r\n                            onClick={(e) => {\r\n                              handleClear(e);\r\n                            }}\r\n                          >\r\n                            Clear All\r\n                          </button>\r\n                          <button\r\n                            className={`rounded-pill ${interviewStyle.search}`}\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            sx={{ minWidth: \"150px\" }}\r\n                          >\r\n                            Search\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </>\r\n                </div>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CandidateDailyTaskFilter;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styles from \"./CandidateDailyTask.module.scss\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { FaDotCircle, FaFilter } from \"react-icons/fa\";\r\nimport CandidateDailyTaskFilter from \"./CandidateDailyTaskFilter\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Pagination, Stack } from \"@mui/material\";\r\nimport {\r\n  GetCandidateDailyTask,\r\n  UpdateCandidateDailyTask,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../apiServices\";\r\nimport CandidateFBLeadDetailsview from \"../../../components/ModalPopups/CandidateDetails/FBLeadDetailsview\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { MyModal } from \"../../../utility\";\r\nimport CandidateDetailsview from \"../../../components/ModalPopups/CandidateDetails/CandidateDetailsview\";\r\nimport CandidateLeadDetailsview from \"../../../components/ModalPopups/CandidateDetails/CandidateLeadDetailsview\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { commonPopupActions } from \"../../../redux-store/store\";\r\nimport SuccessTick from \"../../../components/success_tick\";\r\nimport { CandidateDailyTaskActions } from \"../../../redux-store/store\";\r\n\r\nfunction CandidateDailyTask() {\r\n  // const [cardsData, setCardsData] = useState([]);\r\n\r\n  const cardsData = [\r\n    { taskName: \"Candidate call\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate call\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate call\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate hjhd\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate jhjh\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate sssj\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate jsdk\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate call\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate call\", callTime: \"12.00 pm\" },\r\n    { taskName: \"Candidate call\", callTime: \"12.00 pm\" },\r\n  ];\r\n\r\n  const [pageCount, setPageCount] = useState({\r\n    CandidateCompletedTaskFilter: \"\",\r\n    CandidateNewTaskFilter: \"\",\r\n    CandidatePendingTaskFilter: \"\",\r\n  });\r\n\r\n  const [data, setData] = useState({\r\n    canLead: {},\r\n    metaLead: {},\r\n    candidate: {},\r\n    openCanlead: false,\r\n    openMetalead: false,\r\n    openCandidate: false,\r\n  });\r\n\r\n  const CandidateNewTaskFilter = useSelector(\r\n    (state) => state.CandidateDailyTaskDetails.CandidateNewTaskFilter\r\n  );\r\n  const CandidatePendingTaskFilter = useSelector(\r\n    (state) => state.CandidateDailyTaskDetails.CandidatePendingTaskFilter\r\n  );\r\n  const CandidateCompletedTaskFilter = useSelector(\r\n    (state) => state.CandidateDailyTaskDetails.CandidateCompletedTaskFilter\r\n  );\r\n\r\n  const [candidateDailyTask, setCandidateDailyTask] = useState({\r\n    CandidateNewTaskFilter: [],\r\n    CandidatePendingTaskFilter: [],\r\n    CandidateCompletedTaskFilter: [],\r\n  });\r\n\r\n  const [showSuccess, setShowSuccess] = useState({\r\n    show: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function ReloadList() {\r\n    GetCandidateDailyTask(CandidateNewTaskFilter).then((res) => {\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        CandidateNewTaskFilter: res.totalPages,\r\n      }));\r\n      setCandidateDailyTask((prev) => ({\r\n        ...prev,\r\n        CandidateNewTaskFilter: res.content,\r\n      }));\r\n    });\r\n    GetCandidateDailyTask(CandidatePendingTaskFilter).then((res) => {\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        CandidatePendingTaskFilter: res.totalPages,\r\n      }));\r\n      setCandidateDailyTask((prev) => ({\r\n        ...prev,\r\n        CandidatePendingTaskFilter: res.content,\r\n      }));\r\n    });\r\n    GetCandidateDailyTask(CandidateCompletedTaskFilter).then((res) => {\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        CandidateCompletedTaskFilter: res.totalPages,\r\n      }));\r\n      setCandidateDailyTask((prev) => ({\r\n        ...prev,\r\n        CandidateCompletedTaskFilter: res.content,\r\n      }));\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetCandidateDailyTask(CandidateNewTaskFilter).then((res) => {\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        CandidateNewTaskFilter: res.totalPages,\r\n      }));\r\n      setCandidateDailyTask((prev) => ({\r\n        ...prev,\r\n        CandidateNewTaskFilter: res.content,\r\n      }));\r\n    });\r\n  }, [CandidateNewTaskFilter]);\r\n\r\n  useEffect(() => {\r\n    GetCandidateDailyTask(CandidatePendingTaskFilter).then((res) => {\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        CandidatePendingTaskFilter: res.totalPages,\r\n      }));\r\n      setCandidateDailyTask((prev) => ({\r\n        ...prev,\r\n        CandidatePendingTaskFilter: res.content,\r\n      }));\r\n    });\r\n  }, [CandidatePendingTaskFilter]);\r\n\r\n  useEffect(() => {\r\n    GetCandidateDailyTask(CandidateCompletedTaskFilter).then((res) => {\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        CandidateCompletedTaskFilter: res.totalPages,\r\n      }));\r\n      setCandidateDailyTask((prev) => ({\r\n        ...prev,\r\n        CandidateCompletedTaskFilter: res.content,\r\n      }));\r\n    });\r\n  }, [CandidateCompletedTaskFilter]);\r\n\r\n  useEffect(() => {\r\n    // AOS.init({\r\n    //   duration: 500,\r\n    //   easing: \"ease\",\r\n    // });\r\n    // AOS.refresh();\r\n    const cards = document.querySelectorAll(`.${styles.DailytaskCard1}`);\r\n    cards.forEach((card, index) => {\r\n      card.classList.add(\"fade-up\");\r\n      card.style.animationDelay = `${index * 0.2}s`;\r\n    });\r\n    const cards1 = document.querySelectorAll(`.${styles.DailytaskCard2}`);\r\n    cards1.forEach((card, index) => {\r\n      card.classList.add(\"fade-up\");\r\n      card.style.animationDelay = `${index * 0.2}s`;\r\n    });\r\n    const cards2 = document.querySelectorAll(`.${styles.DailytaskCard3}`);\r\n    cards2.forEach((card, index) => {\r\n      card.classList.add(\"fade-up\");\r\n      card.style.animationDelay = `${index * 0.2}s`;\r\n    });\r\n  }, [cardsData]);\r\n\r\n  const handleCandidateDetails = async (candidateleadId, type) => {\r\n    let data;\r\n    if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateleadId);\r\n    } else if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateleadId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateleadId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  function moveToCompleted(data) {\r\n    const dataObj = {\r\n      id: data.id,\r\n      currentStatus: \"Completed Task\",\r\n    };\r\n\r\n    UpdateCandidateDailyTask(dataObj).then(() => {\r\n      alert(\"Task Completed\");\r\n      setShowSuccess({\r\n        show: true,\r\n        message: \"Task Completed\",\r\n      });\r\n\r\n      ReloadList();\r\n      setTimeout(() => {\r\n        setShowSuccess({\r\n          show: false,\r\n          message: \"\",\r\n        });\r\n      }, 3000);\r\n    });\r\n  }\r\n  function openDetailedView(data) {\r\n    if (data.fbMetaLead) {\r\n      setData((prev) => ({\r\n        ...prev,\r\n        metaLead: data.fbMetaLead,\r\n        openMetalead: true,\r\n        openCandidate: false,\r\n        openCanlead: false,\r\n      }));\r\n    }\r\n\r\n    if (data.canLead) {\r\n      setData((prev) => ({\r\n        ...prev,\r\n        canLead: data.canLead.id,\r\n        openMetalead: false,\r\n        openCandidate: false,\r\n        openCanlead: true,\r\n      }));\r\n\r\n      handleCandidateDetails(data.canLead.id, \"CandidateLead\");\r\n    }\r\n\r\n    if (data.candidate) {\r\n      setData((prev) => ({\r\n        ...prev,\r\n        candidate: data.candidate,\r\n        openMetalead: false,\r\n        openCandidate: true,\r\n        openCanlead: false,\r\n      }));\r\n      handleCandidateDetails(data.candidate.id, \"RegisterCandidate\");\r\n    }\r\n  }\r\n\r\n  function handlePageChange(event, value) {\r\n    console.log(value);\r\n    Dispatch(\r\n      CandidateDailyTaskActions.setPageChange({\r\n        filterType: event,\r\n        data: value - 1,\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-grid justify-content-end\">\r\n        <CandidateDailyTaskFilter filterType={\"CandidateCompletedTaskFilter\"} />\r\n      </div>\r\n      <div className={`${styles.DailytaskBody}`}>\r\n        <div className={`${styles.Rowofcards}`}>\r\n          <div className={`${styles.DailytaskSm4}`}>\r\n            <div\r\n              style={{ backgroundColor: \"#ddff00\" }}\r\n              className={`card d-flex flex flex-row justify-content-between ${styles.DailytaskHead}`}\r\n            >\r\n              <span>New Task</span>\r\n              <div title=\"Filter\">\r\n                {/* <CandidateDailyTaskFilter\r\n                  filterType={\"CandidateNewTaskFilter\"}\r\n                /> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${styles.animate1}`}>\r\n              {candidateDailyTask.CandidateNewTaskFilter.map((card, index) => (\r\n                <div\r\n                  key={index}\r\n                  // data-aos=\"fade-up\"\r\n                  // data-aos-delay={index * 100}\r\n                  className={`card ${styles.DailytaskCard1}`}\r\n                >\r\n                  <div>\r\n                    Task Name: {card.followUpType} <br />\r\n                    Call Time: {card.followUpDate} <br />\r\n                    Candidate Name :{\" \"}\r\n                    {card.fbMetaLead && card.fbMetaLead.candidateName}\r\n                    {card.canLead && card.canLead.name}\r\n                    {card.candidate && card.candidate.firstName} <br />\r\n                    Number : {card.fbMetaLead && card.fbMetaLead.mobileNumber}\r\n                    {card.canLead && card.canLead.mobileNumber}\r\n                    {card.candidate && card.candidate.mobileNumber}\r\n                  </div>\r\n                  <div className={`d-flex gap-1 ${styles.DailytaskProfileDiv}`}>\r\n                    <div className={` ${styles.DailytaskProfile}`}>\r\n                      <span\r\n                        title={card.admin.userName}\r\n                        className={`${styles.DailytaskProfilespan}`}\r\n                      >\r\n                        {card.admin.userName[0].toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      {\" \"}\r\n                      <div className=\"btn-group dropstart\">\r\n                        <button\r\n                          type=\"button\"\r\n                          // className={`btn btn-light `}\r\n\r\n                          data-bs-toggle=\"dropdown\"\r\n                          data-bs-no-caret=\"true\"\r\n                          aria-expanded=\"false\"\r\n                          style={{\r\n                            border: \"none\",\r\n                            background: \"none\",\r\n                            color: \"#000\",\r\n                            cursor: \"pointer\",\r\n                            outline: \"none\",\r\n                            position: \"relative\",\r\n                            right: \"5px\",\r\n                            // backgroundColor: \"red\",\r\n                            fontSize: 20,\r\n                            zIndex: 1,\r\n                          }}\r\n                        >\r\n                          <span className=\"\">\r\n                            {\" \"}\r\n                            <BsThreeDotsVertical />{\" \"}\r\n                          </span>\r\n                          {/* <AiOutlineEdit /> */}\r\n                        </button>{\" \"}\r\n                        <ul\r\n                          className=\"dropdown-menu\"\r\n                          style={{ textAlign: \"left\" }}\r\n                        >\r\n                          <li>\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                moveToCompleted(card);\r\n                              }}\r\n                            >\r\n                              <FaDotCircle\r\n                                style={{ color: \"#169c50\" }}\r\n                                className=\"me-2\"\r\n                              />{\" \"}\r\n                              Move to Completed\r\n                            </a>\r\n                          </li>\r\n\r\n                          <li>\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                openDetailedView(card);\r\n                              }}\r\n                            >\r\n                              <FaDotCircle\r\n                                style={{ color: \"#0066ff\" }}\r\n                                className=\"me-2\"\r\n                              />{\" \"}\r\n                              View Candidate\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"d-grid justify-content-center mt-2\">\r\n              <Stack spacing={2}>\r\n                <Pagination\r\n                  count={pageCount.CandidateNewTaskFilter}\r\n                  onChange={(e, value) => {\r\n                    handlePageChange(\"CandidateNewTaskFilter\", value);\r\n                  }}\r\n                  size=\"small\"\r\n                />\r\n              </Stack>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`${styles.DailytaskSm4}`}>\r\n            <div\r\n              style={{ backgroundColor: \"#f99b02\" }}\r\n              className={`card d-flex flex flex-row justify-content-between ${styles.DailytaskHead}`}\r\n            >\r\n              <span>Pending Task</span>\r\n              <div title=\"Filter\">\r\n                {/* <CandidateDailyTaskFilter\r\n                  filterType={\"CandidatePendingTaskFilter\"}\r\n                /> */}\r\n              </div>\r\n            </div>\r\n            <div className={`${styles.animate1}`}>\r\n              {candidateDailyTask.CandidatePendingTaskFilter.map(\r\n                (card, index) => (\r\n                  <div\r\n                    key={index}\r\n                    // data-aos=\"fade-up\"\r\n                    // data-aos-delay={index * 100}\r\n                    className={`card ${styles.DailytaskCard3}`}\r\n                  >\r\n                    <div>\r\n                      Task Name: {card.followUpType} <br />\r\n                      Call Time: {card.followUpDate} <br />\r\n                      Candidate Name :{\" \"}\r\n                      {card.fbMetaLead && card.fbMetaLead.candidateName}\r\n                      {card.canLead && card.canLead.name}\r\n                      {card.candidate && card.candidate.firstName} <br />\r\n                      Number : {card.fbMetaLead && card.fbMetaLead.mobileNumber}\r\n                      {card.canLead && card.canLead.mobileNumber}\r\n                      {card.candidate && card.candidate.mobileNumber}\r\n                    </div>\r\n                    <div\r\n                      className={`d-flex gap-1 ${styles.DailytaskProfileDiv}`}\r\n                    >\r\n                      <div className={` ${styles.DailytaskProfile}`}>\r\n                        <span\r\n                          title={card.admin.userName}\r\n                          className={`${styles.DailytaskProfilespan}`}\r\n                        >\r\n                          {card.admin.userName[0].toUpperCase()}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        {\" \"}\r\n                        <div className=\"btn-group dropstart\">\r\n                          <button\r\n                            type=\"button\"\r\n                            // className={`btn btn-light `}\r\n\r\n                            data-bs-toggle=\"dropdown\"\r\n                            data-bs-no-caret=\"true\"\r\n                            aria-expanded=\"false\"\r\n                            style={{\r\n                              border: \"none\",\r\n                              background: \"none\",\r\n                              color: \"#000\",\r\n                              cursor: \"pointer\",\r\n                              outline: \"none\",\r\n                              position: \"relative\",\r\n                              right: \"5px\",\r\n                              // backgroundColor: \"red\",\r\n                              fontSize: 20,\r\n                              zIndex: 1,\r\n                            }}\r\n                          >\r\n                            <span className=\"\">\r\n                              {\" \"}\r\n                              <BsThreeDotsVertical />{\" \"}\r\n                            </span>\r\n                            {/* <AiOutlineEdit /> */}\r\n                          </button>{\" \"}\r\n                          <ul\r\n                            className=\"dropdown-menu\"\r\n                            style={{ textAlign: \"left\" }}\r\n                          >\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                moveToCompleted(card);\r\n                              }}\r\n                            >\r\n                              <FaDotCircle\r\n                                style={{ color: \"#169c50\" }}\r\n                                className=\"me-2\"\r\n                              />{\" \"}\r\n                              Move to Completed\r\n                            </a>\r\n\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                openDetailedView(card);\r\n                              }}\r\n                            >\r\n                              <FaDotCircle\r\n                                style={{ color: \"#0066ff\" }}\r\n                                className=\"me-2\"\r\n                              />{\" \"}\r\n                              View Candidate\r\n                            </a>\r\n                          </ul>\r\n                        </div>\r\n                        {/* <span className=\"fs-5\">\r\n                        <BsThreeDotsVertical />\r\n                      </span> */}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n            <div className=\"d-grid justify-content-center mt-2\">\r\n              <Stack spacing={2}>\r\n                <Pagination\r\n                  count={pageCount.CandidatePendingTaskFilter}\r\n                  onChange={(e, value) => {\r\n                    handlePageChange(\"CandidatePendingTaskFilter\", value);\r\n                  }}\r\n                  size=\"small\"\r\n                />\r\n              </Stack>\r\n            </div>\r\n          </div>\r\n          <div className={`${styles.DailytaskSm4}`}>\r\n            <div\r\n              style={{ backgroundColor: \"#02fc0f\" }}\r\n              className={`card d-flex flex flex-row justify-content-between ${styles.DailytaskHead}`}\r\n            >\r\n              <span>Completed Task</span>\r\n              <div title=\"Filter\">\r\n                {/* <CandidateDailyTaskFilter\r\n                  filterType={\"CandidateCompletedTaskFilter\"}\r\n                /> */}\r\n              </div>\r\n            </div>\r\n            <div className={`${styles.animate1}`}>\r\n              {candidateDailyTask.CandidateCompletedTaskFilter.map(\r\n                (card, index) => (\r\n                  <div\r\n                    key={index}\r\n                    // data-aos=\"fade-up\"\r\n                    // data-aos-delay={index * 100}\r\n                    className={`card ${styles.DailytaskCard2}`}\r\n                  >\r\n                    <div>\r\n                      Task Name: {card.followUpType} <br />\r\n                      Call Time: {card.followUpDate} <br />\r\n                      Candidate Name :{\" \"}\r\n                      {card.fbMetaLead && card.fbMetaLead.candidateName}\r\n                      {card.canLead && card.canLead.name}\r\n                      {card.candidate && card.candidate.firstName} <br />\r\n                      Number : {card.fbMetaLead && card.fbMetaLead.mobileNumber}\r\n                      {card.canLead && card.canLead.mobileNumber}\r\n                      {card.candidate && card.candidate.mobileNumber}\r\n                    </div>\r\n                    <div\r\n                      className={`d-flex gap-1 ${styles.DailytaskProfileDiv}`}\r\n                    >\r\n                      <div className={` ${styles.DailytaskProfile}`}>\r\n                        <span\r\n                          title={card.admin.userName}\r\n                          className={`${styles.DailytaskProfilespan}`}\r\n                        >\r\n                          {card.admin.userName[0].toUpperCase()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"btn-group dropstart\">\r\n                        <button\r\n                          type=\"button\"\r\n                          // className={`btn btn-light `}\r\n\r\n                          data-bs-toggle=\"dropdown\"\r\n                          data-bs-no-caret=\"true\"\r\n                          aria-expanded=\"false\"\r\n                          style={{\r\n                            border: \"none\",\r\n                            background: \"none\",\r\n                            color: \"#000\",\r\n                            cursor: \"pointer\",\r\n                            outline: \"none\",\r\n                            position: \"relative\",\r\n                            right: \"5px\",\r\n                            // backgroundColor: \"red\",\r\n                            fontSize: 20,\r\n                            zIndex: 1,\r\n                          }}\r\n                        >\r\n                          <span className=\"\">\r\n                            {\" \"}\r\n                            <BsThreeDotsVertical />{\" \"}\r\n                          </span>\r\n                          {/* <AiOutlineEdit /> */}\r\n                        </button>{\" \"}\r\n                        <ul\r\n                          className=\"dropdown-menu\"\r\n                          style={{ textAlign: \"left\" }}\r\n                        >\r\n                          <li>\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                moveToCompleted(card);\r\n                              }}\r\n                            >\r\n                              <FaDotCircle\r\n                                style={{ color: \"#169c50\" }}\r\n                                className=\"me-2\"\r\n                              />{\" \"}\r\n                              Move to Completed\r\n                            </a>\r\n                          </li>\r\n\r\n                          <li>\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                openDetailedView(card);\r\n                              }}\r\n                            >\r\n                              <FaDotCircle\r\n                                style={{ color: \"#0066ff\" }}\r\n                                className=\"me-2\"\r\n                              />{\" \"}\r\n                              View Candidate\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n            <div className=\"d-grid justify-content-center mt-2\">\r\n              <Stack spacing={2}>\r\n                <Pagination\r\n                  count={pageCount.CandidateCompletedTaskFilter}\r\n                  onChange={(e, value) => {\r\n                    handlePageChange(\"CandidateCompletedTaskFilter\", value);\r\n                  }}\r\n                  size=\"small\"\r\n                />\r\n              </Stack>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {data.openMetalead && data.metaLead && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <CandidateFBLeadDetailsview\r\n                  onClose={() => {\r\n                    setData((prev) => ({ ...prev, openMetalead: false }));\r\n                  }}\r\n                  data={data.metaLead}\r\n                  onAssignChange={() => {\r\n                    // ReloadList();\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {showSuccess.show && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={8000}\r\n            childComponent={<SuccessTick HeadText={showSuccess.message} />}\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateDailyTask;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { MyModal, convertDateYYYYMMDD } from \"../../../utility\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FBStyle from \"../FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport registercandidatestyle from \"../CandidateRegistered/RegisteredCandidate.module.scss\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  GetITICourses,\r\n  GetPGCourses,\r\n  GetUGCourses,\r\n  GetdiplomaCourses,\r\n  getJobFilterOptions,\r\n} from \"../../../apiServices\";\r\nimport { CandidateRegisteredActions } from \"../../../redux-store/store\";\r\nimport { Autocomplete, MenuItem, TextField } from \"@mui/material\";\r\nimport { FormControl, Menu } from \"@material-ui/core\";\r\n\r\nfunction CandidateResourceFilter() {\r\n  const Dispatch = useDispatch();\r\n  const filterDetails = useSelector(\r\n    (state) => state.CandidateRegistered.filterData\r\n  );\r\n  const [showFilter, setShowFilter] = useState(false);\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const open = Boolean(anchorEl);\r\n  const handleDateClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  // console.log(adminDetails);\r\n\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n\r\n  let initialFilterObj = {\r\n    adminId: isSuperAdmin ? -1 : localStorage.getItem(\"adminID\"),\r\n    mobileNumber: \"\",\r\n    gender: \"Both\",\r\n    industry: [],\r\n    jobCategory: [],\r\n    eligibility: null,\r\n    qualification: [],\r\n    candidateType: null,\r\n    specification: [],\r\n    skills: [],\r\n    prefLocation: [],\r\n    passed_out_year: -1,\r\n    experience: -1,\r\n    maxExperience: -1,\r\n    pages: 1,\r\n    size: 10,\r\n    createdTime: \"2020-01-01\",\r\n    endDate: convertDateYYYYMMDD(new Date()),\r\n    dateFilterType: \"\",\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // const [formData, setFormData] = useState(initialState);\r\n  const [options, setOptions] = useState({\r\n    Industries: [],\r\n    Jobrole: [],\r\n    keySkills: [],\r\n    Qualification: [],\r\n    specification: [],\r\n    prefLocation: [],\r\n  });\r\n\r\n  const [filteredObj, setFilteredObj] = useState({\r\n    adminId: isSuperAdmin ? -1 : localStorage.getItem(\"adminID\"),\r\n    mobileNumber: filterDetails.mobileNumber,\r\n    gender: filterDetails.gender,\r\n    industry: filterDetails.industry,\r\n    jobCategory: filterDetails.jobCategory,\r\n    eligibility: filterDetails.eligibility,\r\n    qualification: filterDetails.qualification,\r\n    candidateType: null,\r\n    specification: filterDetails.specification,\r\n    skills: filterDetails.skills,\r\n    prefLocation: filterDetails.prefLocation,\r\n    passed_out_year: -1,\r\n    experience: filterDetails.experience,\r\n    maxExperience: filterDetails.maxExperience,\r\n    pages: filterDetails.pages,\r\n    size: filterDetails.size,\r\n    createdTime: filterDetails.createdTime,\r\n    endDate: filterDetails.endDate,\r\n  });\r\n\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n\r\n  const [dateRange, setDateRange] = useState({\r\n    start: filterDetails.createdTime,\r\n    end: filterDetails.endDate,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n  });\r\n\r\n  function prefillMultiSelection(type) {\r\n    let array2 = [];\r\n    let array1 = [];\r\n    switch (type) {\r\n      case \"keySkills\":\r\n        array2 = [...options.keySkills];\r\n        array1 = [...filterDetails.skills];\r\n\r\n        break;\r\n\r\n      case \"qualification\":\r\n        array2 = [...options.Qualification];\r\n        array1 = [...filterDetails.qualification];\r\n        break;\r\n\r\n      case \"prefLocation\":\r\n        array2 = [...options.prefLocation];\r\n        array1 = [...filterDetails.prefLocation];\r\n        break;\r\n\r\n      case \"industry\":\r\n        array2 = [...options.industry];\r\n        array1 = [...filterDetails.industry];\r\n        break;\r\n\r\n      case \"jobCategory\":\r\n        array2 = [...options.Jobrole];\r\n        array1 = [...filterDetails.jobCategory];\r\n\r\n        break;\r\n\r\n      case \"specification\":\r\n        array2 = [...options.specification];\r\n        array1 = [...filterDetails.specification];\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    if (type != \"specification\") {\r\n      const filteredArray = array2.filter((item) =>\r\n        array1.includes(item.options)\r\n      );\r\n      // console.log(filteredArray, array1, array2, \"filteredArray\");\r\n      return filteredArray;\r\n    } else {\r\n      const filteredArray = array2.filter((item) =>\r\n        array1.includes(item.courses)\r\n      );\r\n\r\n      return filteredArray;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prevOptions) => ({\r\n        ...prevOptions,\r\n        Industries: data.filter((el) => el.category == \"industry\"),\r\n        Jobrole: data.filter((el) => el.category == \"job category\"),\r\n        keySkills: data.filter((element) => element.category == \"skills\"),\r\n        prefLocation: data.filter((element) => element.category == \"city\"),\r\n        Qualification: data.filter(\r\n          (element) => element.category == \"qualification\"\r\n        ),\r\n      }));\r\n    });\r\n\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const apiPromises = [\r\n      GetITICourses(),\r\n      GetdiplomaCourses(),\r\n      GetUGCourses(),\r\n      GetPGCourses(),\r\n    ];\r\n    Promise.all(apiPromises)\r\n      .then((results) => {\r\n        const specificationData = results.map((data) => data.results).flat();\r\n\r\n        setOptions((prevOptions) => ({\r\n          ...prevOptions,\r\n          specification: specificationData,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        // Handle any errors here\r\n        console.error(\"Error fetching and mapping data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleCandidateIDChange = (e) => {\r\n    const value = e.target.value.replace(/\\D/g, \"\");\r\n    const withoutExponential = value.replace(/[eE]/g, \"\");\r\n    const truncatedValue = withoutExponential.slice(0, 10);\r\n    // setCandidateidnum(truncatedValue);\r\n    setFilteredObj((prev) => ({ ...prev, mobileNumber: truncatedValue }));\r\n  };\r\n\r\n  // const updateIndustry = (value) => {\r\n  //   // to update industry\r\n  //   if (!value.length == 0) {\r\n  //     value.forEach((element) => {\r\n  //       setFilteredObj((prev) => {\r\n  //         let updatedIndustry = [...prev.industry];\r\n\r\n  //         if (!updatedIndustry.includes(element.options)) {\r\n  //           updatedIndustry.push(element.options);\r\n  //         } else {\r\n  //           updatedIndustry = value\r\n  //             .filter((el) => el.category === \"industry\")\r\n  //             .map((el) => el.options);\r\n  //         }\r\n\r\n  //         return { ...prev, industry: updatedIndustry };\r\n  //       });\r\n  //     });\r\n  //   } else {\r\n  //     setFilteredObj((prev) => ({ ...prev, industry: [] }));\r\n  //   }\r\n  // };\r\n\r\n  const updateJobCategory = (value) => {\r\n    // to update job category\r\n    if (!value.length == 0) {\r\n      value.forEach((element) => {\r\n        setFilteredObj((prev) => {\r\n          let updatedcategory = [...prev.jobCategory];\r\n\r\n          if (!updatedcategory.includes(element)) {\r\n            // updatedcategory.push(element.options);\r\n            updatedcategory.push(element);\r\n          } else {\r\n            updatedcategory = value.filter(\r\n              (el) => el.category === \"job category\"\r\n            );\r\n            // .map((el) => el.options);\r\n          }\r\n\r\n          return { ...prev, jobCategory: updatedcategory };\r\n        });\r\n      });\r\n    } else {\r\n      setFilteredObj((prev) => ({ ...prev, jobCategory: [] }));\r\n    }\r\n  };\r\n\r\n  const updateSkills = (value) => {\r\n    // to update skills\r\n    if (!value.length == 0) {\r\n      value.forEach((element) => {\r\n        setFilteredObj((prev) => {\r\n          let updateskills = [...prev.skills];\r\n\r\n          if (!updateskills.includes(element)) {\r\n            updateskills.push(element);\r\n          } else {\r\n            updateskills = value.filter((el) => el.category === \"skills\");\r\n            // .map((el) => el.options);\r\n          }\r\n\r\n          return { ...prev, skills: updateskills };\r\n        });\r\n      });\r\n    } else {\r\n      setFilteredObj((prev) => ({ ...prev, skills: [] }));\r\n    }\r\n  };\r\n\r\n  const updateCity = (value) => {\r\n    // to update cities\r\n    if (!value.length == 0) {\r\n      value.forEach((element) => {\r\n        setFilteredObj((prev) => {\r\n          let updateCity = [...prev.prefLocation];\r\n\r\n          if (!updateCity.includes(element)) {\r\n            updateCity.push(element);\r\n          } else {\r\n            updateCity = value.filter((el) => el.category === \"city\");\r\n            // .map((el) => el.options);\r\n          }\r\n\r\n          return { ...prev, prefLocation: updateCity };\r\n        });\r\n      });\r\n    } else {\r\n      setFilteredObj((prev) => ({ ...prev, prefLocation: [] }));\r\n    }\r\n  };\r\n\r\n  const updatequalification = (value) => {\r\n    // to update qualification\r\n    if (!value.length == 0) {\r\n      value.forEach((element) => {\r\n        setFilteredObj((prev) => {\r\n          let updateQualification = [...prev.qualification];\r\n\r\n          if (!updateQualification.includes(element)) {\r\n            updateQualification.push(element);\r\n          } else {\r\n            updateQualification = value.filter(\r\n              (el) => el.category === \"qualification\"\r\n            );\r\n            // .map((el) => el.options);\r\n          }\r\n\r\n          return { ...prev, qualification: updateQualification };\r\n        });\r\n      });\r\n    } else {\r\n      setFilteredObj((prev) => ({ ...prev, qualification: [] }));\r\n    }\r\n  };\r\n  const handleSpecification = (value) => {\r\n    if (!value.length == 0) {\r\n      value.forEach((element) => {\r\n        setFilteredObj((prev) => {\r\n          let updateSpecialization = [...prev.specification];\r\n\r\n          if (!updateSpecialization.includes(element)) {\r\n            updateSpecialization.push(element);\r\n          }\r\n\r\n          return { ...prev, specification: updateSpecialization };\r\n        });\r\n      });\r\n    } else {\r\n      setFilteredObj((prev) => ({ ...prev, specification: [] }));\r\n    }\r\n  };\r\n\r\n  const handleEligiblityChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    if (name === \"eligiblity\") {\r\n      setFilteredObj((prev) => ({ ...prev, eligibility: value }));\r\n    }\r\n  };\r\n\r\n  const handleGenderChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    if (name === \"Gender\") {\r\n      setFilteredObj((prev) => ({ ...prev, gender: value }));\r\n    }\r\n  };\r\n\r\n  const handleAssignToChange = (e) => {\r\n    const { value, name } = e.target;\r\n    console.log(value, name);\r\n\r\n    setFilteredObj((prev) => ({ ...prev, adminId: value }));\r\n  };\r\n\r\n  const Eligiblity = [\r\n    {\r\n      value: \"Qualified\",\r\n      label: \"Qualified\",\r\n    },\r\n    {\r\n      value: \"Not qualified\",\r\n      label: \"Not qualified\",\r\n    },\r\n  ];\r\n  const Gender = [\r\n    {\r\n      value: \"Male\",\r\n      label: \"Male\",\r\n    },\r\n    {\r\n      value: \"Female\",\r\n      label: \"Female\",\r\n    },\r\n    {\r\n      value: \"Both\",\r\n      label: \"Both\",\r\n    },\r\n  ];\r\n\r\n  const expYearMonth = [\r\n    {\r\n      value: \"0\",\r\n      label: \"0\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n  ];\r\n  const handleExperienceChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    if (name === \"experience\") {\r\n      setFilteredObj((prev) => ({ ...prev, experience: value }));\r\n    } else if (name === \"maxExperience\") {\r\n      setFilteredObj((prev) => ({ ...prev, maxExperience: value }));\r\n    }\r\n  };\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        start: today.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        start: startDate.toISOString().split(\"T\")[0],\r\n        end: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        start: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setDateRange((prev) => ({\r\n        ...prev,\r\n        end: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    // Implement your validation logic here\r\n    // For example, you can check if both start and end dates are filled\r\n    const isValid = dateRange.start && dateRange.end;\r\n\r\n    if (!dateRange.start) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!dateRange.end) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleApplyDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // Your submit logic here\r\n      // Proceed with form submission\r\n\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false); // Close the modal or perform other actions\r\n    }\r\n  };\r\n  function handleClickCross(e) {\r\n    e.preventDefault();\r\n    postFilter();\r\n  }\r\n\r\n  function postFilter() {\r\n    Dispatch(\r\n      CandidateRegisteredActions.setRegisterCandidateListFilter({\r\n        ...filteredObj,\r\n        createdTime: dateRange.start,\r\n        endDate: dateRange.end,\r\n        dateFilterType: dateRange.dateFilterType,\r\n      })\r\n    );\r\n\r\n    setShowFilter(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // List of keys to be removed\r\n    const keysToRemove = [\"pages\", \"size\", \"endDate\"];\r\n\r\n    let filterObject = { ...filterDetails };\r\n    let initialFilterObject = { ...initialFilterObj };\r\n\r\n    // Remove keys from the object\r\n    keysToRemove.forEach((key) => delete filterObject[key]);\r\n    keysToRemove.forEach((key) => delete initialFilterObject[key]);\r\n\r\n    if (JSON.stringify(filterObject) != JSON.stringify(initialFilterObject)) {\r\n      setShowRedDot(true);\r\n    } else {\r\n      setShowRedDot(false);\r\n    }\r\n  }, [filterDetails]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    postFilter();\r\n  };\r\n  function onClearFilter(e) {\r\n    // e.preventDefault();\r\n    Dispatch(\r\n      CandidateRegisteredActions.setRegisterCandidateListFilter(\r\n        initialFilterObj\r\n      )\r\n    );\r\n\r\n    setDateRange({\r\n      start: \"2020-01-01\",\r\n      end: convertDateYYYYMMDD(new Date()),\r\n      dateFilterType: \"\",\r\n    });\r\n    setFilteredObj(initialFilterObj);\r\n    setShowRedDot(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button\r\n          className={`rounded-pill d-flex align-items-center ${FBStyle.Filterbutton}`}\r\n          variant=\"contained\"\r\n          onClick={() => setShowFilter(true)}\r\n        >\r\n          <BiFilterAlt />\r\n          <p\r\n            style={{\r\n              backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n              width: \"8px\",\r\n              height: \"8px\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          ></p>\r\n          Filter\r\n        </button>\r\n      </div>\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={1001}\r\n            childComponent={\r\n              <>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <h4 className=\"text-center mb-2\">Filter by</h4>\r\n                  <h3>\r\n                    <span\r\n                      onClick={handleClickCross}\r\n                      className=\"btn btn-outline-danger\"\r\n                      style={{ cursor: \"pointer\", fontSize: 15 }}\r\n                    >\r\n                      <AiOutlineClose />\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                <div className={`${registercandidatestyle.BoxContainerWidth}`}>\r\n                  <form\r\n                    onSubmit={(e) => {\r\n                      handleSubmit(e);\r\n                    }}\r\n                  >\r\n                    <>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Mobile number\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={filteredObj.mobileNumber}\r\n                            defaultValue={filterDetails.mobileNumber}\r\n                            onChange={handleCandidateIDChange}\r\n                            inputProps={{ maxLength: 10 }}\r\n                            InputProps={{\r\n                              startAdornment: (\r\n                                <span\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <AiOutlinePhone\r\n                                    style={{ marginRight: \"5px\" }}\r\n                                  />{\" \"}\r\n                                  +91\r\n                                </span>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        {/* <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <Autocomplete\r\n                            limitTags={1}\r\n                            name=\"industries\"\r\n                            multiple\r\n                            id=\"tags-outlined\"\r\n                            onChange={(event, value) => {\r\n                              updateIndustry(value);\r\n                            }}\r\n                            options={(options.Industries || []).map(\r\n                              (option) => option\r\n                            )}\r\n                            getOptionLabel={(option) => `${option.options}`}\r\n                            filterSelectedOptions\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Job industries\"\r\n                                placeholder=\"Favorites\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div> */}\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <FormControl variant=\"outlined\" fullWidth>\r\n                            <TextField\r\n                              label=\"Registered on\"\r\n                              id=\"basic-button\"\r\n                              value={`${dateRange.dateFilterType}`}\r\n                              // value={`${dateRange.start} - ${dateRange.end}`}\r\n                              aria-controls={open ? \"basic-menu\" : undefined}\r\n                              aria-haspopup=\"true\"\r\n                              aria-expanded={open ? \"true\" : undefined}\r\n                              onClick={handleDateClick}\r\n                            ></TextField>\r\n                            <Menu\r\n                              id=\"basic-menu\"\r\n                              anchorEl={anchorEl}\r\n                              open={open}\r\n                              onClose={handleClose}\r\n                              MenuListProps={{\r\n                                \"aria-labelledby\": \"basic-button\",\r\n                              }}\r\n                            >\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"today\");\r\n                                }}\r\n                                style={{ width: \"210px\" }}\r\n                              >\r\n                                Today\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"yesterday\");\r\n                                }}\r\n                              >\r\n                                Yesterday\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastWeek\");\r\n                                }}\r\n                              >\r\n                                Last 1 Week\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastTwoWeeks\");\r\n                                }}\r\n                              >\r\n                                Last 2 Week\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"lastMonth\");\r\n                                }}\r\n                              >\r\n                                Last Month\r\n                              </MenuItem>\r\n                              <MenuItem\r\n                                onClick={() => {\r\n                                  handleDateSelect(\"custom\");\r\n                                }}\r\n                              >\r\n                                Custom Date\r\n                              </MenuItem>\r\n                            </Menu>\r\n                          </FormControl>\r\n                          {/*  */}\r\n                          {showCustom && (\r\n                            <MyModal>\r\n                              <ModalContainer\r\n                                zIndex={1005}\r\n                                childComponent={\r\n                                  <div\r\n                                    style={{\r\n                                      minWidth: \"400px\",\r\n                                      width: \"auto\",\r\n                                    }}\r\n                                  >\r\n                                    <>\r\n                                      <div>\r\n                                        <form>\r\n                                          <p className=\"text-center \">\r\n                                            Select Custom Date{\" \"}\r\n                                          </p>\r\n                                          <div className=\"mt-2\">\r\n                                            <label htmlFor=\"start\">From</label>\r\n                                            <input\r\n                                              className={`form-control ${\r\n                                                validationErrors.start\r\n                                                  ? \"is-invalid\"\r\n                                                  : \"\"\r\n                                              }`}\r\n                                              style={{ width: \"100%\" }}\r\n                                              type=\"date\"\r\n                                              id=\"start\"\r\n                                              onChange={(value) =>\r\n                                                handleCustomDate(\r\n                                                  value,\r\n                                                  \"startDate\"\r\n                                                )\r\n                                              }\r\n                                              name=\"trip-start\"\r\n                                              min=\"2020-01-01\"\r\n                                              max={\r\n                                                new Date()\r\n                                                  .toISOString()\r\n                                                  .split(\"T\")[0]\r\n                                              }\r\n                                            />\r\n                                            {validationErrors.start && (\r\n                                              <div className=\"invalid-feedback\">\r\n                                                Start date is required.\r\n                                              </div>\r\n                                            )}\r\n                                          </div>\r\n                                          <div className=\"mt-2\">\r\n                                            <label htmlFor=\"end\">To</label>\r\n                                            <input\r\n                                              className={`form-control ${\r\n                                                validationErrors.end\r\n                                                  ? \"is-invalid\"\r\n                                                  : \"\"\r\n                                              }`}\r\n                                              style={{ width: \"100%\" }}\r\n                                              type=\"date\"\r\n                                              id=\"end\"\r\n                                              onChange={(value) =>\r\n                                                handleCustomDate(\r\n                                                  value,\r\n                                                  \"endDate\"\r\n                                                )\r\n                                              }\r\n                                              name=\"trip-end\"\r\n                                              min=\"2020-01-01\"\r\n                                              max={\r\n                                                new Date()\r\n                                                  .toISOString()\r\n                                                  .split(\"T\")[0]\r\n                                              }\r\n                                            />\r\n                                            {validationErrors.end && (\r\n                                              <div className=\"invalid-feedback\">\r\n                                                End date is required.\r\n                                              </div>\r\n                                            )}\r\n                                          </div>\r\n                                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                                            <button\r\n                                              onClick={() => {\r\n                                                setValidationErrors({\r\n                                                  start: false,\r\n                                                  end: false,\r\n                                                });\r\n                                                setshowCustom(false);\r\n                                              }}\r\n                                              style={{\r\n                                                backgroundColor: \"#b2261c\",\r\n                                              }}\r\n                                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                                            >\r\n                                              Close\r\n                                            </button>\r\n                                            <button\r\n                                              onClick={handleApplyDate}\r\n                                              // color=\"primary\"\r\n                                              className=\"btn rounded-pill text-white px-4\"\r\n                                              style={{\r\n                                                backgroundColor: \"#169C50\",\r\n                                              }}\r\n                                            >\r\n                                              Apply\r\n                                            </button>\r\n                                          </div>\r\n                                        </form>\r\n                                      </div>\r\n                                    </>\r\n                                  </div>\r\n                                }\r\n                              />\r\n                            </MyModal>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <Autocomplete\r\n                            limitTags={1}\r\n                            multiple\r\n                            id=\"tags-outlined\"\r\n                            // options={candiOptions.Industries}\r\n                            onChange={(event, value) => {\r\n                              updateJobCategory(value);\r\n                            }}\r\n                            options={(options.Jobrole || []).map(\r\n                              (option) => option\r\n                            )}\r\n                            getOptionLabel={(option) => `${option.options}`}\r\n                            value={filteredObj.jobCategory}\r\n                            defaultValue={prefillMultiSelection(\"jobCategory\")}\r\n                            filterSelectedOptions\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Job category\"\r\n                                placeholder=\"Favorites\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <Autocomplete\r\n                            limitTags={1}\r\n                            multiple\r\n                            id=\"tags-outlined\"\r\n                            options={(options.keySkills || []).map(\r\n                              (option) => option\r\n                            )}\r\n                            getOptionLabel={(option) => `${option.options}`}\r\n                            onChange={(event, value) => {\r\n                              updateSkills(value);\r\n                            }}\r\n                            value={filteredObj.skills}\r\n                            defaultValue={prefillMultiSelection(\"keySkills\")}\r\n                            filterSelectedOptions\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"key skill\"\r\n                                placeholder=\"Favorites\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mt-3\">\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <Autocomplete\r\n                            limitTags={1}\r\n                            multiple\r\n                            id=\"tags-outlined\"\r\n                            options={(options.Qualification || []).map(\r\n                              (option) => option\r\n                            )}\r\n                            getOptionLabel={(option) => `${option.options}`}\r\n                            filterSelectedOptions\r\n                            onChange={(event, value) => {\r\n                              updatequalification(value);\r\n                            }}\r\n                            value={filteredObj.qualification}\r\n                            defaultValue={prefillMultiSelection(\r\n                              \"qualification\"\r\n                            )}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Qualification\"\r\n                                placeholder=\"Qualification\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          {\" \"}\r\n                          <Autocomplete\r\n                            limitTags={1}\r\n                            multiple\r\n                            id=\"tags-outlined\"\r\n                            options={options.specification}\r\n                            getOptionLabel={(option) => option.courses}\r\n                            filterSelectedOptions\r\n                            onChange={(event, value) => {\r\n                              handleSpecification(value);\r\n                            }}\r\n                            value={filteredObj.specification}\r\n                            defaultValue={prefillMultiSelection(\r\n                              \"specification\"\r\n                            )}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Specialization\"\r\n                                placeholder=\"specialization\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <Autocomplete\r\n                            limitTags={1}\r\n                            multiple\r\n                            id=\"tags-outlined\"\r\n                            options={(options.prefLocation || []).map(\r\n                              (option) => option\r\n                            )}\r\n                            getOptionLabel={(option) => `${option.options}`}\r\n                            onChange={(event, value) => {\r\n                              updateCity(value);\r\n                            }}\r\n                            value={filteredObj.prefLocation}\r\n                            defaultValue={prefillMultiSelection(\"prefLocation\")}\r\n                            filterSelectedOptions\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"City\"\r\n                                placeholder=\"Favorites\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <TextField\r\n                            onChange={(e) => handleEligiblityChange(e)}\r\n                            name=\"eligiblity\"\r\n                            id=\"eligiblity\"\r\n                            className=\"form-control\"\r\n                            select\r\n                            label=\"Status\"\r\n                            value={filteredObj.eligibility}\r\n                          >\r\n                            {Eligiblity.map((option) => (\r\n                              <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mt-3\">\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <TextField\r\n                            onChange={(e) => handleExperienceChange(e)}\r\n                            name=\"experience\"\r\n                            id=\"experience\"\r\n                            className=\"form-control\"\r\n                            select\r\n                            label=\"Min Experience\"\r\n                            value={filteredObj.experience}\r\n                          >\r\n                            {expYearMonth.map((option) => (\r\n                              <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <TextField\r\n                            onChange={(e) => handleExperienceChange(e)}\r\n                            name=\"maxExperience\"\r\n                            id=\"maxExperience\"\r\n                            className=\"form-control\"\r\n                            select\r\n                            label=\"Max Experience\"\r\n                            value={filteredObj.maxExperience}\r\n                          >\r\n                            {expYearMonth.map((option) => (\r\n                              <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <TextField\r\n                            onChange={(e) => handleGenderChange(e)}\r\n                            name=\"Gender\"\r\n                            id=\"Gender\"\r\n                            className=\"form-control\"\r\n                            select\r\n                            label=\"Gender\"\r\n                            value={filteredObj.gender}\r\n                          >\r\n                            {Gender.map((option) => (\r\n                              <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        </div>\r\n                        <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          {adminList && isSuperAdmin && (\r\n                            <TextField\r\n                              onChange={(e) => handleAssignToChange(e)}\r\n                              name=\"AssignedTo\"\r\n                              id=\"AssignedTo\"\r\n                              className=\"form-control\"\r\n                              select\r\n                              label=\"Assigned To\"\r\n                              // value={filteredObj.adminId}\r\n                              defaultValue={filteredObj.adminId}\r\n                            >\r\n                              <MenuItem value={-1}>ALL</MenuItem>\r\n                              {adminList.map((el) => (\r\n                                <MenuItem key={el.id} value={el.id}>\r\n                                  {el.userName}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row gap-2 justify-content-end mt-4\">\r\n                        <button\r\n                          className={`rounded-pill ${FBStyle.Filterbutton}`}\r\n                          variant=\"outlined\"\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            onClearFilter(e);\r\n                          }}\r\n                        >\r\n                          Clear All\r\n                        </button>\r\n                        <button\r\n                          className={`rounded-pill ${FBStyle.search}`}\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          sx={{ minWidth: \"150px\" }}\r\n                        >\r\n                          Search\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  </form>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateResourceFilter;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\n\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Pagination,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport SuccessTick from \"../../../components/success_tick\";\r\nimport { LuRefreshCcw } from \"react-icons/lu\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  PutCandidateIsQualified,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n  postCandidate,\r\n  PostFollowup,\r\n  GetFollowUpEvents,\r\n} from \"../../../apiServices\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\nimport canLeadStyle from \"../CandidateLeadTable/candidateLead.module.scss\";\r\nimport RegisterCandidateFilter from \"./CandidateResourceFilter\";\r\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\r\nimport { DateTimePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {\r\n  CandidateRegisteredActions,\r\n  commonPopupActions,\r\n} from \"../../../redux-store/store\";\r\nimport {\r\n  DMMMYYYY_formate,\r\n  MyModal,\r\n  capitalizeWords,\r\n  textTruncate,\r\n} from \"../../../utility\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport FBStyle from \"../FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport { useRef } from \"react\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport RegisterCandidateStyle from \"../CandidateRegistered/RegisteredCandidate.module.scss\";\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#d2d2d2\",\r\n    color: \"#545454f0\",\r\n    padding: \"8px\",\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    padding: \"8px\",\r\n    fontSize: 14,\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n}));\r\nfunction CandidateResource() {\r\n  //     const CandidateResource = ({ Id }) => {\r\n  //   const candidateId = Id;\r\n  const CandidateRegisterFilter = useSelector(\r\n    (state) => state.CandidateRegistered.filterData\r\n  );\r\n\r\n  const CanList = useSelector(\r\n    (state) => state.CandidateRegistered.RegisterCandidateList\r\n  );\r\n\r\n  const [currentCandidateDetail, setCurrentCandidateDetails] = useState();\r\n\r\n  // Using the find method to get the candidate with the specified ID\r\n  // const desiredCandidate = CanList.find((candidate) => candidate.candidate_id);\r\n  const [showConfirmationPopup, setShowConfirmPopup] = useState(false);\r\n  const [showConfirmationqualifiedPopup, setShowConfirmQualifiedPopup] =\r\n    useState(false);\r\n  const [isQualifiedDetails, setIsQualifiedDetails] = useState({\r\n    confirmtext: \"\",\r\n    notes: \"\",\r\n    isQualified: \"\",\r\n    openPopup: false,\r\n    candidateId: \"\",\r\n  });\r\n  const [pageCount, setPageCount] = useState({\r\n    totalPages: 0,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n  });\r\n  const [followupError, setFollowupError] = useState({\r\n    dateTime: false,\r\n    addNotes: false,\r\n    selectEvent: false,\r\n  });\r\n  const openFollowup = () => {\r\n    setFollowupOpen(true);\r\n  };\r\n  const [size, setSize] = useState(10);\r\n  const [totalCount, setTotalCount] = useState();\r\n  const [Follownotes, setFollownotes] = useState(\"\");\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const [eventData, setEventData] = useState([]);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [enableSubmit, setEnableSubmit] = useState(false);\r\n  const [dateTimeError, setDateTimeError] = useState(\"\");\r\n  const [dateTime, setDateTime] = useState(\"\");\r\n  const [formattedDate, setFormattedDate] = useState(null);\r\n  const [followupopen, setFollowupOpen] = useState(false);\r\n  const [showLoader, setShowLoader] = useState(false); // New state for loader\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n  const [adminName, setAdminName] = useState([]);\r\n  const [adminid, setAdminId] = useState([]);\r\n  // const handleFollowSubmit = async () => {\r\n  //   if (!formattedDate) {\r\n  //     setFollowupError((prev) => ({\r\n  //       ...prev,\r\n  //       dateTime: true,\r\n  //     }));\r\n  //     return;\r\n  //   } else if (Follownotes.trim() === \"\") {\r\n  //     setFollowupError((prev) => ({\r\n  //       ...prev,\r\n  //       addNotes: true,\r\n  //     }));\r\n  //     return;\r\n  //   }\r\n  //   // else if (!selectedValue) {\r\n  //   //   setFollowupError((prev) => ({\r\n  //   //     ...prev,\r\n  //   //     selectEvent: true,\r\n  //   //   }));\r\n  //   //   return;\r\n  //   // }\r\n  //   else {\r\n  //     try {\r\n  //       // const formattedDate = dateTime.toISOString();\r\n  //       await PostFollowup(\r\n  //         null,\r\n  //         null,\r\n  //         currentCandidateDetail.candidate_id,\r\n  //         formattedDate,\r\n  //         Follownotes,\r\n  //         \"Candidate\"\r\n  //       );\r\n\r\n  //       setFormattedDate(\"\");\r\n  //       setSelectedValue(\"\");\r\n  //       setFollownotes(\"\");\r\n  //       setShowSuccess(true);\r\n  //       setTimeout(() => {\r\n  //         setShowSuccess(false);\r\n  //         setShowConfirmPopup(false);\r\n  //       }, 3000);\r\n  //       closeFollowup();\r\n  //     } catch (error) {\r\n  //       console.error(\"There was a problem with the API call:\", error);\r\n  //     }\r\n  //   }\r\n  // };\r\n  const handleFollowSubmit = async () => {\r\n    if (!formattedDate) {\r\n      setFollowupError((prev) => ({\r\n        ...prev,\r\n        dateTime: true,\r\n      }));\r\n      return;\r\n    } else if (Follownotes.trim() === \"\") {\r\n      setFollowupError((prev) => ({\r\n        ...prev,\r\n        addNotes: true,\r\n      }));\r\n      return;\r\n    } else {\r\n      try {\r\n        const formattedDateTime = dayjs(dateTime);\r\n        const formattedDate = formattedDateTime.format(\"YYYY-MM-DD\");\r\n        const followUpTime = formattedDateTime.format(\"hh:mm A\");\r\n\r\n        console.log(\"Formatted Date:\", formattedDate);\r\n        console.log(\"Follow-Up Time:\", followUpTime);\r\n\r\n        await PostFollowup(\r\n          null,\r\n          null,\r\n          currentCandidateDetail.candidate_id,\r\n          formattedDate,\r\n          followUpTime,\r\n          Follownotes,\r\n          \"Candidate\"\r\n        );\r\n\r\n        setFormattedDate(\"\");\r\n        setSelectedValue(\"\");\r\n        setFollownotes(\"\");\r\n        setShowSuccess(true);\r\n        setTimeout(() => {\r\n          setShowSuccess(false);\r\n          setShowConfirmPopup(false);\r\n        }, 3000);\r\n        closeFollowup();\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the API call:\", error);\r\n      }\r\n    }\r\n  };\r\n  const closeFollowup = () => {\r\n    setFollowupOpen(false);\r\n    setFollowupError((prev) => ({\r\n      ...prev,\r\n      dateTime: false,\r\n      addNotes: false,\r\n      selectEvent: false,\r\n    }));\r\n    setFormattedDate(\"\");\r\n    setFollownotes(\"\");\r\n    setSelectedValue(\"\");\r\n    postCandidate(CandidateRegisterFilter).then((data) => {\r\n      console.log(data, \"meta data\");\r\n      Dispatch(CandidateRegisteredActions.setRegisterCandidateList(data));\r\n\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        totalPages: Math.ceil(\r\n          (data.length > 0 ? data[0].total_count : 10) / size\r\n        ),\r\n      }));\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    // Fetch follow-up events data when component mounts\r\n    async function fetchEventData() {\r\n      try {\r\n        const data = await GetFollowUpEvents();\r\n        setEventData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching follow-up events:\", error);\r\n      }\r\n    }\r\n\r\n    fetchEventData();\r\n  }, []);\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((data) => {\r\n      console.log(data, \"All admin details\");\r\n      const adminNames = data.map((item) => item.userName);\r\n      const adminIds = data.map((item) => item.id);\r\n      setAdminName(adminNames);\r\n      setAdminId(adminIds);\r\n    });\r\n\r\n    let adminId = isSuperAdmin ? -1 : localStorage.getItem(\"adminID\");\r\n    Dispatch(\r\n      CandidateRegisteredActions.setRegisterCandidateListFilterAdminId(adminId)\r\n    );\r\n  }, [adminDetails]);\r\n  useEffect(() => {\r\n    console.log(CanList, \"candidateListedjobs\");\r\n  }, [CanList]);\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function currentCanDetails(data) {\r\n    // console.log(data,\"Current Dataaaaaa\");\r\n    setCurrentCandidateDetails(data);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setShowLoader(true); // Set loader to true\r\n\r\n    Dispatch(\r\n      CandidateRegisteredActions.setRegisterCandidateList({\r\n        gender: null,\r\n        mobileNumber: -1,\r\n        assignTo: null,\r\n        status: null,\r\n        industry: null,\r\n        jobCategory: null,\r\n        qualification: null,\r\n        candidateType: null,\r\n        skills: null,\r\n        prefLocation: null,\r\n        eligibility: null,\r\n        passed_out_year: -1,\r\n        specification: null,\r\n        maxExperience: -1,\r\n        experience: -1,\r\n        endDate: null,\r\n        createdTime: null,\r\n        page: 1,\r\n        size: 10,\r\n      })\r\n    );\r\n\r\n    // Fetch data after resetting\r\n    postCandidate(CandidateRegisterFilter)\r\n      .then((data) => {\r\n        console.log(data, \"meta data\");\r\n        Dispatch(CandidateRegisteredActions.setRegisterCandidateList(data));\r\n\r\n        setPageCount((prev) => ({\r\n          ...prev,\r\n          totalPages: Math.ceil(\r\n            (data.length > 0 ? data[0].total_count : 10) / size\r\n          ),\r\n        }));\r\n      })\r\n      .finally(() => {\r\n        setShowLoader(false);\r\n      });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setShowLoader(true); // Set loader to true\r\n\r\n  //   // console.log(CandidateRegisterFilter, \"CandidateRegisterFilter\");\r\n\r\n  //   postCandidate(CandidateRegisterFilter)\r\n  //     .then((data) => {\r\n  //       // console.log(data, \"dataaa\");\r\n  //       if (data) {\r\n  //         Dispatch(CandidateRegisteredActions.setRegisterCandidateList(data));\r\n  //         setTotalCount(data[0].total_count);\r\n  //         setPageCount((prev) => ({\r\n  //           ...prev,\r\n  //           totalPages: Math.ceil(\r\n  //             (data.length > 0 ? data[0].total_count : 10) / size\r\n  //           ),\r\n  //         }));\r\n  //       } else {\r\n  //         console.error(\r\n  //           \"Data received from postCandidate is undefined or null.\"\r\n  //         );\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       alert(\"Something went wrong\" + err);\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setShowLoader(false);\r\n  //     });\r\n  // }, [CandidateRegisterFilter]);\r\n  useEffect(() => {\r\n    setShowLoader(true); // Set loader to true\r\n\r\n    postCandidate(CandidateRegisterFilter)\r\n      .then((data) => {\r\n        // console.log(data, \"dataaa\");\r\n        if (data) {\r\n          Dispatch(CandidateRegisteredActions.setRegisterCandidateList(data));\r\n\r\n          // Check if total_count is available in the response data\r\n          if (data[0] && data[0].total_count !== undefined) {\r\n            setTotalCount(data[0].total_count);\r\n            setPageCount((prev) => ({\r\n              ...prev,\r\n              totalPages: Math.ceil(\r\n                (data.length > 0 ? data[0].total_count : 10) / size\r\n              ),\r\n            }));\r\n          } else {\r\n            // If total_count is not available, set totalCount and totalPages to default values\r\n            setTotalCount(0);\r\n            setPageCount((prev) => ({\r\n              ...prev,\r\n              totalPages: 0,\r\n            }));\r\n            // Dispatch an empty array to CandidateRegisteredActions\r\n            Dispatch(CandidateRegisteredActions.setRegisterCandidateList([]));\r\n          }\r\n        } else {\r\n          console.error(\r\n            \"Data received from postCandidate is undefined or null.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Something went wrong\" + err);\r\n      })\r\n      .finally(() => {\r\n        setShowLoader(false);\r\n      });\r\n  }, [CandidateRegisterFilter]);\r\n\r\n  function candidatePagination(event, page) {\r\n    const currentPage = page;\r\n\r\n    Dispatch(\r\n      CandidateRegisteredActions.setRegisterCandidateListFilterPage(currentPage)\r\n    );\r\n  }\r\n\r\n  function handleConfirmationOpenQualify() {\r\n    setShowConfirmQualifiedPopup(true);\r\n  }\r\n\r\n  function handleConfirmationOpen() {\r\n    setShowConfirmPopup(true);\r\n  }\r\n\r\n  const handleCancelClick = () => {\r\n    setShowConfirmQualifiedPopup(false);\r\n  };\r\n\r\n  const handleCancelClicknotqualify = () => {\r\n    setShowConfirmPopup(false);\r\n  };\r\n\r\n  function candidateSize(size) {\r\n    setSize(size);\r\n    Dispatch(\r\n      CandidateRegisteredActions.setRegisterCandidateListFiltersize(size)\r\n    );\r\n  }\r\n  const handleCandidateDetails = async (candidateId, type) => {\r\n    let data;\r\n    if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateId);\r\n    } else if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  const inputRef = {\r\n    qualified: useRef(),\r\n    notQualified: useRef(),\r\n    followup: useRef(),\r\n    // rescheduled: useRef(),\r\n  };\r\n  const handleButtonClick = (refName) => {\r\n    const ref = inputRef[refName];\r\n    if (ref.current) {\r\n      ref.current.click();\r\n    }\r\n  };\r\n  function openIsQualifyPopup(status) {\r\n    // console.log(candidate_id, \"idd\");\r\n    let confirmText = \"\";\r\n    let isQualified;\r\n    if (status == \"qualify\") {\r\n      confirmText = `Are you sure you want to qualify ${currentCandidateDetail.first_name} `;\r\n      isQualified = true;\r\n    } else {\r\n      confirmText = `Are you sure you want to not qualify ${currentCandidateDetail.first_name} `;\r\n      isQualified = false;\r\n    }\r\n\r\n    setIsQualifiedDetails((prev) => ({\r\n      ...prev,\r\n      openPopup: true,\r\n      isQualified: isQualified,\r\n      notes: \"\",\r\n      confirmtext: confirmText,\r\n      candidateId: currentCandidateDetail.candidate_id,\r\n    }));\r\n  }\r\n\r\n  function handleConfirmationClose() {\r\n    setIsQualifiedDetails((prev) => ({\r\n      ...prev,\r\n      openPopup: false,\r\n    }));\r\n  }\r\n  function ConfirmFormSubmit() {\r\n    PutCandidateIsQualified(isQualifiedDetails)\r\n      .then(() => {\r\n        const updatedCanList = CanList.map((candidate) => {\r\n          if (candidate.candidate_id === currentCandidateDetail.candidate_id) {\r\n            return {\r\n              ...candidate,\r\n              qualified: isQualifiedDetails.isQualified ? 1 : 0,\r\n              not_qualified: isQualifiedDetails.isQualified ? 0 : 1,\r\n            };\r\n          }\r\n          return candidate;\r\n        });\r\n        Dispatch(\r\n          CandidateRegisteredActions.setRegisterCandidateList(updatedCanList)\r\n        );\r\n        setShowConfirmPopup(false);\r\n        setShowConfirmQualifiedPopup(false);\r\n        setIsQualifiedDetails((prev) => ({\r\n          ...prev,\r\n          openPopup: false,\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={`${canLeadStyle.Topcontainer}`}>\r\n          {\" \"}\r\n          <div className=\"d-flex \">\r\n            Show {\"  \"}\r\n            <select\r\n              name=\"\"\r\n              id=\"\"\r\n              className=\"px-1 py-1 mx-2\"\r\n              onChange={(event) => candidateSize(event.target.value)}\r\n            >\r\n              <option selected value=\"10\">\r\n                10\r\n              </option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"30\">30</option>\r\n            </select>\r\n            {\"   \"}\r\n            Entries\r\n          </div>\r\n          <div className={`${canLeadStyle.filterAdduser}`}>\r\n            <div className=\"mt-1 me-2\">Total Count : {totalCount}</div>\r\n            <div\r\n              className=\"p-1 success  me-2 mx-2 ms-auto\"\r\n\r\n              // style={{ : \"#169C50\", color: \"white\" }}\r\n            >\r\n              <LuRefreshCcw onClick={handleReset} />\r\n            </div>\r\n            <RegisterCandidateFilter />\r\n          </div>\r\n        </div>\r\n        <div className=\"\" style={{ maxWidth: \"100vw\", overflowX: \"auto\" }}>\r\n          <TableContainer style={{ height: \"64vh\", overflowY: \"auto\" }}>\r\n            <Table stickyHeader aria-label=\"sticky table\" className={``}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n                  <StyledTableCell>Mobile Number</StyledTableCell>\r\n                  <StyledTableCell>Job Category</StyledTableCell>\r\n                  <StyledTableCell>Experience</StyledTableCell>\r\n                  <StyledTableCell>Qualification</StyledTableCell>\r\n                  <StyledTableCell>Preferred City</StyledTableCell>\r\n                  {isSuperAdmin && (\r\n                    <StyledTableCell>Assigned To</StyledTableCell>\r\n                  )}\r\n                  <StyledTableCell>Registered on</StyledTableCell>\r\n                  <StyledTableCell>Status</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {CanList.length > 0 &&\r\n                  CanList.map((data, i) => {\r\n                    return (\r\n                      <TableRow\r\n                        key={i}\r\n                        sx={{\r\n                          \"&:last-child td, &:last-child th\": {\r\n                            border: 0,\r\n                          },\r\n                        }}\r\n                        onClick={() => {\r\n                          currentCanDetails(data);\r\n                        }}\r\n                      >\r\n                        <StyledTableCell>\r\n                          <span\r\n                            onClick={() => {\r\n                              handleCandidateDetails(\r\n                                data.candidate_id,\r\n                                \"RegisterCandidate\"\r\n                              );\r\n                            }}\r\n                            style={{ cursor: \"pointer\" }}\r\n                            className=\"text-primary \"\r\n                            title={data.first_name}\r\n                          >\r\n                            {data.first_name\r\n                              ? textTruncate(\r\n                                  capitalizeWords(data.first_name),\r\n                                  15\r\n                                ) +\r\n                                \" \" +\r\n                                (data.last_name\r\n                                  ? textTruncate(\r\n                                      capitalizeWords(data.last_name),\r\n                                      15\r\n                                    ) + \"\"\r\n                                  : \"\")\r\n                              : \"-\"}\r\n                          </span>\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>{data.mobile_number}</StyledTableCell>{\" \"}\r\n                        <StyledTableCell title={data.job_category}>\r\n                          {data.job_category &&\r\n                            textTruncate(data.job_category, 20)}\r\n                          {!data.job_category && <>-</>}\r\n                        </StyledTableCell>{\" \"}\r\n                        <StyledTableCell>\r\n                          {data.exp_in_years} Year(s)\r\n                        </StyledTableCell>{\" \"}\r\n                        <StyledTableCell title={data.qualification}>\r\n                          {textTruncate(data.qualification, 20)}\r\n                        </StyledTableCell>{\" \"}\r\n                        <StyledTableCell title={data.city}>\r\n                          {data.city && textTruncate(data.city, 20)}\r\n                          {!data.city && <>-</>}\r\n                        </StyledTableCell>{\" \"}\r\n                        {isSuperAdmin && (\r\n                          <StyledTableCell align=\"left\">\r\n                            <>{adminName[adminid.indexOf(data.assign_to)]}</>\r\n                          </StyledTableCell>\r\n                        )}\r\n                        <StyledTableCell>\r\n                          {<DMMMYYYY_formate dateValue={data.created_time} />}\r\n                        </StyledTableCell>{\" \"}\r\n                        <StyledTableCell>\r\n                          <div className={`${RegisterCandidateStyle.Status}`}>\r\n                            <div>\r\n                              {data.qualified === 1 && (\r\n                                <>\r\n                                  <div\r\n                                    className={`${RegisterCandidateStyle.qualified}`}\r\n                                  >\r\n                                    Qualified\r\n                                  </div>\r\n                                </>\r\n                              )}\r\n\r\n                              {data.not_qualified === 1 && (\r\n                                <>\r\n                                  <div\r\n                                    className={`${RegisterCandidateStyle.Notqualified}`}\r\n                                  >\r\n                                    Not Qualified\r\n                                  </div>\r\n                                </>\r\n                              )}\r\n                              {data.is_daily_task === 1 && (\r\n                                <>\r\n                                  <div\r\n                                    className={`${RegisterCandidateStyle.Followup}`}\r\n                                  >\r\n                                    Follow Up\r\n                                  </div>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"btn-group dropstart\">\r\n                              <button\r\n                                type=\"button\"\r\n                                // className={`btn btn-light `}\r\n\r\n                                data-bs-toggle=\"dropdown\"\r\n                                data-bs-no-caret=\"true\"\r\n                                aria-expanded=\"false\"\r\n                                style={{\r\n                                  border: \"none\",\r\n                                  background: \"none\",\r\n                                  color: \"#000\",\r\n                                  cursor: \"pointer\",\r\n                                  outline: \"none\",\r\n                                  position: \"relative\",\r\n                                  right: \"5px\",\r\n                                  // backgroundColor: \"red\",\r\n                                  fontSize: 20,\r\n                                  zIndex: 1,\r\n                                }}\r\n                              >\r\n                                <span className=\"\">\r\n                                  {\" \"}\r\n                                  <BsThreeDotsVertical />{\" \"}\r\n                                </span>\r\n                                {/* <AiOutlineEdit /> */}\r\n                              </button>{\" \"}\r\n                              <ul\r\n                                className=\"dropdown-menu\"\r\n                                style={{ textAlign: \"left\" }}\r\n                                // ref={dropdownRef}\r\n                              >\r\n                                <li\r\n                                  onClick={() => {\r\n                                    openIsQualifyPopup(\"qualify\");\r\n                                  }}\r\n                                >\r\n                                  <a className=\"dropdown-item\" href=\"#\">\r\n                                    <div\r\n                                      className={`${FBStyle.select_wrp}`}\r\n                                      onClick={() => {\r\n                                        handleButtonClick(\"qualified\");\r\n                                        handleConfirmationOpenQualify(true);\r\n                                      }}\r\n                                    >\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        // ref={inputRef.qualified}\r\n                                        name={`status_${data.user_id}`}\r\n                                        checked={data.qualified}\r\n                                        id={`qualified_${data.user_id}`}\r\n                                      />\r\n\r\n                                      <label\r\n                                        htmlFor={`qualified_${data.user_id}`}\r\n                                      >\r\n                                        {\" \"}\r\n                                        <GoDotFill\r\n                                          style={{\r\n                                            color: \"#169C50\",\r\n                                            fontSize: 20,\r\n                                          }}\r\n                                        />\r\n                                        Qualified\r\n                                      </label>\r\n                                    </div>\r\n                                  </a>\r\n                                </li>\r\n                                <li\r\n                                  onClick={() => {\r\n                                    openIsQualifyPopup(\"notQualify\");\r\n                                  }}\r\n                                >\r\n                                  <a\r\n                                    className=\"dropdown-item\"\r\n                                    href=\"#\"\r\n                                    onClick={() => {\r\n                                      handleButtonClick(\"notQualified\");\r\n                                      handleConfirmationOpen(true);\r\n                                    }}\r\n                                  >\r\n                                    <div className={`${FBStyle.select_wrp}`}>\r\n                                      <input\r\n                                        // ref={inputRef.notQualified}\r\n                                        type=\"radio\"\r\n                                        checked={data.notQualified}\r\n                                        name={`status_${data.user_id}`}\r\n                                        id={`notQualified_${data.user_id}`}\r\n                                      />\r\n                                      <label\r\n                                        htmlFor={`notQualified_${data.user_id}`}\r\n                                      >\r\n                                        <GoDotFill\r\n                                          style={{\r\n                                            color: \"#b2261c\",\r\n                                            fontSize: 20,\r\n                                          }}\r\n                                        />{\" \"}\r\n                                        Not Qualified\r\n                                      </label>\r\n                                    </div>\r\n                                  </a>\r\n                                </li>\r\n\r\n                                <li\r\n                                  onClick={() => {\r\n                                    openFollowup(true);\r\n                                    //  openIsQualifyPopup(\"notQualify\");\r\n                                  }}\r\n                                >\r\n                                  <a\r\n                                    className=\"dropdown-item\"\r\n                                    href=\"#\"\r\n                                    onClick={() =>\r\n                                      handleButtonClick(\"followup\")\r\n                                    }\r\n                                  >\r\n                                    <div className={`${FBStyle.select_wrp}`}>\r\n                                      <input\r\n                                        // ref={inputRef.notQualified}\r\n                                        type=\"radio\"\r\n                                        checked={data.followup}\r\n                                        name={`status_${data.user_id}`}\r\n                                        id={`followup_${data.user_id}`}\r\n                                      />\r\n                                      <label\r\n                                        htmlFor={`followup_${data.user_id}`}\r\n                                      >\r\n                                        <GoDotFill\r\n                                          style={{\r\n                                            color: \"#430CBA\",\r\n                                            fontSize: 20,\r\n                                          }}\r\n                                        />{\" \"}\r\n                                        Follow up\r\n                                      </label>\r\n                                    </div>\r\n                                  </a>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n\r\n                <div>\r\n                  {!CanList.length > 0 && (\r\n                    <>\r\n                      <div className=\"m-3 text-danger\">Not Found</div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <>\r\n            <Backdrop\r\n              sx={{\r\n                color: \"#fff\",\r\n                zIndex: (theme) => theme.zIndex.drawer + 1,\r\n              }}\r\n              open={showLoader}\r\n              onClick={() => {}} // Prevent closing on backdrop click\r\n            >\r\n              <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n          </>\r\n\r\n          <div className=\"d-flex justify-content-center mt-2\">\r\n            <Stack spacing={2}>\r\n              <Pagination\r\n                // count={10}\r\n                shape=\"rounded\"\r\n                siblingCount={1}\r\n                boundaryCount={1}\r\n                count={pageCount.totalPages}\r\n                variant=\"outlined\"\r\n                color=\"success\"\r\n                onChange={candidatePagination}\r\n              />\r\n            </Stack>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {isQualifiedDetails.openPopup && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            childComponent={\r\n              <ConfirmationPopup\r\n                heading={\"Confirmation\"}\r\n                headingText={isQualifiedDetails.confirmtext}\r\n                onConfirm={ConfirmFormSubmit}\r\n                // enableSubmit={enableSubmit}\r\n                onRequestClose={handleConfirmationClose}\r\n                //</br> with <b>${contactPersonName}</b>\r\n              />\r\n            }\r\n          />\r\n        </MyModal>\r\n      )} */}\r\n      {showConfirmationqualifiedPopup && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={2000}\r\n            childComponent={\r\n              <>\r\n                <div>\r\n                  <div className=\"text-center mb-3\">Qualify Candidate</div>\r\n                  <TextField\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Add Notes\"\r\n                    multiline\r\n                    required\r\n                    onChange={(event) => {\r\n                      setIsQualifiedDetails((prev) => ({\r\n                        ...prev,\r\n                        notes: event.target.value,\r\n                      }));\r\n                    }}\r\n                    maxRows={4}\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                  <button\r\n                    className=\"btn text-white me-3\"\r\n                    onClick={handleCancelClick}\r\n                    style={{ backgroundColor: \"#d00a0a\" }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn text-white\"\r\n                    onClick={ConfirmFormSubmit}\r\n                    // disabled={enableSubmit}\r\n                    style={{ backgroundColor: \"#169C50\" }}\r\n                  >\r\n                    Qualify\r\n                  </button>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {showConfirmationPopup && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={2000}\r\n            childComponent={\r\n              <>\r\n                <div>\r\n                  <div className=\"text-center mb-3\">Disqualify Candidate</div>\r\n                  <TextField\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Add Notes\"\r\n                    multiline\r\n                    required\r\n                    onChange={(event) => {\r\n                      setIsQualifiedDetails((prev) => ({\r\n                        ...prev,\r\n                        notes: event.target.value,\r\n                      }));\r\n                    }}\r\n                    maxRows={4}\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                  <button\r\n                    className=\"btn text-white me-3\"\r\n                    onClick={handleCancelClicknotqualify}\r\n                    style={{ backgroundColor: \"#d00a0a\" }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn text-white\"\r\n                    onClick={ConfirmFormSubmit}\r\n                    // disabled={enableSubmit}\r\n                    style={{ backgroundColor: \"#169C50\" }}\r\n                  >\r\n                    Disqualify\r\n                  </button>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {followupopen && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex={1001}\r\n            childComponent={\r\n              <div\r\n                style={{\r\n                  width: \"350px\",\r\n                  // height: \"800px\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <FormControl\r\n                  fullWidth\r\n                  error={followupError.dateTime}\r\n                  style={{ marginBottom: \"16px\" }}\r\n                >\r\n                  {\" \"}\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={[\"DateTimePicker\", \"TextField\"]}>\r\n                      <DateTimePicker\r\n                        label=\"select date and time\"\r\n                        error={Boolean(dateTimeError)}\r\n                        // helperText={dateTi/meError}\r\n                        // value={dateTime}\r\n                        onChange={(date) => {\r\n                          setDateTime(date);\r\n                          setFollowupError((prev) => ({\r\n                            ...prev,\r\n                            dateTime: false,\r\n                          }));\r\n                          const formattedDate =\r\n                            dayjs(date).format(\"YYYY-MM-DD hh:mm A\");\r\n                          setFormattedDate(formattedDate);\r\n                        }}\r\n                      />\r\n                      {/* {followupError.dateTime && (\r\n                        <FormHelperText error>\r\n                          Please select a date and time\r\n                        </FormHelperText>\r\n                      )} */}\r\n                      {followupError.dateTime && (\r\n                        <span style={{ color: \"#d44349\" }}>\r\n                          Please select a date and time\r\n                        </span>\r\n                      )}\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </FormControl>\r\n                <TextField\r\n                  style={{ marginBottom: \"16px\" }}\r\n                  id=\"outlined-multiline-flexible\"\r\n                  label=\"Add Notes\"\r\n                  multiline\r\n                  onChange={(event) => {\r\n                    setFollownotes(event.target.value);\r\n                    setFollowupError((prev) => ({\r\n                      ...prev,\r\n                      addNotes: false,\r\n                    }));\r\n                  }}\r\n                  maxRows={4}\r\n                  fullWidth\r\n                  error={followupError.addNotes}\r\n                  // helperText={\r\n                  //   followupError.addNotes ? \"Notes cannot be empty\" : \"\"\r\n                  // }\r\n                />\r\n                {followupError.addNotes && (\r\n                  <span style={{ color: \"#d44349\" }}>\r\n                    Notes cannot be empty\r\n                  </span>\r\n                )}\r\n                {/* <FormControl fullWidth style={{ marginBottom: \"16px\" }}>\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Follow up for\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Follow up for\"\r\n                    value={selectedValue}\r\n                    style={{ marginBottom: \"16px\", minWidth: \"120px\" }}\r\n                    error={followupError.selectEvent}\r\n                    onChange={(event) => {\r\n                      setSelectedValue(event.target.value);\r\n                      setFollowupError((prev) => ({\r\n                        ...prev,\r\n                        selectEvent: false,\r\n                      }));\r\n                    }}\r\n                  >\r\n                    {eventData.map((event) => (\r\n                      <MenuItem key={event.id} value={event.eventName}>\r\n                        {event.eventName}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  {followupError.selectEvent && (\r\n                    <span style={{ color: \"#d44349\" }}>\r\n                      Select event is empty\r\n                    </span>\r\n                  )}\r\n                </FormControl> */}\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      color: \"red\",\r\n                      borderColor: \"red\",\r\n                      marginRight: \"8px\",\r\n                    }}\r\n                    onClick={closeFollowup}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{ color: \"green\", borderColor: \"green\" }}\r\n                    onClick={handleFollowSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Box>\r\n              </div>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n      {showSuccess && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex=\"5000\"\r\n            childComponent={<SuccessTick HeadText=\"Successfully Updated\" />}\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CandidateResource;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableSection\":\"RecruitmentLeads_tableSection__q1yZE\",\"table\":\"RecruitmentLeads_table__KyVD8\",\"tableHead\":\"RecruitmentLeads_tableHead__Zv2PM\",\"tableRow\":\"RecruitmentLeads_tableRow__jDcZB\",\"FilterHead\":\"RecruitmentLeads_FilterHead__knpde\",\"filterAdduser\":\"RecruitmentLeads_filterAdduser__wKrVg\",\"Filterbutton\":\"RecruitmentLeads_Filterbutton__8nQ1r\"};","import React from \"react\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport tablestyle from \"./RecruitmentLeads.module.scss\";\r\n\r\nfunction LeadFilter() {\r\n  return (\r\n    // function handleClickCross(e) {\r\n    //   e.preventDefault();\r\n\r\n    // }\r\n    <div>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button\r\n          className={`rounded-pill d-flex align-items-center ${tablestyle.Filterbutton}`}\r\n          variant=\"contained\"\r\n          //   onClick={() => setShowFilter(true)}\r\n        >\r\n          <BiFilterAlt />{\" \"}\r\n          {/* <p\r\n            style={{\r\n              backgroundColor: JoinedListRedDot ? \"red\" : \"transparent\",\r\n              width: \"10px\",\r\n              height: \"10px\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          ></p>{\" \"} */}\r\n          Filter\r\n        </button>\r\n      </div>\r\n      {/* {showFilter && ( */}\r\n      {/* <MyModal>\r\n        <ModalContainer\r\n          zIndex={1001}\r\n          childComponent={\r\n            <>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h4 className=\"text-center mb-2\">Filter by</h4>\r\n                <h3>\r\n                  <span\r\n                    onClick={handleClickCross}\r\n                    className=\"btn btn-outline-danger\"\r\n                    style={{ cursor: \"pointer\", fontSize: 15 }}\r\n                  >\r\n                    <AiOutlineClose />\r\n                  </span>\r\n                </h3>\r\n              </div>\r\n              <div className={`${registercandidatestyle.BoxContainerWidth}`}>\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    handleSubmit(e);\r\n                  }}\r\n                >\r\n                  <>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                        <TextField\r\n                          id=\"outlined-basic\"\r\n                          label=\"Mobile number\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={filteredObj.mobileNumber}\r\n                          defaultValue={filterDetails.mobileNumber}\r\n                          onChange={handleCandidateIDChange}\r\n                          inputProps={{ maxLength: 10 }}\r\n                          InputProps={{\r\n                            startAdornment: (\r\n                              <span\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <AiOutlinePhone\r\n                                  style={{ marginRight: \"5px\" }}\r\n                                />{\" \"}\r\n                                +91\r\n                              </span>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-3 mt-1 mt-sm-0\">\r\n                          <Autocomplete\r\n                            limitTags={1}\r\n                            name=\"industries\"\r\n                            multiple\r\n                            id=\"tags-outlined\"\r\n                            onChange={(event, value) => {\r\n                              updateIndustry(value);\r\n                            }}\r\n                            options={(options.Industries || []).map(\r\n                              (option) => option\r\n                            )}\r\n                            getOptionLabel={(option) => `${option.options}`}\r\n                            filterSelectedOptions\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Job industries\"\r\n                                placeholder=\"Favorites\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row gap-2 justify-content-end mt-4\">\r\n                      <button\r\n                        className={`rounded-pill ${FBStyle.Filterbutton}`}\r\n                        variant=\"outlined\"\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                          onClearFilter(e);\r\n                        }}\r\n                      >\r\n                        Clear All\r\n                      </button>\r\n                      <button\r\n                        className={`rounded-pill ${FBStyle.search}`}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ minWidth: \"150px\" }}\r\n                      >\r\n                        Search\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                </form>\r\n              </div>\r\n            </>\r\n          }\r\n        />\r\n      </MyModal> */}\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeadFilter;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { TextField } from \"@mui/material\";\r\nimport tablestyle from \"./RecruitmentLeads.module.scss\";\r\nimport FBStyle from \"../FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport { LuRefreshCcw } from \"react-icons/lu\";\r\nimport LeadFilter from \"./LeadFilter\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport {\r\n  DMMMYYYY_formate,\r\n  MyModal,\r\n  capitalizeWords,\r\n  textTruncate,\r\n} from \"../../../utility\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { GetAllsdminDetails, postCandidate } from \"../../../apiServices\";\r\nimport {\r\n  CandidateRecruitmentLeadsActions,\r\n  CandidateRegisteredActions,\r\n} from \"../../../redux-store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction RecruitmentsLeads() {\r\n  const Dispatch = useDispatch();\r\n  const RecruitmentLeadsFilter = useSelector(\r\n    (state) => state.RecruitmentLeads.RecruitmentfilterData\r\n  );\r\n\r\n  const CandidateRecruitmentList = useSelector(\r\n    (state) => state.RecruitmentLeads.RegisterCandidateList\r\n  );\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetails.roleID === 1;\r\n  const [adminName, setAdminName] = useState([]);\r\n  const [adminid, setAdminId] = useState([]);\r\n  const [size, setSize] = useState(10);\r\n  const [pageCount, setPageCount] = useState({\r\n    totalPages: 0,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n  });\r\n  const [showConfirmationqualifiedPopup, setShowConfirmQualifiedPopup] =\r\n    useState(false);\r\n  const [showConfirmationPopup, setShowConfirmPopup] = useState(false);\r\n  // useEffect(() => {\r\n  //   postCandidate(RecruitmentLeadsFilter).then((data) => {\r\n  //     Dispatch(CandidateRecruitmentLeadsActions.setRegisterCandidateList(data));\r\n  //   });\r\n  // }, [RecruitmentLeadsFilter]);\r\n\r\n  useEffect(() => {\r\n    //  setShowLoader(true);\r\n\r\n    postCandidate(RecruitmentLeadsFilter)\r\n      .then((data) => {\r\n        // console.log(data, \"dataaa\");\r\n        if (data) {\r\n          Dispatch(\r\n            CandidateRecruitmentLeadsActions.setRegisterCandidateList(data)\r\n          );\r\n          if (data[0] && data[0].total_count !== undefined) {\r\n            //  setTotalCount(data[0].total_count);\r\n            setPageCount((prev) => ({\r\n              ...prev,\r\n              totalPages: Math.ceil(\r\n                (data.length > 0 ? data[0].total_count : 10) / size\r\n              ),\r\n            }));\r\n          } else {\r\n            //  setTotalCount(0);\r\n            setPageCount((prev) => ({\r\n              ...prev,\r\n              totalPages: 0,\r\n            }));\r\n            Dispatch(\r\n              CandidateRecruitmentLeadsActions.setRegisterCandidateList([])\r\n            );\r\n          }\r\n        } else {\r\n          console.error(\r\n            \"Data received from postCandidate is undefined or null.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Something went wrong\" + err);\r\n      })\r\n      .finally(() => {\r\n        //  setShowLoader(false);\r\n        console.log(\"hai finished\");\r\n      });\r\n  }, [RecruitmentLeadsFilter]);\r\n  useEffect(() => {\r\n    console.log(CandidateRecruitmentList, \"candidateListedjobs\");\r\n  }, [CandidateRecruitmentList]);\r\n  useEffect(() => {\r\n    console.log(CandidateRecruitmentList, \"candidateListedjobs\");\r\n  }, [CandidateRecruitmentList]);\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((data) => {\r\n      console.log(data, \"All admin details\");\r\n      const adminNames = data.map((item) => item.userName);\r\n      const adminIds = data.map((item) => item.id);\r\n      setAdminName(adminNames);\r\n      setAdminId(adminIds);\r\n    });\r\n\r\n    let adminId = isSuperAdmin ? -1 : localStorage.getItem(\"adminID\");\r\n    Dispatch(\r\n      CandidateRecruitmentLeadsActions.setRegisterCandidateListFilterAdminId(\r\n        adminId\r\n      )\r\n    );\r\n  }, [adminDetails]);\r\n  const handleCancelClick = () => {\r\n    setShowConfirmQualifiedPopup(false);\r\n  };\r\n  const handleCancelClicknotqualify = () => {\r\n    setShowConfirmPopup(false);\r\n  };\r\n  function handleConfirmationOpen() {\r\n    setShowConfirmPopup(true);\r\n  }\r\n  function handleConfirmationOpenQualify() {\r\n    setShowConfirmQualifiedPopup(true);\r\n  }\r\n  const handleButtonClick = (refName) => {\r\n    // const ref = inputRef[refName];\r\n    // if (ref.current) {\r\n    //   ref.current.click();\r\n    // }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={`${tablestyle.FilterHead}`}>\r\n          {\" \"}\r\n          <div className=\"d-flex \">\r\n            Show {\"  \"}\r\n            <select\r\n              name=\"\"\r\n              id=\"\"\r\n              className=\"px-1 py-1 mx-2\"\r\n              // onChange={(event) => candidateSize(event.target.value)}\r\n            >\r\n              <option selected value=\"10\">\r\n                10\r\n              </option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"30\">30</option>\r\n            </select>\r\n            {\"   \"}\r\n            Entries\r\n          </div>\r\n          <div className={`${tablestyle.filterAdduser}`}>\r\n            {/* <div className=\"mt-1 me-2 \">Total Count : {totalCount}</div> */}\r\n            {/* <div\r\n              className=\"btn btn-danger p-1 me-2 mx-2 ms-auto mt-1\"\r\n                          onClick={handleXlsxDownload.bind(\r\n                null,\r\n                currentJoningDate?.candidateInterview?.id\r\n              )}\r\n            >\r\n              download\r\n            </div> */}\r\n            <div\r\n              className=\"p-1 success me-2 mx-2 ms-auto mt-1\"\r\n              // onClick={handleReset}\r\n            >\r\n              <LuRefreshCcw />\r\n            </div>\r\n\r\n            <LeadFilter />\r\n          </div>\r\n        </div>{\" \"}\r\n        <div className={tablestyle.tableSection}>\r\n          <table className={tablestyle.table}>\r\n            <thead>\r\n              <tr className={tablestyle.tableHead}>\r\n                <th>Name</th>\r\n                <th>Mobile Number</th>\r\n                <th>Job Category</th>\r\n                <th>Experience</th>\r\n                {/* <th>Email ID</th> */}\r\n                <th>Qualification</th>\r\n                <th>Preferred City</th>\r\n                <th>Assigned To</th>\r\n                <th>Registered On</th>\r\n                <th style={{ textAlign: \"right\" }}>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {CandidateRecruitmentList.map((data, i) => (\r\n                <>\r\n                  <tr\r\n                    key={i}\r\n                    className={tablestyle.tableRow}\r\n                    style={{ borderBottom: \"1px solid #7676767c\" }}\r\n                  >\r\n                    <td>\r\n                      {data.first_name\r\n                        ? textTruncate(capitalizeWords(data.first_name), 15) +\r\n                          \" \" +\r\n                          (data.last_name\r\n                            ? textTruncate(\r\n                                capitalizeWords(data.last_name),\r\n                                15\r\n                              ) + \"\"\r\n                            : \"\")\r\n                        : \"-\"}\r\n                    </td>\r\n                    <td>{data.mobile_number}</td>\r\n                    <td title={data.job_category}>\r\n                      {\" \"}\r\n                      {data.job_category && textTruncate(data.job_category, 20)}\r\n                      {!data.job_category && <>-</>}\r\n                    </td>\r\n                    <td>{data.exp_in_years} Year(s)</td>\r\n                    {/* <td>{data.emailID}</td> */}\r\n                    <td>{textTruncate(data.qualification, 20)}</td>\r\n                    <td title={data.city}>\r\n                      {data.city && textTruncate(data.city, 20)}\r\n                      {!data.city && <>-</>}\r\n                    </td>\r\n                    {isSuperAdmin && (\r\n                      <td>{adminName[adminid.indexOf(data.assign_to)]}</td>\r\n                    )}{\" \"}\r\n                    <td>\r\n                      {\" \"}\r\n                      {<DMMMYYYY_formate dateValue={data.created_time} />}\r\n                    </td>\r\n                    <td style={{ textAlign: \"right\" }}>\r\n                      <div className=\"btn-group dropstart\">\r\n                        <button\r\n                          type=\"button\"\r\n                          // className={`btn btn-light `}\r\n\r\n                          data-bs-toggle=\"dropdown\"\r\n                          data-bs-no-caret=\"true\"\r\n                          aria-expanded=\"false\"\r\n                          style={{\r\n                            border: \"none\",\r\n                            background: \"none\",\r\n                            color: \"#000\",\r\n                            cursor: \"pointer\",\r\n                            outline: \"none\",\r\n                            position: \"relative\",\r\n                            right: \"5px\",\r\n                            // backgroundColor: \"red\",\r\n                            fontSize: 20,\r\n                            zIndex: 1,\r\n                          }}\r\n                        >\r\n                          <span className=\"\">\r\n                            {\" \"}\r\n                            <BsThreeDotsVertical />{\" \"}\r\n                          </span>\r\n                        </button>{\" \"}\r\n                        <ul\r\n                          className=\"dropdown-menu\"\r\n                          style={{ textAlign: \"left\" }}\r\n                          // ref={dropdownRef}\r\n                        >\r\n                          <li\r\n                          // onClick={() => {\r\n                          //   openIsQualifyPopup(\"qualify\");\r\n                          // }}\r\n                          >\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                // handleButtonClick(\"qualified\");\r\n                                handleConfirmationOpenQualify(true);\r\n                              }}\r\n                            >\r\n                              <div className={`${FBStyle.select_wrp}`}>\r\n                                <input\r\n                                  // ref={inputRef.notQualified}\r\n                                  type=\"radio\"\r\n                                  checked={data.notQualified}\r\n                                  name={`status_${data.user_id}`}\r\n                                  id={`notQualified_${data.user_id}`}\r\n                                />\r\n                                <label htmlFor={`notQualified_${data.user_id}`}>\r\n                                  <GoDotFill\r\n                                    style={{\r\n                                      color: \"#169C50\",\r\n                                      fontSize: 20,\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Qualified\r\n                                </label>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li\r\n                          // onClick={() => {\r\n                          //   openIsQualifyPopup(\"notQualify\");\r\n                          // }}\r\n                          >\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                handleButtonClick(\"notQualified\");\r\n                                handleConfirmationOpen(true);\r\n                              }}\r\n                            >\r\n                              <div className={`${FBStyle.select_wrp}`}>\r\n                                <input\r\n                                  // ref={inputRef.notQualified}\r\n                                  type=\"radio\"\r\n                                  checked={data.notQualified}\r\n                                  name={`status_${data.user_id}`}\r\n                                  id={`notQualified_${data.user_id}`}\r\n                                />\r\n                                <label htmlFor={`notQualified_${data.user_id}`}>\r\n                                  <GoDotFill\r\n                                    style={{\r\n                                      color: \"#b2261c\",\r\n                                      fontSize: 20,\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Not Qualified\r\n                                </label>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n\r\n                          <li\r\n                          // onClick={() => {\r\n                          //   openIsQualifyPopup(\"notQualify\");\r\n                          // }}\r\n                          >\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              href=\"#\"\r\n                              // onClick={() => {\r\n                              //   handleButtonClick(\"notQualified\");\r\n                              //   handleConfirmationOpen(true);\r\n                              // }}\r\n                            >\r\n                              <div className={`${FBStyle.select_wrp}`}>\r\n                                <input\r\n                                  // ref={inputRef.notQualified}\r\n                                  type=\"radio\"\r\n                                  checked={data.notQualified}\r\n                                  name={`status_${data.user_id}`}\r\n                                  id={`notQualified_${data.user_id}`}\r\n                                />\r\n                                <label htmlFor={`notQualified_${data.user_id}`}>\r\n                                  <GoDotFill\r\n                                    style={{\r\n                                      color: \"#430CBA\",\r\n                                      fontSize: 20,\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Move To Resource\r\n                                </label>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {showConfirmationqualifiedPopup && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex={2000}\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <div className=\"text-center mb-3\">Qualify Candidate</div>\r\n                    <TextField\r\n                      id=\"outlined-multiline-flexible\"\r\n                      label=\"Add Notes\"\r\n                      multiline\r\n                      required\r\n                      // onChange={(event) => {\r\n                      //   setIsQualifiedDetails((prev) => ({\r\n                      //     ...prev,\r\n                      //     notes: event.target.value,\r\n                      //   }));\r\n                      // }}\r\n                      maxRows={4}\r\n                      fullWidth\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                    <button\r\n                      className=\"btn text-white me-3\"\r\n                      onClick={handleCancelClick}\r\n                      style={{ backgroundColor: \"#d00a0a\" }}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn text-white\"\r\n                      // onClick={ConfirmFormSubmit}\r\n                      // disabled={enableSubmit}\r\n                      style={{ backgroundColor: \"#169C50\" }}\r\n                    >\r\n                      Qualify\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n        {showConfirmationPopup && (\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex={2000}\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <div className=\"text-center mb-3\">Disqualify Candidate</div>\r\n                    <TextField\r\n                      id=\"outlined-multiline-flexible\"\r\n                      label=\"Add Notes\"\r\n                      multiline\r\n                      required\r\n                      // onChange={(event) => {\r\n                      //   setIsQualifiedDetails((prev) => ({\r\n                      //     ...prev,\r\n                      //     notes: event.target.value,\r\n                      //   }));\r\n                      // }}\r\n                      maxRows={4}\r\n                      fullWidth\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                    <button\r\n                      className=\"btn text-white me-3\"\r\n                      onClick={handleCancelClicknotqualify}\r\n                      style={{ backgroundColor: \"#d00a0a\" }}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn text-white\"\r\n                      // onClick={ConfirmFormSubmit}\r\n                      // disabled={enableSubmit}\r\n                      style={{ backgroundColor: \"#169C50\" }}\r\n                    >\r\n                      Disqualify\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center justify-content-center position-relative mt-3\">\r\n        <nav aria-label=\"Page navigation example\" className=\"\">\r\n          <ul class=\"pagination\">\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                <span aria-hidden=\"true\">«</span>\r\n              </a>\r\n            </li>\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link \" href=\"#\">\r\n                1\r\n              </a>\r\n            </li>\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link\" href=\"#\">\r\n                2\r\n              </a>\r\n            </li>\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link\" href=\"#\">\r\n                3\r\n              </a>\r\n            </li>\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                <span aria-hidden=\"true\">»</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst data = [\r\n  {\r\n    name: \"sivaranjani\",\r\n    mobileNumber: \"8056690492\",\r\n    jobcategory: \"trainee1\",\r\n    experience: \"0 years\",\r\n    // emailID: \"sivranjanithiyagarajan12@gmail.com\",\r\n    qualify: \"B.E\",\r\n    preferredciy: \"chennai\",\r\n    assignedto: \"zia\",\r\n    registeredon: \"30-Mar-2024\",\r\n  },\r\n  {\r\n    name: \"Sharmi\",\r\n    mobileNumber: \"8052390492\",\r\n    jobcategory: \"trainee2\",\r\n    experience: \"1 years\",\r\n    // emailID: \"Sharmi2001@gmail.com\",\r\n    qualify: \"B.sc\",\r\n    preferredciy: \"chennai\",\r\n    assignedto: \"adthiya\",\r\n    registeredon: \"29-Mar-2024\",\r\n  },\r\n  {\r\n    name: \"Kirupa\",\r\n    mobileNumber: \"4432390492\",\r\n    jobcategory: \"trainee3\",\r\n    experience: \"2 years\",\r\n    // emailID: \"Kirupa2001@gmail.com\",\r\n    qualify: \"M.sc\",\r\n    preferredciy: \"chennai\",\r\n    assignedto: \"ranjini\",\r\n    registeredon: \"28-Mar-2024\",\r\n  },\r\n];\r\n\r\nexport default RecruitmentsLeads;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { useState } from \"react\";\r\n// import CandidateFaceBookMetaTable from \"../../Candidate/FacebookMeta/CandidateFaceBookMetaTable\";\r\nimport { BsMeta } from \"react-icons/bs\";\r\nimport candidateTabsviewStyle from \"./CandidateTabsview.module.scss\";\r\nimport { HiUsers } from \"react-icons/hi2\";\r\n// import CandidateLeadTable from \"../../Candidate/CandidateLeadTable/CandidateLeadTable\";\r\nimport { RiUserFollowLine } from \"react-icons/ri\";\r\nimport { VscCalendar } from \"react-icons/vsc\";\r\n// import CandidateInterviewTable from \"../../Candidate/Candidate interview schedule list/CandidateInterviewTable\";\r\n// import RegisteredCandidateTable from \"../../Candidate/CandidateRegistered/RegisteredCandidateTable\";\r\n// import MidLevelList from \"../../Candidate/MidLevelCandidate/MidLevelList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  GetAdminDetailsByID,\r\n  GetCanMidLevellist,\r\n  GetCandidateLead,\r\n  GetJoinedCandidate,\r\n  GetcanInterviews,\r\n  PostCandidateFBmeta,\r\n  postCandidate,\r\n} from \"../../../apiServices\";\r\nimport {\r\n  CandidateLeadActions,\r\n  CandidateRegisteredActions,\r\n  FBmetaLeadsSliceActions,\r\n  interviewListActions,\r\n} from \"../../../redux-store/store\";\r\nimport \"aos/dist/aos.css\";\r\nimport CandidateJoined from \"../../Candidate/JoinedCandidate/CandidateJoined\";\r\nimport { MdJoinInner } from \"react-icons/md\";\r\nimport CandidateDailyTask from \"../../Candidate/CandidateDialyTask/CandidateDailyTask\";\r\nimport { FaTasks } from \"react-icons/fa\";\r\nimport { hasAccessTo } from \"../../../utility\";\r\nimport CandidateResource from \"../../Candidate/ResourceCandidate/CandidateResource\";\r\nimport RecruitmentsLeads from \"../../Candidate/Recruitmentleads/RecruitmentsLeads\";\r\n// AOS.init({\r\n//   duration: 500,\r\n//   easing: \"ease\",\r\n// });\r\nconst RegisteredCandidateTable = lazy(() =>\r\n  import(\"../../Candidate/CandidateRegistered/RegisteredCandidateTable\")\r\n);\r\n\r\nconst CandidateInterviewTable = lazy(() =>\r\n  import(\r\n    \"../../Candidate/Candidate interview schedule list/CandidateInterviewTable\"\r\n  )\r\n);\r\n\r\nconst MidLevelList = lazy(() =>\r\n  import(\"../../Candidate/MidLevelCandidate/MidLevelList\")\r\n);\r\n\r\nconst CandidateLeadTable = lazy(() =>\r\n  import(\"../../Candidate/CandidateLeadTable/CandidateLeadTable\")\r\n);\r\n\r\nconst CandidateFaceBookMetaTable = lazy(() =>\r\n  import(\"../../Candidate/FacebookMeta/CandidateFaceBookMetaTable\")\r\n);\r\n\r\nfunction CandidateTabsview() {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [TotalCount, setTotalCount] = useState({\r\n    FbmetaCount: \"\",\r\n    LeadCount: \"\",\r\n    Register: \"\",\r\n    interviews: \"\",\r\n    MidLevel: \"\",\r\n    joindeCandidate: \"\",\r\n  });\r\n\r\n  const adminAccess = useSelector((state) => state.RolesAndAccessDetails);\r\n  // useEffect(() => {\r\n  //   const handleKeyPress = (event) => {\r\n  //     // Check if the keypress occurs within an input field\r\n  //     const isInputField =\r\n  //       event.target.tagName === \"INPUT\" &&\r\n  //       event.target.type === \"text\" &&\r\n  //       event.target.id == \"outlined-multiline-flexible\";\r\n\r\n  //     // If not within the specified input field, perform the tab switch\r\n  //     if (!isInputField) {\r\n  //       switch (event.key) {\r\n  //         case \"1\":\r\n  //           handleTabClick(\"metaLeads\");\r\n  //           break;\r\n  //         case \"2\":\r\n  //           handleTabClick(\"leads\");\r\n  //           break;\r\n  //         case \"3\":\r\n  //           handleTabClick(\"registered\");\r\n  //           break;\r\n  //         case \"4\":\r\n  //           handleTabClick(\"interviews\");\r\n  //           break;\r\n  //         case \"5\":\r\n  //           handleTabClick(\"Joined\");\r\n  //           break;\r\n  //         // case \"6\":\r\n  //         //   handleTabClick(\"CandidateDailyTask\");\r\n  //         //   break;\r\n  //         default:\r\n  //           // Default action if no matching key is pressed\r\n  //           handleTabClick(\"metaLeads\");\r\n  //           break;\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   window.addEventListener(\"keydown\", handleKeyPress);\r\n\r\n  //   return () => {\r\n  //     window.removeEventListener(\"keydown\", handleKeyPress);\r\n  //   };\r\n  // }, [activeTab]);\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  const handleTabClick = (tabValue) => {\r\n    setActiveTab(tabValue);\r\n    window.location.hash = tabValue;\r\n  };\r\n  const FBmetaListFilter = useSelector(\r\n    (state) => state.FbmetaLeadDetails.FBmetaListFilter\r\n  );\r\n  const CanLeadFilter = useSelector(\r\n    (state) => state.CandidateLeadTable.CandidateLeadFilter\r\n  );\r\n  const CandidateRegisterFilter = useSelector(\r\n    (state) => state.CandidateRegistered.filterData\r\n  );\r\n  const interviewFilter = useSelector(\r\n    (state) => state.interviewListDetails.interviewFilter\r\n  );\r\n  const CandidateMidLevelFilter = useSelector(\r\n    (state) => state.CandidateMidLevelDetails.CandidateMidLevelFilter\r\n  );\r\n  const JoinedList = useSelector(\r\n    (state) => state.CandidateJoinedListDetails.CandidateJoinedFilter\r\n  );\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  const isSuperAdmin = adminDetails.roleID === 1;\r\n  useEffect(() => {\r\n    const hashValue = window.location.hash.substring(1); // Exclude the '#' symbol\r\n\r\n    let adminId = localStorage.getItem(\"adminID\");\r\n\r\n    async function getAdminDetails() {\r\n      let response = await GetAdminDetailsByID(adminId);\r\n      let role = response.roles[0].roleName == \"Super Amdin\";\r\n\r\n      if (!role) return;\r\n    }\r\n\r\n    // Now 'hashValue' contains the value of the hash fragment\r\n\r\n    console.log(hashValue);\r\n    if (hashValue) {\r\n      switch (hashValue) {\r\n        case \"metaLeads\":\r\n          handleTabClick(\"metaLeads\");\r\n          break;\r\n        case \"leads\":\r\n          handleTabClick(\"leads\");\r\n          break;\r\n        case \"registered\":\r\n          handleTabClick(\"registered\");\r\n          break;\r\n        case \"recruitmentleads\":\r\n          handleTabClick(\"recruitmentleads\");\r\n          break;\r\n        case \"interviews\":\r\n          handleTabClick(\"interviews\");\r\n          break;\r\n        case \"Joined\":\r\n          handleTabClick(\"Joined\");\r\n          break;\r\n        case \"seniorLevel\":\r\n          handleTabClick(\"seniorLevel\");\r\n          break;\r\n        case \"CandidateDailyTask\":\r\n          handleTabClick(\"CandidateDailyTask\");\r\n          break;\r\n        case \"candidateResource\":\r\n          handleTabClick(\"candidateResource\");\r\n          break;\r\n        default:\r\n          // handleTabClick(\"metaLeads\");\r\n          break;\r\n      }\r\n    } else {\r\n      // handleTabClick(\"metaLeads\");\r\n\r\n      if (adminAccess.roleName == \"Blue collar recruitment\") {\r\n        handleTabClick(\"registered\");\r\n      } else {\r\n        handleTabClick(\"metaLeads\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // to set super admin id as 0\r\n    let id = isSuperAdmin ? 0 : localStorage.getItem(\"adminID\");\r\n    Dispatch(FBmetaLeadsSliceActions.setFBmetaListFilterAdminId(id));\r\n  }, [adminDetails]);\r\n\r\n  useEffect(() => {\r\n    // to set registered candidate filter adminId to -1\r\n    let adminId = isSuperAdmin ? -1 : localStorage.getItem(\"adminID\");\r\n    Dispatch(\r\n      CandidateRegisteredActions.setRegisterCandidateListFilterAdminId(adminId)\r\n    );\r\n  }, [adminDetails]);\r\n\r\n  useEffect(() => {\r\n    // to set admin id to null if super admin\r\n    if (isSuperAdmin) {\r\n      Dispatch(CandidateLeadActions.setCandidateLeadFilterAdminId(\"null\"));\r\n      Dispatch(interviewListActions.setInterviewFilterShceduleBy(0));\r\n    }\r\n  }, [adminDetails]);\r\n\r\n  useEffect(() => {\r\n    if (isSuperAdmin) {\r\n      PostCandidateFBmeta(FBmetaListFilter).then((data) => {\r\n        setTotalCount((prev) => ({\r\n          ...prev,\r\n          FbmetaCount: data.totalCount,\r\n        }));\r\n      });\r\n\r\n      GetCandidateLead(CanLeadFilter).then((data) => {\r\n        setTotalCount((prev) => ({\r\n          ...prev,\r\n          LeadCount: data.totalCount,\r\n        }));\r\n      });\r\n\r\n      postCandidate(CandidateRegisterFilter)\r\n        .then((data) => {\r\n          if (data && data[0] && data[0].total_count !== undefined) {\r\n            setTotalCount((prev) => ({\r\n              ...prev,\r\n              Register: data[0].total_count,\r\n            }));\r\n          } else {\r\n            console.error(\"Invalid data structure in API response\");\r\n            // Handle the error as needed\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error in postCandidate API call:\", error);\r\n          // Handle the error as needed\r\n        });\r\n\r\n      GetcanInterviews(interviewFilter).then((data) => {\r\n        setTotalCount((prev) => ({\r\n          ...prev,\r\n          interviews: data.totalCount,\r\n        }));\r\n      });\r\n\r\n      GetCanMidLevellist(CandidateMidLevelFilter).then((data) => {\r\n        if (data && data.data && data.data.totalElements !== undefined) {\r\n          setTotalCount((prev) => ({\r\n            ...prev,\r\n            MidLevel: data.data.totalElements,\r\n          }));\r\n        } else {\r\n          console.error(\r\n            \"Invalid data structure in API response for GetCanMidLevellist\"\r\n          );\r\n        }\r\n      });\r\n      GetJoinedCandidate(JoinedList).then((data) => {\r\n        console.log(data, \"Candidate Joinded response\");\r\n        setTotalCount((prev) => ({\r\n          ...prev,\r\n          joindeCandidate: data.totalCount,\r\n        }));\r\n        // setJoinedCandidateList(data.candidateList);\r\n        // setpageCount(Math.ceil(data.totalCount / size));\r\n      });\r\n    }\r\n  }, [\r\n    isSuperAdmin,\r\n    FBmetaListFilter,\r\n    CanLeadFilter,\r\n    CandidateRegisterFilter,\r\n    interviewFilter,\r\n    JoinedList,\r\n  ]);\r\n  useEffect(() => {\r\n    PostCandidateFBmeta(FBmetaListFilter).then((data) => {\r\n      console.log(data, \"FB TotalCount\");\r\n      setTotalCount((prev) => ({\r\n        ...prev,\r\n        FbmetaCount: data.totalCount,\r\n      }));\r\n    });\r\n    GetJoinedCandidate(JoinedList).then((data) => {\r\n      console.log(data, \"Candidate Joinded response\");\r\n      setTotalCount((prev) => ({\r\n        ...prev,\r\n        joindeCandidate: data.totalCount,\r\n      }));\r\n      // setJoinedCandidateList(data.candidateList);\r\n      // setpageCount(Math.ceil(data.totalCount / size));\r\n    });\r\n    GetCandidateLead(CanLeadFilter).then((data) => {\r\n      setTotalCount((prev) => ({\r\n        ...prev,\r\n        LeadCount: data.totalCount,\r\n      }));\r\n    });\r\n\r\n    postCandidate(CandidateRegisterFilter)\r\n      .then((data) => {\r\n        if (data && data[0] && data[0].total_count !== undefined) {\r\n          setTotalCount((prev) => ({\r\n            ...prev,\r\n            Register: data[0].total_count,\r\n          }));\r\n        } else {\r\n          console.error(\"Invalid data structure in API response\");\r\n          // Handle the error as needed\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error in postCandidate API call:\", error);\r\n        // Handle the error as needed\r\n      });\r\n\r\n    GetcanInterviews(interviewFilter).then((data) => {\r\n      setTotalCount((prev) => ({\r\n        ...prev,\r\n        interviews: data.totalCount,\r\n      }));\r\n    });\r\n\r\n    GetCanMidLevellist(CandidateMidLevelFilter).then((data) => {\r\n      if (data && data.data && data.data.totalElements !== undefined) {\r\n        setTotalCount((prev) => ({\r\n          ...prev,\r\n          MidLevel: data.data.totalElements,\r\n        }));\r\n      } else {\r\n        console.error(\r\n          \"Invalid data structure in API response for GetCanMidLevellist\"\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className={`tab-buttons ${candidateTabsviewStyle.tab_buttons}`}>\r\n        <div className={`d-flex ${candidateTabsviewStyle.tab_hr}`}>\r\n          <>\r\n            <div\r\n              onClick={() => handleTabClick(\"metaLeads\")}\r\n              className={` ${\r\n                activeTab === \"metaLeads\"\r\n                  ? candidateTabsviewStyle.activetag\r\n                  : candidateTabsviewStyle.unactivetag\r\n              } `}\r\n            >\r\n              <BsMeta /> Meta Leads ({TotalCount.FbmetaCount})\r\n            </div>\r\n          </>\r\n\r\n          <div\r\n            onClick={() => handleTabClick(\"leads\")}\r\n            className={` ${\r\n              activeTab === \"leads\"\r\n                ? candidateTabsviewStyle.activetag\r\n                : candidateTabsviewStyle.unactivetag\r\n            }`}\r\n          >\r\n            <HiUsers /> Leads ({TotalCount.LeadCount})\r\n          </div>\r\n\r\n          <div\r\n            onClick={() => handleTabClick(\"registered\")}\r\n            className={` ${\r\n              activeTab === \"registered\"\r\n                ? candidateTabsviewStyle.activetag\r\n                : candidateTabsviewStyle.unactivetag\r\n            }`}\r\n          >\r\n            <RiUserFollowLine />{\" \"}\r\n            {adminAccess.roleName == \"Blue collar recruitment\"\r\n              ? \"Leads\"\r\n              : \"Registered\"}{\" \"}\r\n            ({TotalCount.Register})\r\n          </div>\r\n\r\n          {/* recruitment team lead  */}\r\n          {/* <div\r\n            onClick={() => handleTabClick(\"recruitmentleads\")}\r\n            className={` ${\r\n              activeTab === \"recruitmentleads\"\r\n                ? candidateTabsviewStyle.activetag\r\n                : candidateTabsviewStyle.unactivetag\r\n            }`}\r\n          >\r\n            <HiUsers />\r\n            Recruitment Leads\r\n          </div> */}\r\n\r\n          <div\r\n            onClick={() => handleTabClick(\"interviews\")}\r\n            className={` ${\r\n              activeTab === \"interviews\"\r\n                ? candidateTabsviewStyle.activetag\r\n                : candidateTabsviewStyle.unactivetag\r\n            }`}\r\n          >\r\n            <VscCalendar /> Interviews ({TotalCount.interviews})\r\n          </div>\r\n\r\n          <div\r\n            onClick={() => handleTabClick(\"Joined\")}\r\n            className={` ${\r\n              activeTab === \"Joined\"\r\n                ? candidateTabsviewStyle.activetag\r\n                : candidateTabsviewStyle.unactivetag\r\n            }`}\r\n          >\r\n            <MdJoinInner /> Joined ({TotalCount.joindeCandidate})\r\n          </div>\r\n\r\n          {/* {hasAccessTo(adminAccess.accessNames, \"Candidate Resource\") && (\r\n            \r\n          )} */}\r\n          {/* <div\r\n            onClick={() => handleTabClick(\"candidateResource\")}\r\n            className={` ${\r\n              activeTab === \"candidateResource\"\r\n                ? candidateTabsviewStyle.activetag\r\n                : candidateTabsviewStyle.unactivetag\r\n            }`}\r\n          >\r\n            <MdJoinInner /> Resource ({TotalCount.joindeCandidate})\r\n          </div> */}\r\n          {/* {\r\n            <div\r\n              onClick={() => handleTabClick(\"CandidateDailyTask\")}\r\n              className={` ${\r\n                activeTab === \"CandidateDailyTask\"\r\n                  ? candidateTabsviewStyle.activetag\r\n                  : candidateTabsviewStyle.unactivetag\r\n              }`}\r\n            >\r\n              <FaTasks /> Daily Task ({TotalCount.joindeCandidate})\r\n            </div>\r\n          } */}\r\n          {/* <div\r\n            onClick={() => handleTabClick(\"seniorLevel\")}\r\n            className={` ${\r\n              activeTab === \"seniorLevel\"\r\n                ? candidateTabsviewStyle.activetag\r\n                : candidateTabsviewStyle.unactivetag\r\n            }`}\r\n          >\r\n            <LuUserCircle /> Senior Level ({TotalCount.MidLevel})\r\n          </div> */}\r\n        </div>\r\n        <hr style={{ borderTop: \"10px solid #ccc\" }} />\r\n      </div>\r\n\r\n      <div className={`tab-content ${candidateTabsviewStyle.tab_content}`}>\r\n        {activeTab === \"metaLeads\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <CandidateFaceBookMetaTable />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"leads\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <CandidateLeadTable />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"registered\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <RegisteredCandidateTable />{\" \"}\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"recruitmentleads\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <RecruitmentsLeads />{\" \"}\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"interviews\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <CandidateInterviewTable />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"Joined\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <CandidateJoined />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"seniorLevel\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <MidLevelList />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"CandidateDailyTask\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <CandidateDailyTask />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"candidateResource\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <CandidateResource />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateTabsview;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"BoxContainerWidth\":\"RegisteredCandidate_BoxContainerWidth__ndKSR\",\"flex-container\":\"RegisteredCandidate_flex-container__sW+Fi\",\"Status\":\"RegisteredCandidate_Status__OMeY8\",\"qualified\":\"RegisteredCandidate_qualified__bknLX\",\"Notqualified\":\"RegisteredCandidate_Notqualified__AW0Gj\",\"Followup\":\"RegisteredCandidate_Followup__6isun\"};"],"names":["_ref","data","onClose","onAssignChange","textHeading","showSuccess","setShowSuccess","useState","candiateDetails","setCandidateDetails","putCandidateLead","setPutcandidateLead","canLeadId","qualified","notQualified","isSuperAdmin","useSelector","state","adminDetails","roleID","enableSubmit","setEnableSubmit","CanputLead","setCanputLead","activeTab","setActiveTab","showConfirmationPopup","setShowConfirmPopup","showConfirmationqualifiedPopup","setShowConfirmQualifiedPopup","console","log","assignAdminto","setAssignAdminto","metaLeadId","adminId","setAdminDetails","id","adminName","showScheduleInterview","setShowScheduleInterview","useEffect","params","window","location","href","isShowScheduleInterview","includes","handleTabClick","tabNumber","useRef","ConfirmFormSubmit","notes","PutCandidateLeadCheck","then","getCandidateLead","PutMetaLeadAssign","code","alert","setTimeout","GetAllsdminDetails","map","item","userName","adminid","prev","handleWhatsAppIconClick","phoneNumber","whatsappURL","concat","open","isCopied","setIsCopied","handleCopyNumber","whatsappNumber","navigator","clipboard","writeText","keySkill","split","_jsx","children","Detailsshow","DetailsContainer","topComponent","_Fragment","className","Candidatedetailstyle","boxcross","_jsxs","CrossStyle","RxCross2","onClick","childComponent","boxwidth","topcontainer","profilePic","src","alt","width","companylogo","candidateName","jobCategory","FBStyle","StatusStyle","Green_wrp","type","name","checked","htmlFor","chips_wrp","Createdon","DDMMYYYY_formate","dateValue","createdTime","flexContainer","LiaUserEditSolid","FaWhatsapp","class","style","border","ThreeOutline","PiDotsThreeOutlineVerticalFill","ScheduleInterview","candidateId","MdCall","mobileNumber","MdOutlineContentCopy","personalDetails","CanDetailsRow","lineHeight","numbersstyle","flag","Phonecall","Whatsapnumbersstyle","WhatsappImage","slice","educationQualification","specification","industry","experience","preferredLocation","Autocomplete","clearOnEscape","onChange","event","newValue","selectedAdminName","indexOf","adminNameIndex","undefined","handleLeadAssignfromAdmin","error","value","assignTo","options","renderInput","TextField","label","variant","DailyDetailsupdate","candidateTabsviewStyle","tab_buttons","tab_hr","activetag","unactivetag","borderTop","tab_content","TimelineFacebookMeta","facebookId","Card","maxWidth","minWidth","margin","CardContent","AddNotesFBLead","MyModal","ModalContainer","zIndex","multiline","required","target","maxRows","fullWidth","handleCancelClick","backgroundColor","disabled","handleCancelClicknotqualify","SuccessTick","HeadText","JoinedList","CandidateJoinedListDetails","CandidateJoinedFilter","JoinedListRedDot","refreshRedDot","size","joinedOn","endDate","joinedEnd","initialValues","localStorage","getItem","companyName","contactNumber","leftTheCompany","Dispatch","useDispatch","formData","setFormData","adminList","setAdminList","showRedDot","setShowRedDot","showFilter","setShowFilter","anchorEl","setAnchorEl","React","showCustom","setshowCustom","validationErrors","setValidationErrors","start","end","Boolean","dateRange","setDateRange","dateFilterType","handleFieldChange","field","numbersOnlyTest","length","activeAdmins","filter","Deactived","catch","handleDateSelect","val","selectedOption","today","Date","daysToLastMonday","getDay","lastMonday","setDate","getDate","startDate","toISOString","getFullYear","getMonth","yesterday","setHours","handleCustomDate","interviewStyle","Filterbutton","BiFilterAlt","height","borderRadius","BoxContainerWidth","e","preventDefault","CandidateJoinedListActions","setJoinedFilter","page","cursor","fontSize","AiOutlineClose","onSubmit","isFilterApplied","setJoinedFilterRedDot","handleSubmit","Stack","InputProps","startAdornment","display","alignItems","AiOutlinePhone","marginRight","FormControl","currentTarget","Menu","MenuListProps","MenuItem","min","max","isFormValid","isValid","select","option","handleAssignToChange","defaultValue","selected","el","handleClear","search","sx","close","invoiceData","setInvoiceData","empId","err","contactPersonName","invoiceNumber","invoiceDate","invoiceAmount","dueDate","emailId","invoiceAttachment","setshowSuccess","handleInputChange","prevData","validateField","amount","parseFloat","isNaN","IoClose","validateForm","hasErrors","Object","keys","forEach","PostInvoiceSendJoinedCandidate","isInvalid","resetFileInput","document","getElementById","selectedFile","files","accept","FormHelperText","color","inputProps","maxLength","onInput","replace","helperText","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","autoFocus","date","StyledTableCell","styled","TableCell","tableCellClasses","head","padding","body","_currentJoningDate$ca","_currentJoningDate$Jo","_currentJoningDate$ca2","_currentJoningDate$ca3","currentMetaDetail","setCurrentMetaDetail","currentJoningDate","setCurrenJoningDate","pageCount","setpageCount","openInvoiceSend","setOpenInvoiceSend","joinedCandidateList","setJoinedCandidateList","setAdminName","setAdminId","selectedCheckboxes","setSelectedCheckboxes","isNotesEmpty","setIsNotesEmpty","currentInterviewId","setCurrentInterviewId","showConfirmPopup","interviewStatus","setInterviewStatus","caninterviewid","statusfield","adminNames","adminIds","setJoinedFilterAdminId","GetJoinedCandidate","candidateList","Math","ceil","totalCount","calculateDuration","joinedDate","timeDifference","floor","handlePopupDetails","commonPopupActions","setShowPopup","handleRadioBtn","statusFieldName","find","candidate","candidateInterview","capitalizeWords","firstName","lastName","JobsModel","formatDate","FilterHead","setJoinedFilterSize","candidateSize","canLeadStyle","filterAdduser","handleReset","LuRefreshCcw","NewLead","MdSendToMobile","Container","responsive","TableContainer","Table","stickyHeader","TableDetails","TableHead","TableRow","align","TableBody","i","_candidate$CandidateM","_candidate$CandidateM2","_candidate$CandidateM3","_candidate$CandidateM4","_candidate$JobsModel","_candidate$JobsModel2","_candidate$candidateI","_candidate$candidateI2","_candidate$CandidateM5","CandidateModel","title","async","getcandidateDetails","handleCandidateDetails","textTruncate","String","jobId","EmployerModel","ctc","DMMMYYYY_formate","LeftCompany_wrp","Tooltip","background","outline","position","right","BsThreeDotsVertical","textAlign","joined","select_wrp","leftCompany","GoDotFill","Nojoid","spacing","Pagination","count","shape","boundaryCount","siblingCount","currentPage","setJoinedFilterPage","SendInvoiceToEmployer","Box","component","m","noValidate","autoComplete","datefeild","$d","trim","PutInterviewStatus","filterType","setshowRedDot","filterName","CandidateDailyTaskDetails","selectedFilter","filterDetails","res","CandidateDailyTaskActions","setSelectedFilter","setCandidateDailyTaskFilter","InputLabel","Select","labelId","mt","disablePortal","setPageCount","CandidateCompletedTaskFilter","CandidateNewTaskFilter","CandidatePendingTaskFilter","setData","canLead","metaLead","openCanlead","openMetalead","openCandidate","candidateDailyTask","setCandidateDailyTask","show","message","GetCandidateDailyTask","totalPages","content","querySelectorAll","styles","card","index","classList","add","animationDelay","taskName","callTime","candidateleadId","moveToCompleted","dataObj","currentStatus","UpdateCandidateDailyTask","openDetailedView","fbMetaLead","handlePageChange","setPageChange","CandidateDailyTaskFilter","followUpType","followUpDate","admin","toUpperCase","FaDotCircle","CandidateFBLeadDetailsview","CandidateRegistered","filterData","initialFilterObj","gender","eligibility","qualification","candidateType","skills","prefLocation","passed_out_year","maxExperience","pages","convertDateYYYYMMDD","setOptions","Industries","Jobrole","keySkills","Qualification","filteredObj","setFilteredObj","prefillMultiSelection","array2","array1","courses","getJobFilterOptions","prevOptions","category","element","apiPromises","GetITICourses","GetdiplomaCourses","GetUGCourses","GetPGCourses","Promise","all","results","specificationData","flat","expYearMonth","handleExperienceChange","setMonth","postFilter","CandidateRegisteredActions","setRegisterCandidateListFilter","keysToRemove","filterObject","initialFilterObject","key","JSON","stringify","registercandidatestyle","truncatedValue","handleClose","limitTags","multiple","updatedcategory","push","updateJobCategory","getOptionLabel","filterSelectedOptions","placeholder","updateskills","updateSkills","updateQualification","updatequalification","updateSpecialization","handleSpecification","updateCity","handleEligiblityChange","handleGenderChange","theme","CandidateRegisterFilter","CanList","RegisterCandidateList","currentCandidateDetail","setCurrentCandidateDetails","isQualifiedDetails","setIsQualifiedDetails","confirmtext","isQualified","openPopup","followupError","setFollowupError","dateTime","addNotes","selectEvent","setSize","setTotalCount","Follownotes","setFollownotes","selectedValue","setSelectedValue","eventData","setEventData","dateTimeError","setDateTimeError","setDateTime","formattedDate","setFormattedDate","followupopen","setFollowupOpen","showLoader","setShowLoader","closeFollowup","postCandidate","setRegisterCandidateList","total_count","GetFollowUpEvents","fetchEventData","setRegisterCandidateListFilterAdminId","finally","inputRef","followup","handleButtonClick","refName","ref","current","click","openIsQualifyPopup","status","confirmText","first_name","candidate_id","PutCandidateIsQualified","updatedCanList","not_qualified","Topcontainer","setRegisterCandidateListFiltersize","RegisterCandidateFilter","overflowX","overflowY","currentCanDetails","last_name","mobile_number","job_category","exp_in_years","city","assign_to","created_time","RegisterCandidateStyle","Status","Notqualified","is_daily_task","Followup","user_id","Backdrop","drawer","CircularProgress","setRegisterCandidateListFilterPage","marginBottom","DemoContainer","components","DateTimePicker","dayjs","format","justifyContent","Button","borderColor","formattedDateTime","followUpTime","PostFollowup","tablestyle","RecruitmentLeadsFilter","RecruitmentLeads","RecruitmentfilterData","CandidateRecruitmentList","CandidateRecruitmentLeadsActions","LeadFilter","borderBottom","RegisteredCandidateTable","lazy","CandidateInterviewTable","MidLevelList","CandidateLeadTable","CandidateFaceBookMetaTable","TotalCount","FbmetaCount","LeadCount","Register","interviews","MidLevel","joindeCandidate","adminAccess","RolesAndAccessDetails","tabValue","hash","FBmetaListFilter","FbmetaLeadDetails","CanLeadFilter","CandidateLeadFilter","interviewFilter","interviewListDetails","CandidateMidLevelFilter","CandidateMidLevelDetails","hashValue","substring","roleName","FBmetaLeadsSliceActions","setFBmetaListFilterAdminId","CandidateLeadActions","setCandidateLeadFilterAdminId","interviewListActions","setInterviewFilterShceduleBy","PostCandidateFBmeta","GetCandidateLead","GetcanInterviews","GetCanMidLevellist","totalElements","BsMeta","HiUsers","RiUserFollowLine","VscCalendar","MdJoinInner","Suspense","fallback","RecruitmentsLeads","CandidateJoined","CandidateDailyTask","CandidateResource"],"sourceRoot":""}