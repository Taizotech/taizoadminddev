{"version":3,"file":"static/js/994.e17c3605.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","pages/Dashboard/Dashboard.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport { Box, FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport { Getdashboard } from \"../../apiServices\";\r\nimport AdminAccess from \"../AdminDetails/accessControl\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ChartDataLabels,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [selectedOption, setSelectedOption] = useState(\"Employer\");\r\n  const [selectedDuration, setSelectedDuration] = useState(\"daily\");\r\n  const handleSelectChange = (event) => {\r\n    console.log(event.target.value);\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleDurationChange = (event) => {\r\n    console.log(\"Duration changed:\", event.target.value);\r\n    setSelectedDuration(event.target.value);\r\n  };\r\n  const createInitialDataStructure = () => ({\r\n    daily: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"\",\r\n          data: [],\r\n          backgroundColor: \"#169C50\",\r\n          // borderColor: \"rgb(255, 99, 132)\",\r\n          borderWidth: 1,\r\n          fontSize: \"20px\",\r\n        },\r\n      ],\r\n    },\r\n    weekly: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"\",\r\n          data: [],\r\n          backgroundColor: \"#169C50\",\r\n          // borderColor: \"rgb(255, 99, 132)\",\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    },\r\n    monthly: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"\",\r\n          data: [],\r\n          backgroundColor: \"#169C50\",\r\n          // borderColor: \"rgb(255, 99, 132)\",\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    },\r\n  });\r\n  const initialDataByDuration = {\r\n    Incomplete: createInitialDataStructure(),\r\n    Registration: createInitialDataStructure(),\r\n    noOfPayment: createInitialDataStructure(),\r\n    planCanceled: createInitialDataStructure(),\r\n    noOfCalls: createInitialDataStructure(),\r\n    totalPayment: createInitialDataStructure(),\r\n    feedback: createInitialDataStructure(),\r\n    interviewScheduled: createInitialDataStructure(),\r\n    Ratings: createInitialDataStructure(),\r\n    TotalJobs: createInitialDataStructure(),\r\n    ActiveJobs: createInitialDataStructure(),\r\n    ClosedJobs: createInitialDataStructure(),\r\n    JobLead: createInitialDataStructure(),\r\n    Response: createInitialDataStructure(),\r\n    JobRatings: createInitialDataStructure(),\r\n  };\r\n  const [dataByDuration, setDataByDuration] = useState(initialDataByDuration);\r\n\r\n  useEffect(() => {\r\n    Getdashboard(selectedDuration, selectedOption).then((data) => {\r\n      const dailyTimePeriod = data.data.map((item) => item.Time);\r\n      const Incomplete = data.data.map(\r\n        (item) => item[\"Incomplete_Registration\"]\r\n      );\r\n      // const stage2Count = data.data.map((item) => item[\"Stage 2\"]);\r\n      const Registration = data.data.map((item) => item.Registration);\r\n      const noOfPayment = data.data.map((item) => item[\"No_of_Payment\"]);\r\n      // const noOfPayment = data.data.map((item) => item[\"No of Payment\"]);\r\n\r\n      const planCanceled = data.data.map(\r\n        (item) => item[\"No_of_Plan_Cancelled\"]\r\n      );\r\n      const noOfCalls = data.data.map((item) => item[\"No_of_Calls \"]);\r\n      // const noOfCallss = data.data.map((item) => item[\"No of Calls\"]);\r\n      const totalPayment = data.data.map((item) => item[\"Total_Amount\"]);\r\n      const feedback = data.data.map((item) => item.Feedback);\r\n      const Ratings = data.data.map((item) => item[\"No_of_Ratings\"]);\r\n      const interviewScheduled = data.data.map(\r\n        (item) => item[\"No_of_Interviews_Scheduled\"]\r\n      );\r\n      const TotalJobs = data.data.map((item) => item[\"Total_Job_Posted\"]);\r\n      const ActiveJobs = data.data.map((item) => item[\"No_of_Active_Jobs\"]);\r\n      const ClosedJobs = data.data.map((item) => item[\"No_of_Closed_Jobs\"]);\r\n      const JobLead = data.data.map((item) => item[\"No_of_Job_Lead\"]);\r\n      const Response = data.data.map((item) => item[\"No_of_Job_Can_Response\"]);\r\n      const JobRatings = data.data.map((item) => item[\"No_of_Job_Ratings\"]);\r\n\r\n      // console.log(stage1Count, \"stage1Count count\");\r\n\r\n      setDataByDuration((prev) => ({\r\n        ...prev,\r\n        Incomplete: {\r\n          ...prev.Incomplete,\r\n          [selectedDuration]: {\r\n            //  [selectedDuration],\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.Incomplete[selectedDuration].datasets[0],\r\n                data: [...Incomplete.slice().reverse()],\r\n                // label: [\"Incomplete Registration\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        Registration: {\r\n          ...prev.Registration,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.Registration[selectedDuration].datasets[0],\r\n                data: [...Registration.slice().reverse()],\r\n                // label: [\"Registration\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        noOfPayment: {\r\n          ...prev.noOfPayment,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.noOfPayment[selectedDuration].datasets[0],\r\n                data: [...noOfPayment.slice().reverse()],\r\n                // label: [\"No  of Payment\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        planCanceled: {\r\n          ...prev.planCanceled,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.planCanceled[selectedDuration].datasets[0],\r\n                data: [...planCanceled.slice().reverse()],\r\n                // label: [\"No  of  Plan  Cancelled\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        noOfCalls: {\r\n          ...prev.noOfCalls,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.noOfCalls[selectedDuration].datasets[0],\r\n                data: [...noOfCalls.slice().reverse()],\r\n                // label: [\"No  of  Calls\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        totalPayment: {\r\n          ...prev.totalPayment,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.totalPayment[selectedDuration].datasets[0],\r\n                data: [...totalPayment.slice().reverse()],\r\n                // label: [\"Total Payment\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        feedback: {\r\n          ...prev.feedback,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.feedback[selectedDuration].datasets[0],\r\n                data: [...feedback.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        interviewScheduled: {\r\n          ...prev.interviewScheduled,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.interviewScheduled[selectedDuration].datasets[0],\r\n                data: [...interviewScheduled.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        Ratings: {\r\n          ...prev.Ratings,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.Ratings[selectedDuration].datasets[0],\r\n                data: [...Ratings.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        TotalJobs: {\r\n          ...prev.TotalJobs,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.TotalJobs[selectedDuration].datasets[0],\r\n                data: [...TotalJobs.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        ActiveJobs: {\r\n          ...prev.ActiveJobs,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.ActiveJobs[selectedDuration].datasets[0],\r\n                data: [...ActiveJobs.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        ClosedJobs: {\r\n          ...prev.ClosedJobs,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.ClosedJobs[selectedDuration].datasets[0],\r\n                data: [...ClosedJobs.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        JobLead: {\r\n          ...prev.JobLead,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.JobLead[selectedDuration].datasets[0],\r\n                data: [...JobLead.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        Response: {\r\n          ...prev.Response,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.Response[selectedDuration].datasets[0],\r\n                data: [...Response.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        JobRatings: {\r\n          ...prev.JobRatings,\r\n          [selectedDuration]: {\r\n            labels: [...dailyTimePeriod.slice().reverse()],\r\n            datasets: [\r\n              {\r\n                ...prev.JobRatings[selectedDuration].datasets[0],\r\n                data: [...JobRatings.slice().reverse()],\r\n                // label: [\"feedback\"],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      }));\r\n    });\r\n  }, [selectedDuration, selectedOption]);\r\n  useEffect(() => {\r\n    console.log(selectedOption);\r\n  }, [selectedOption]);\r\n  return (\r\n    <>\r\n      <div>\r\n        <AdminAccess />\r\n\r\n        <div className=\"\">\r\n          <div className=\"container-fluid\">\r\n            {\" \"}\r\n            <span className=\"row mb-2 d-flex justify-content-end\">\r\n              <span className=\"col-sm-3 \">\r\n                <Box sx={{ minWidth: 20 }}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Module\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"Select module\"\r\n                      onChange={(e) => {\r\n                        handleSelectChange(e);\r\n                      }}\r\n                      value={selectedOption}\r\n                    >\r\n                      <MenuItem value={\"Employer\"}>Employer</MenuItem>\r\n\r\n                      <MenuItem value={\"Jobseeker\"}>Job seeker</MenuItem>\r\n\r\n                      <MenuItem value={\"Jobs\"}>Jobs</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n              </span>\r\n              <div className=\"col-sm-2\">\r\n                <Box sx={{ minWidth: 120 }}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">Time</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"Time\"\r\n                      onChange={handleDurationChange}\r\n                      value={selectedDuration}\r\n                    >\r\n                      <MenuItem value={\"daily\"}>Daily</MenuItem>\r\n                      <MenuItem value={\"weekly\"}>Weekly</MenuItem>\r\n                      <MenuItem value={\"monthly\"}>Monthly</MenuItem>\r\n                      {/* <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n              </div>\r\n            </span>\r\n          </div>\r\n          {selectedOption === \"Employer\" && (\r\n            <div\r\n              className=\"card border-0 \"\r\n              style={{\r\n                height: \"68vh\",\r\n                overflow: \"hidden\",\r\n                padding:\"1spx\",\r\n                borderRadius: \"8px\",\r\n                boxShadow: \"0px 0px 5px 1px rgba(157, 157, 157, 0.2)\",\r\n              }}\r\n            >\r\n              <div className=\"container-fluid\">\r\n                <div style={{ display: \"inline\" }}>\r\n                  <>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row mt-5 ms-2 mb-5 me-2 d-flex \">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Incomplete Registration\",\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                  fontSize: 16,\r\n                                  // fontSize: 40,\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.Incomplete[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-6 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Registration\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.Registration[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"col-sm-4\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Payment\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.noOfPayment[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row mt-3 ms-2  mb-2 me-2\">\r\n                      {/* <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Plan Cancelled\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.planCanceled[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Calls\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.noOfCalls[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Total Payment\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.totalPayment[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                      \r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row mt-3 mb-5 ms-2 me-2\">\r\n                    {/* <div className=\"col-sm-4 mt-5 px-3\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Feedback\",\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.feedback[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {selectedOption === \"Jobseeker\" && (\r\n            <div\r\n              className=\"card border-0 \"\r\n              style={{\r\n                height: \"68vh\",\r\n                overflow: \"auto\",\r\n                borderRadius: \"8px\",\r\n                boxShadow: \"0px 5px 5px 5px rgba(0, 0, 0, 0.2)\",\r\n              }}\r\n            >\r\n              <div className=\"container-fluid\">\r\n                <div style={{ display: \"inline\" }}>\r\n                  <>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row mt-5 ms-2 mb-5 me-2 d-flex \">\r\n                      <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Incomplete Registration\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.Incomplete[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-4\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Registration\",\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                  fontSize: 16,\r\n                                  // fontSize: 40,\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.Registration[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-4\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Interview Scheduled\",\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={\r\n                              dataByDuration.interviewScheduled[\r\n                                selectedDuration\r\n                              ]\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"col-sm-4\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Calls\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\", // Position of the data count label (e.g., 'start', 'end', 'center')\r\n                                  align: \"end\", // Alignment of the data count label (e.g., 'start', 'end', 'center')\r\n                                  display: \"auto\", // Show data count labels automatically\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.noOfCalls[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row mt-3 ms-2  mb-2 me-2\">\r\n                      {/* <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Ratings\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.Ratings[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                      {/* <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Payment\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.noOfPayment[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                      {/* <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Total Payment\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.totalPayment[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row mt-3 mb-3 ms-2 me-2\">\r\n                      \r\n                    </div>\r\n                  </>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {selectedOption === \"Jobs\" && (\r\n            <div\r\n              className=\"card border-0 \"\r\n              style={{\r\n                height: \"68vh\",\r\n                overflow: \"auto\",\r\n                borderRadius: \"8px\",\r\n                boxShadow: \"0px 5px 5px 5px rgba(0, 0, 0, 0.2)\",\r\n              }}\r\n            >\r\n              <div className=\"container-fluid\">\r\n                <div style={{ display: \"inline\" }}>\r\n                  <>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row mt-5 ms-2 mb-5 me-2 d-flex \">\r\n                      <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Total Jobs\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.TotalJobs[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-4\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Active Jobs\",\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                  fontSize: 16,\r\n                                  // fontSize: 40,\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.ActiveJobs[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-sm-4\">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Closed Jobs\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.ClosedJobs[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row mt-3 ms-2  mb-2 me-2\">\r\n                      <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Job Lead \", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.JobLead[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"Response\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.Response[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-4 \">\r\n                        <div className=\"me-2\" style={{ cursor: \"pointer\" }}>\r\n                          <Bar\r\n                            options={{\r\n                              responsive: true,\r\n                              plugins: {\r\n                                legend: {\r\n                                  position: \"none\",\r\n                                },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \" Ratings\", // Change the title here\r\n                                  padding: {\r\n                                    top: 0,\r\n                                    bottom: 30,\r\n                                  },\r\n                                },\r\n                                datalabels: {\r\n                                  anchor: \"end\",\r\n                                  align: \"end\",\r\n                                  display: (context) => {\r\n                                    const value =\r\n                                      context.dataset.data[context.dataIndex];\r\n                                    return value > 0;\r\n                                  },\r\n                                  formatter: (value) => {\r\n                                    return value > 0 ? value : \"\";\r\n                                  },\r\n                                },\r\n                              },\r\n                            }}\r\n                            data={dataByDuration.JobRatings[selectedDuration]}\r\n                          />\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                    <br />\r\n                  </>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Bar","BarController","ChartJS","CategoryScale","LinearScale","BarElement","ChartDataLabels","Title","Tooltip","Legend","Dashboard","selectedOption","setSelectedOption","useState","selectedDuration","setSelectedDuration","initialDataByDuration","Incomplete","daily","label","backgroundColor","borderWidth","fontSize","weekly","monthly","Registration","noOfPayment","planCanceled","noOfCalls","totalPayment","feedback","interviewScheduled","Ratings","TotalJobs","ActiveJobs","ClosedJobs","JobLead","Response","JobRatings","dataByDuration","setDataByDuration","Getdashboard","then","dailyTimePeriod","item","Time","Feedback","prev","slice","reverse","console","log","_jsx","_Fragment","children","_jsxs","AdminAccess","className","Box","sx","minWidth","FormControl","fullWidth","InputLabel","id","Select","labelId","onChange","e","event","target","MenuItem","style","overflow","padding","borderRadius","boxShadow","display","cursor","responsive","legend","position","title","text","top","bottom","datalabels","anchor","align","context","dataIndex","formatter"],"sourceRoot":""}