{"version":3,"file":"static/js/388.12dabc3f.chunk.js","mappings":"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","sources":["pages/Employer/employerEnquiry/EmployerEnquiryFilter.js","pages/Employer/employerEnquiry/EmployerEnquiryTable.js"],"sourcesContent":["/* eslint-disable default-case */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FBStyle from \"../../Candidate/FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { MyModal, numbersOnlyTest } from \"../../../utility\";\r\nimport ModalContainer from \"../../../components/modal_popup\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport { Stack, TextField } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { EmployerEnquiryActions } from \"../../../redux-store/store\";\r\nfunction EmployerEnquiryFilter() {\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const EmployerFilter = useSelector(\r\n    (state) => state.EmployerEnquiryDetails.EmployerEnquiryFilter\r\n  );\r\n  const size = useSelector(\r\n    (state) => state.EmployerEnquiryDetails.EmployerEnquiryFilter.size\r\n  );\r\n  const Dispatch = useDispatch();\r\n  const initialState = {\r\n    companyName: EmployerFilter.companyName,\r\n    mobileNumber: EmployerFilter.mobileNumber,\r\n    emailId: EmployerFilter.emailId,\r\n  };\r\n  const [formData, setFormData] = useState(initialState);\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        if (numbersOnlyTest(value)) {\r\n          setFormData({ ...formData, [field]: value });\r\n        }\r\n        break;\r\n      case \"companyName\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n      case \"emailId\":\r\n        setFormData({ ...formData, [field]: value });\r\n        break;\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    Dispatch(\r\n      EmployerEnquiryActions.setEmployerEnquiryFilter({\r\n        ...formData,\r\n        page: 1,\r\n        size: size,\r\n        // dateFilterType: dateRange.dateFilterType || \"\",\r\n      })\r\n    );\r\n\r\n    setShowFilter(false);\r\n  };\r\n  function handleClear(e) {\r\n    e.preventDefault();\r\n    setFormData({\r\n      companyName: \"\",\r\n      mobileNumber: \"\",\r\n      emailId: \"\",\r\n    });\r\n    // setSelectedValue(\"\");\r\n    //   setDateRange({\r\n    //     start: null,\r\n    //     end: null,\r\n    //     dateFilterType: \"\",\r\n    //   });\r\n\r\n    Dispatch(\r\n      EmployerEnquiryActions.setEmployerEnquiryFilter({\r\n        ...initialState,\r\n        //   createdTime: \"\",\r\n        //   endDate: \"\",\r\n        page: 1,\r\n        size: size,\r\n        //   dateFilterType: \"\",\r\n      })\r\n    );\r\n  }\r\n  function handleClickCross(e) {\r\n    e.preventDefault();\r\n    Dispatch(\r\n      EmployerEnquiryActions.setEmployerEnquiryFilter({\r\n        ...formData,\r\n        page: 1,\r\n        size: size,\r\n        // createdTime: create,\r\n        // endDate: ended,\r\n        // dateFilterType: dateRange.dateFilterType,\r\n      })\r\n    );\r\n    setShowFilter(false);\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <button\r\n            className={`rounded-pill d-flex align-items-center ${FBStyle.Filterbutton}`}\r\n            variant=\"contained\"\r\n            onClick={() => setShowFilter(true)}\r\n          >\r\n            <BiFilterAlt style={{ marginRight: 5 }} /> Filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            childComponent={\r\n              <>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <h4 className=\"text-center mb-2\">Filter by</h4>\r\n                  <h3>\r\n                    <span\r\n                      onClick={handleClickCross}\r\n                      className=\"btn btn-outline-danger\"\r\n                      style={{ cursor: \"pointer\", fontSize: 15 }}\r\n                    >\r\n                      <AiOutlineClose />\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                <div className={`${FBStyle.BoxContainerEnquiry}`}>\r\n                  <>\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        handleSubmit(e);\r\n                      }}\r\n                    >\r\n                      <Stack className=\"mt-1\">\r\n                        {\" \"}\r\n                        <div className=\"row\">\r\n                          <div className=\"col-sm-4\">\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              label=\"Mobile number\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              value={formData.mobileNumber}\r\n                              // inputProps={{ maxLenth: 10 }}\r\n                              onChange={(event) =>\r\n                                // event.target.value.length <= 10 &&\r\n                                handleFieldChange(\r\n                                  \"mobileNumber\",\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                              inputProps={{ maxLength: 10 }}\r\n                              InputProps={{\r\n                                startAdornment: (\r\n                                  <span\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <AiOutlinePhone\r\n                                      style={{ marginRight: \"5px\" }}\r\n                                    />{\" \"}\r\n                                    +91\r\n                                  </span>\r\n                                ),\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-4\">\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Company Name\"\r\n                              id=\"companyName\"\r\n                              type=\"text\"\r\n                              value={formData.companyName}\r\n                              onChange={(event) =>\r\n                                handleFieldChange(\r\n                                  \"companyName\",\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-4\">\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Email Id\"\r\n                              id=\"emailId\"\r\n                              type=\"text\"\r\n                              value={formData.emailId}\r\n                              onChange={(event) =>\r\n                                handleFieldChange(\"emailId\", event.target.value)\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row gap-2 justify-content-end mt-4\">\r\n                          <button\r\n                            className={`rounded-pill ${FBStyle.Filterbutton}`}\r\n                            variant=\"outlined\"\r\n                            onClick={(e) => {\r\n                              handleClear(e);\r\n                            }}\r\n                          >\r\n                            Clear All\r\n                          </button>\r\n                          <button\r\n                            className={`rounded-pill ${FBStyle.search}`}\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            sx={{ minWidth: \"150px\" }}\r\n                          >\r\n                            Search\r\n                          </button>\r\n                        </div>\r\n                      </Stack>\r\n                    </form>\r\n                  </>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployerEnquiryFilter;\r\n","/* eslint-disable react/jsx-pascal-case */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FBstyle from \"../../Candidate/FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport EmployerEnquiryFilter from \"./EmployerEnquiryFilter\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  IconButton,\r\n  Pagination,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport { GetEmployerEnquiry } from \"../../../apiServices\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  DDMMYYYY_formate,\r\n  capitalizeWords,\r\n  textTruncate,\r\n} from \"../../../utility\";\r\nimport { EmployerEnquiryActions } from \"../../../redux-store/store\";\r\nimport canLeadStyle from \"../../Candidate/CandidateLeadTable/candidateLead.module.scss\";\r\nimport { MdOutlineContentCopy } from \"react-icons/md\";\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#d2d2d2\",\r\n    color: \"#545454f0\",\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    \"@media (max-width: 992px)\": {},\r\n  },\r\n}));\r\nfunction EmployerEnquiryTable() {\r\n  const [EmployerEnquiryList, setEmployerEnquiryList] = useState([]);\r\n  const [pageCount, setpageCount] = useState();\r\n  const [enquiryCount, setEnquiryCount] = useState(\"\");\r\n  const [isTooltipOpen, setTooltipOpen] = useState({});\r\n  const [isCompanyTooltipOpen, setCompanyTooltipOpen] = useState({});\r\n  const EmployerFilter = useSelector(\r\n    (state) => state.EmployerEnquiryDetails.EmployerEnquiryFilter\r\n  );\r\n  const Dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(EmployerFilter);\r\n  }, [EmployerFilter]);\r\n\r\n  useEffect(() => {\r\n    GetEmployerEnquiry(EmployerFilter).then((data) => {\r\n      console.log(data.empEnquiryList, \"workingprogress\");\r\n      setEmployerEnquiryList(data.empEnquiryList);\r\n      setEnquiryCount(data.totalCount);\r\n      setpageCount(Math.ceil(data.totalCount / EmployerFilter.size));\r\n    });\r\n  }, [EmployerFilter]);\r\n  function candidatePagination(event, page) {\r\n    const currentPage = page;\r\n    console.log(event, \"current page\");\r\n    Dispatch(EmployerEnquiryActions.setEmployerEnquiryFilterPage(currentPage));\r\n  }\r\n  function candidateSize(size) {\r\n    Dispatch(EmployerEnquiryActions.setEmployerEnquiryFilterSize(size));\r\n  }\r\n  const handleCopyClickcompany = (text, candidateId) => {\r\n    navigator.clipboard.writeText(text);\r\n\r\n    setCompanyTooltipOpen((prevState) => ({\r\n      ...prevState,\r\n      [candidateId]: true,\r\n    }));\r\n    setTimeout(() => {\r\n      setCompanyTooltipOpen((prevState) => ({\r\n        ...prevState,\r\n        [candidateId]: false,\r\n      }));\r\n    }, 1500);\r\n  };\r\n  const handleCopyClick = (text, candidateId) => {\r\n    navigator.clipboard.writeText(text);\r\n\r\n    setTooltipOpen((prevState) => ({\r\n      ...prevState,\r\n      [candidateId]: true,\r\n    }));\r\n    setTimeout(() => {\r\n      setTooltipOpen((prevState) => ({\r\n        ...prevState,\r\n        [candidateId]: false,\r\n      }));\r\n    }, 1500);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={`${FBstyle.FilterHead}`}>\r\n        {\" \"}\r\n        <div className=\"d-flex \">\r\n          Show {\"  \"}\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            className=\"px-1 py-1 mx-2\"\r\n            onChange={(event) => candidateSize(event.target.value)}\r\n          >\r\n            <option selected value=\"10\">\r\n              10\r\n            </option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"30\">30</option>\r\n          </select>\r\n          {\"   \"}\r\n          Entries\r\n        </div>\r\n        <div className={`${canLeadStyle.filterAdduser}`}>\r\n          {\" \"}\r\n          <div className=\"mt-1 me-2\">Total Count : {enquiryCount}</div>\r\n          <EmployerEnquiryFilter />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={`${FBstyle.Container}`}>\r\n          <div className={`table-responsive-sm ${FBstyle.responsive}`}>\r\n            <TableContainer className={`${FBstyle.TableContainer}`}>\r\n              <Table stickyHeader aria-label=\"sticky table\" className={``}>\r\n                <TableHead className={`${FBstyle.Header}`}>\r\n                  <TableRow>\r\n                    <StyledTableCell>Name</StyledTableCell>\r\n                    <StyledTableCell>Company Name</StyledTableCell>\r\n                    <StyledTableCell>Mobile Number</StyledTableCell>\r\n                    <StyledTableCell>Email Id</StyledTableCell>\r\n                    <StyledTableCell>Industry</StyledTableCell>\r\n                    <StyledTableCell>City</StyledTableCell>\r\n                    {/* <StyledTableCell>Area</StyledTableCell> */}\r\n                    <StyledTableCell>Created on</StyledTableCell>\r\n                    {/* <StyledTableCell>Status</StyledTableCell> */}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {EmployerEnquiryList.length > 0 ? (\r\n                    <>\r\n                      {EmployerEnquiryList.map((Employer, i) => {\r\n                        return (\r\n                          <>\r\n                            <TableRow\r\n                              key={i}\r\n                              sx={{\r\n                                \"&:last-child td, &:last-child th\": {\r\n                                  border: 0,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <StyledTableCell\r\n                                title={\r\n                                  Employer.empEnquiryModel.contactPersonName\r\n                                }\r\n                              >\r\n                                {Employer.empEnquiryModel.contactPersonName\r\n                                  ? textTruncate(\r\n                                      capitalizeWords(\r\n                                        Employer.empEnquiryModel\r\n                                          .contactPersonName\r\n                                      ),\r\n                                      15\r\n                                    )\r\n                                  : \"-\"}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell\r\n                                title={Employer.empEnquiryModel.companyName}\r\n                              >\r\n                                {Employer.empEnquiryModel.companyName !=\r\n                                null ? (\r\n                                  <>\r\n                                    <Tooltip\r\n                                      key={Employer.empEnquiryModel.id}\r\n                                      open={\r\n                                        isCompanyTooltipOpen[\r\n                                          Employer.empEnquiryModel.id\r\n                                        ] || false\r\n                                      }\r\n                                      className=\"ms-0\"\r\n                                      title=\"Company name copied!\"\r\n                                      placement=\"top\"\r\n                                      id={Employer.empEnquiryModel.id}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() =>\r\n                                          handleCopyClickcompany(\r\n                                            Employer.empEnquiryModel\r\n                                              .companyName,\r\n                                            Employer.empEnquiryModel.id\r\n                                          )\r\n                                        }\r\n                                        aria-label=\"Copy Email ID\"\r\n                                      >\r\n                                        <MdOutlineContentCopy />\r\n                                      </IconButton>\r\n                                    </Tooltip>{\" \"}\r\n                                    {textTruncate(\r\n                                      Employer.empEnquiryModel.companyName,\r\n                                      15\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <span>-</span>\r\n                                )}\r\n                              </StyledTableCell>\r\n\r\n                              <StyledTableCell\r\n                                title={Employer.empEnquiryModel.mobileNumber}\r\n                              >\r\n                                {Employer.empEnquiryModel.mobileNumber\r\n                                  ? \"+91\" +\r\n                                    \" \" +\r\n                                    String(\r\n                                      Employer.empEnquiryModel.mobileNumber\r\n                                    ).slice(0, 10)\r\n                                  : \"\"}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell\r\n                                title={Employer.empEnquiryModel.emailId}\r\n                              >\r\n                                {Employer.empEnquiryModel.emailId != null ? (\r\n                                  <>\r\n                                    <Tooltip\r\n                                      key={Employer.empEnquiryModel.id}\r\n                                      open={\r\n                                        isTooltipOpen[\r\n                                          Employer.empEnquiryModel.id\r\n                                        ] || false\r\n                                      }\r\n                                      className=\"ms-0\"\r\n                                      title=\"Email ID copied!\"\r\n                                      placement=\"top\"\r\n                                      id={Employer.empEnquiryModel.id}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() =>\r\n                                          handleCopyClick(\r\n                                            Employer.empEnquiryModel.emailId,\r\n                                            Employer.empEnquiryModel.id\r\n                                          )\r\n                                        }\r\n                                        aria-label=\"Copy Email ID\"\r\n                                      >\r\n                                        <MdOutlineContentCopy />\r\n                                      </IconButton>\r\n                                    </Tooltip>{\" \"}\r\n                                    {textTruncate(\r\n                                      Employer.empEnquiryModel.emailId,\r\n                                      25\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <span>-</span>\r\n                                )}\r\n                                {/* {Employer.empEnquiryModel.emailId\r\n                                  ? textTruncate(\r\n                                      capitalizeWords(\r\n                                        Employer.empEnquiryModel.emailId\r\n                                      ),\r\n                                      15\r\n                                    )\r\n                                  : \"-\"} */}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell\r\n                                title={Employer.empEnquiryModel.industry}\r\n                              >\r\n                                {Employer.empEnquiryModel.industry\r\n                                  ? textTruncate(\r\n                                      capitalizeWords(\r\n                                        Employer.empEnquiryModel.industry\r\n                                      ),\r\n                                      15\r\n                                    )\r\n                                  : \"-\"}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell\r\n                                title={Employer.empEnquiryModel.city}\r\n                              >\r\n                                {Employer.empEnquiryModel.city\r\n                                  ? textTruncate(\r\n                                      capitalizeWords(\r\n                                        Employer.empEnquiryModel.city\r\n                                      ),\r\n                                      15\r\n                                    )\r\n                                  : \"-\"}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell>\r\n                                <DDMMYYYY_formate\r\n                                  dateValue={\r\n                                    Employer.empEnquiryModel.createdTime\r\n                                  }\r\n                                />\r\n                              </StyledTableCell>\r\n                            </TableRow>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center align-items-center mb-3 position-absolute bottom-0 start-50 translate-middle-x\">\r\n          <Stack spacing={2}>\r\n            <Pagination\r\n              count={pageCount}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              color=\"success\"\r\n              boundaryCount={1}\r\n              siblingCount={0}\r\n              onChange={candidatePagination}\r\n              size=\"medium\"\r\n            />\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployerEnquiryTable;\r\n"],"names":["showFilter","setShowFilter","useState","EmployerFilter","useSelector","state","EmployerEnquiryDetails","EmployerEnquiryFilter","size","Dispatch","useDispatch","initialState","companyName","mobileNumber","emailId","formData","setFormData","handleFieldChange","field","value","numbersOnlyTest","useEffect","console","log","_jsxs","_Fragment","children","_jsx","className","concat","FBStyle","Filterbutton","variant","onClick","BiFilterAlt","style","marginRight","MyModal","ModalContainer","childComponent","e","preventDefault","EmployerEnquiryActions","setEmployerEnquiryFilter","page","cursor","fontSize","AiOutlineClose","BoxContainerEnquiry","onSubmit","handleSubmit","Stack","TextField","id","label","fullWidth","onChange","event","target","inputProps","maxLength","InputProps","startAdornment","display","alignItems","AiOutlinePhone","type","handleClear","search","sx","minWidth","StyledTableCell","styled","TableCell","_ref","theme","tableCellClasses","head","backgroundColor","color","body","EmployerEnquiryList","setEmployerEnquiryList","pageCount","setpageCount","enquiryCount","setEnquiryCount","isTooltipOpen","setTooltipOpen","isCompanyTooltipOpen","setCompanyTooltipOpen","GetEmployerEnquiry","then","data","empEnquiryList","totalCount","Math","ceil","FBstyle","FilterHead","name","candidateSize","setEmployerEnquiryFilterSize","selected","canLeadStyle","filterAdduser","Container","responsive","TableContainer","Table","stickyHeader","TableHead","Header","TableRow","TableBody","length","map","Employer","i","border","title","empEnquiryModel","contactPersonName","textTruncate","capitalizeWords","Tooltip","open","placement","IconButton","handleCopyClickcompany","text","candidateId","navigator","clipboard","writeText","prevState","setTimeout","MdOutlineContentCopy","String","slice","handleCopyClick","industry","city","DDMMYYYY_formate","dateValue","createdTime","spacing","Pagination","count","shape","boundaryCount","siblingCount","currentPage","setEmployerEnquiryFilterPage"],"sourceRoot":""}