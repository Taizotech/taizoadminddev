{"version":3,"file":"static/js/221.f67c577c.chunk.js","mappings":"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","sources":["pages/Tabsview/EmployerTabsView/EmployerTabs.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useEffect, Suspense, lazy } from \"react\";\r\nimport { useState } from \"react\";\r\nimport candidateTabsviewStyle from \"../Candidate/CandidateTabsview.module.scss\";\r\nimport { HiUsers } from \"react-icons/hi2\";\r\nimport { RiUserFollowLine } from \"react-icons/ri\";\r\n// import EmployerLeadTable from \"../../Employer/employerLead/EmployerLeadTable\";\r\n// import EmployerRegiterTable from \"../../Employer/EmployerRegisterTable/EmployerRegiterTable\";\r\n// import KycVerify from \"../../Employer/Kyc_verify\";\r\n// import EmployerEnquiryTable from \"../../Employer/employerEnquiry/EmployerEnquiryTable\";\r\nimport { AiTwotoneCustomerService } from \"react-icons/ai\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  GetEmployerEnquiry,\r\n  GetEmployerFilterDetails,\r\n  GetEmployerLeadList,\r\n} from \"../../../apiServices\";\r\nimport { base_url } from \"../../../App\";\r\nimport { hasAccessTo } from \"../../../utility\";\r\n\r\nconst EmployerLeadTable = lazy(() =>\r\n  import(\"../../Employer/employerLead/EmployerLeadTable\")\r\n);\r\nconst EmployerEnquiryTable = lazy(() =>\r\n  import(\"../../Employer/employerEnquiry/EmployerEnquiryTable\")\r\n);\r\nconst KycVerify = lazy(() => import(\"../../Employer/Kyc_verify\"));\r\n\r\nconst EmployerRegiterTable = lazy(() =>\r\n  import(\"../../Employer/EmployerRegisterTable/EmployerRegiterTable\")\r\n);\r\n\r\nfunction EmployerTabs() {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [TotalCount, setTotalCount] = useState({\r\n    LeadCount: \"\",\r\n    Register: \"\",\r\n    Kyc: \"\",\r\n    Enquiry: \"\",\r\n  });\r\n\r\n  const adminAccess = useSelector((state) => state.RolesAndAccessDetails);\r\n\r\n  // useEffect(() => {\r\n  //   const handleKeyPress = (event) => {\r\n  //     const isInputField = event.target.tagName === \"INPUT\";\r\n  //     if (!isInputField) {\r\n  //       switch (event.key) {\r\n  //         case \"1\":\r\n  //           handleTabClick(\"leads\");\r\n  //           break;\r\n  //         case \"2\":\r\n  //           handleTabClick(\"registered\");\r\n  //           break;\r\n  //         case \"3\":\r\n  //           handleTabClick(\"kyc\");\r\n  //           break;\r\n  //         case \"4\":\r\n  //           handleTabClick(\"enquiry\");\r\n  //           break;\r\n  //         // case \"5\":\r\n  //         //   handleTabClick(\"leads\");\r\n  //         //   break;\r\n  //         default:\r\n  //           handleTabClick(\"leads\");\r\n  //           break;\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   window.addEventListener(\"keydown\", handleKeyPress);\r\n\r\n  //   return () => {\r\n  //     window.removeEventListener(\"keydown\", handleKeyPress);\r\n  //   };\r\n  // }, []);\r\n  const handleTabClick = (tabValue) => {\r\n    setActiveTab(tabValue);\r\n    window.location.hash = tabValue;\r\n  };\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n  const EmployerLead = useSelector(\r\n    (state) => state.EmployerLeadDetails.EmployerLeadFilter\r\n  );\r\n  const EmployerRegister = useSelector(\r\n    (state) => state.EmployerRegisterDetails.EmployerRegisterFilter\r\n  );\r\n  const EmployerFilter = useSelector(\r\n    (state) => state.EmployerEnquiryDetails.EmployerEnquiryFilter\r\n  );\r\n  useEffect(() => {\r\n    const hashValue = window.location.hash.substring(1); // Exclude the '#' symbol\r\n\r\n    // Now 'hashValue' contains the value of the hash fragment\r\n\r\n    if (hashValue) {\r\n      switch (hashValue) {\r\n        case \"leads\":\r\n          handleTabClick(\"leads\");\r\n          break;\r\n        case \"registered\":\r\n          handleTabClick(\"registered\");\r\n          break;\r\n        case \"kyc\":\r\n          handleTabClick(\"kyc\");\r\n          break;\r\n        case \"enquiry\":\r\n          handleTabClick(\"enquiry\");\r\n          break;\r\n\r\n        default:\r\n          // handleTabClick(\"leads\");\r\n          break;\r\n      }\r\n    } else {\r\n      handleTabClick(\"leads\");\r\n    }\r\n  }, []);\r\n\r\n  function GetCompanyDetails(filterPage) {\r\n    fetch(\r\n      `${base_url}/viewKYCDocuments?page=0&start_date=2000-01-01&end_date=2030-01-01&size=10`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTotalCount((prev) => ({\r\n          ...prev,\r\n          Kyc: data.recordsTotal,\r\n        }));\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    GetEmployerLeadList(EmployerLead).then((data) => {\r\n      setTotalCount((prev) => ({\r\n        ...prev,\r\n        LeadCount: data.data.totalElements,\r\n      }));\r\n    });\r\n    GetEmployerFilterDetails(EmployerRegister).then((data) => {\r\n      setTotalCount((prev) => ({\r\n        ...prev,\r\n        Register: data.totalCount,\r\n      }));\r\n    });\r\n    GetEmployerEnquiry(EmployerFilter).then((data) => {\r\n      setTotalCount((prev) => ({\r\n        ...prev,\r\n        Enquiry: data.totalCount,\r\n      }));\r\n    });\r\n    GetCompanyDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className={`tab-buttons ${candidateTabsviewStyle.tab_buttons}`}>\r\n        <div className={`d-flex ${candidateTabsviewStyle.tab_hr}`}>\r\n          {hasAccessTo(adminAccess.accessNames, \"Employer Leads\") && (\r\n            <div\r\n              onClick={() => handleTabClick(\"leads\")}\r\n              className={` ${\r\n                activeTab === \"leads\"\r\n                  ? candidateTabsviewStyle.activetag\r\n                  : candidateTabsviewStyle.unactivetag\r\n              } `}\r\n            >\r\n              <HiUsers /> Leads ({TotalCount.LeadCount})\r\n            </div>\r\n          )}\r\n          {hasAccessTo(adminAccess.accessNames, \"Employer Registered\") && (\r\n            <div\r\n              onClick={() => handleTabClick(\"registered\")}\r\n              className={` ${\r\n                activeTab === \"registered\"\r\n                  ? candidateTabsviewStyle.activetag\r\n                  : candidateTabsviewStyle.unactivetag\r\n              }`}\r\n            >\r\n              <RiUserFollowLine /> Registered ({TotalCount.Register})\r\n            </div>\r\n          )}\r\n          {hasAccessTo(adminAccess.accessNames, \"Employer KYC\") && (\r\n            <div\r\n              onClick={() => handleTabClick(\"kyc\")}\r\n              className={` ${\r\n                activeTab === \"kyc\"\r\n                  ? candidateTabsviewStyle.activetag\r\n                  : candidateTabsviewStyle.unactivetag\r\n              }`}\r\n            >\r\n              <TiTick /> KYC ({TotalCount.Kyc})\r\n            </div>\r\n          )}\r\n          {isSuperAdmin && (\r\n            <div\r\n              onClick={() => handleTabClick(\"enquiry\")}\r\n              className={` ${\r\n                activeTab === \"enquiry\"\r\n                  ? candidateTabsviewStyle.activetag\r\n                  : candidateTabsviewStyle.unactivetag\r\n              }`}\r\n            >\r\n              <AiTwotoneCustomerService /> Enquiry Registered (\r\n              {TotalCount.Enquiry})\r\n            </div>\r\n          )}\r\n        </div>\r\n        <hr style={{ borderTop: \"10px solid #ccc\" }} />\r\n      </div>\r\n\r\n      <div className={`tab-content ${candidateTabsviewStyle.tab_content}`}>\r\n        {activeTab === \"leads\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <EmployerLeadTable />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"registered\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <EmployerRegiterTable />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"kyc\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <KycVerify />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {activeTab === \"enquiry\" && (\r\n          <p>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <EmployerEnquiryTable />\r\n            </Suspense>\r\n          </p>\r\n        )}\r\n        {/* {activeTab === 5 && (\r\n          <p>\r\n            <EmployerFieldLeads />\r\n          </p>\r\n        )} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployerTabs;\r\n"],"names":["EmployerLeadTable","lazy","EmployerEnquiryTable","KycVerify","EmployerRegiterTable","activeTab","setActiveTab","useState","TotalCount","setTotalCount","LeadCount","Register","Kyc","Enquiry","adminAccess","useSelector","state","RolesAndAccessDetails","handleTabClick","tabValue","window","location","hash","isSuperAdmin","adminDetails","roleID","EmployerLead","EmployerLeadDetails","EmployerLeadFilter","EmployerRegister","EmployerRegisterDetails","EmployerRegisterFilter","EmployerFilter","EmployerEnquiryDetails","EmployerEnquiryFilter","useEffect","hashValue","substring","GetEmployerLeadList","then","data","prev","totalElements","GetEmployerFilterDetails","totalCount","GetEmployerEnquiry","fetch","concat","base_url","res","json","recordsTotal","_jsxs","children","className","candidateTabsviewStyle","tab_buttons","tab_hr","hasAccessTo","accessNames","onClick","activetag","unactivetag","_jsx","HiUsers","RiUserFollowLine","TiTick","AiTwotoneCustomerService","style","borderTop","tab_content","Suspense","fallback"],"sourceRoot":""}