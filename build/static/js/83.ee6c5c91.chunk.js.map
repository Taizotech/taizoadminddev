{"version":3,"file":"static/js/83.ee6c5c91.chunk.js","mappings":"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","sources":["webpack://admin-login-react/./src/pages/Filter/Jobs/components/jobList.module.scss?af41","webpack://admin-login-react/./src/pages/Candidate/Call Registry/callRegistry.module.scss?441f","pages/Employer/jobLead/NoDraft.js","pages/Employer/jobLead/JobLead.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"job_list_wrp\":\"jobList_job_list_wrp__GWiPb\",\"job_list_item\":\"jobList_job_list_item__x0nWN\",\"employer_list_item\":\"jobList_employer_list_item__sTRQt\",\"loader_wrp\":\"jobList_loader_wrp__4d1v1\",\"moveContent\":\"jobList_moveContent__uQ1WZ\",\"employerRating_list_item\":\"jobList_employerRating_list_item__OmZME\",\"employer_list\":\"jobList_employer_list__jTYrl\",\"payment_list\":\"jobList_payment_list__q61Ca\",\"buttom_candi_list1\":\"jobList_buttom_candi_list1__KYGjV\",\"buttom_candi_list\":\"jobList_buttom_candi_list__K3rxR\",\"Employer\":\"jobList_Employer__mxB1I\"};","// extracted by mini-css-extract-plugin\nexport default {\"call_list_wrp\":\"callRegistry_call_list_wrp__hfGsw\",\"call_list_item\":\"callRegistry_call_list_item__wUWrl\",\"loader_wrp\":\"callRegistry_loader_wrp__DtZAM\",\"moveContent\":\"callRegistry_moveContent__LRZrM\"};","import React from 'react'\r\n\r\nfunction NoLead() {\r\n    return (\r\n        <div>\r\n            <h4 className='d-flex align-items-center justify-content-center text-danger'>Employer Id Notfound in Lead table</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoLead\r\n","/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport { CircularProgress, Pagination, Stack, TextField } from \"@mui/material\";\r\nimport styled from \"../../Filter/Jobs/components/jobList.module.scss\";\r\nimport style from \"../../Candidate/Call Registry/callRegistry.module.scss\";\r\nimport NoLead from \"./NoDraft\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GetJobLeadtable } from \"../../../apiServices\";\r\nimport { commonPopupActions } from \"../../../redux-store/store\";\r\nimport { Ddmmmyyyy_date } from \"../../../utility\";\r\n\r\nfunction JobLead() {\r\n  const [JobLead, setJobLead] = useState(\"\");\r\n  const [JobLeadList, setJobLeadList] = useState([]);\r\n  const [pageCount, setPageCount] = useState({ totalPages: 0, totalCount: 0 });\r\n  const [loading, setLoading] = useState(false);\r\n  const handleJobLead = (e) => {\r\n    let val = e.target.value;\r\n    // console.log(val)\r\n\r\n    if (!isNaN(val)) {\r\n      setJobLead(val);\r\n    }\r\n  };\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const debounceJobLead = debounce(() => {\r\n      setLoading(true);\r\n      GetJobLeadtable(JobLead, 0).then((data) => {\r\n        console.log(data.code);\r\n        if (data.code == 404) {\r\n          setJobLeadList([]);\r\n        }\r\n\r\n        setLoading(false);\r\n        console.log(data.data.content, \"records\");\r\n        const TotalPageCount = data.data.totalPages;\r\n        const totalElements = data.data.totalElements;\r\n\r\n        setJobLeadList(data.data.content);\r\n        console.log(data.data.content, \"Employer draft content\");\r\n        setPageCount((prev) => ({\r\n          ...prev,\r\n          totalCount: totalElements,\r\n          totalPages: TotalPageCount,\r\n        }));\r\n      });\r\n    }, 300);\r\n\r\n    debounceJobLead();\r\n    return () => {\r\n      debounceJobLead.cancel();\r\n    };\r\n  }, [JobLead]);\r\n  useEffect(() => {\r\n    GetJobLeadtable(JobLead, 0).then((data) => {\r\n      const TotalPageCount = data.data.totalPages;\r\n      const totalElements = data.data.totalElements;\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        totalCount: totalElements,\r\n        totalPages: TotalPageCount,\r\n      }));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  function employerPagination(event, page) {\r\n    const currentPage = page - 1;\r\n    GetJobLeadtable(JobLead, currentPage).then((data) => {\r\n      const totalPageCount = data.data.totalPages;\r\n      const totalElements = data.data.totalElements;\r\n\r\n      setJobLeadList(data.data.content);\r\n      setPageCount((prev) => ({\r\n        ...prev,\r\n        totalCount: totalElements,\r\n        totalPages: totalPageCount,\r\n      }));\r\n    });\r\n  }\r\n\r\n  const handleEmployersDetails = (id) => {\r\n    console.log(id);\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"employerDetails\",\r\n        id: id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 d-flex justify-content-end\">\r\n            {/* <div className=\"col-sm-10 d-flex justify-content-center align-items-center\">\r\n              <h3 className=\"text-center\">\r\n                <b>Job Lead</b>\r\n              </h3>\r\n            </div> */}\r\n            <div className=\"col-sm-2 \">\r\n              <TextField\r\n                fullWidth\r\n                label=\"Employer Id\"\r\n                id=\"fullWidth\"\r\n                placeholder=\"Employer Id\"\r\n                value={JobLead}\r\n                type=\"number\"\r\n                onChange={handleJobLead}\r\n              />\r\n              {/* <div>\r\n              <br />\r\n              <h5 className=\"px-3\">\r\n                <b>Total Count:</b>\r\n                {pageCount.totalCount}\r\n              </h5>\r\n            </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className={` ${styled.payment_list}`}>\r\n              {loading ? (\r\n                <div\r\n                  className={`${style.loader_wrp} mt-1 d-grid justify-content-center align-items-center`}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  {JobLeadList.length > 0 ? (\r\n                    JobLeadList.map((employer, i) => (\r\n                      <div className=\"container-fluid\">\r\n                        <div\r\n                          onClick={() => {\r\n                            handleEmployersDetails(employer.employerId);\r\n                          }}\r\n                          key={employer.id}\r\n                          className={`p-1 card mt-2`}\r\n                        >\r\n                          <div className=\"row p-1\">\r\n                            <div className=\"col-lg-12 col-md-8 col-sm-4 \">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-lg-4 col-md-3 col-sm-12 d-flex flex-column flex-sm-row align-items-start align-items-sm-center gap-1\">\r\n                                  <div>\r\n                                    <b>Employer Id:</b> {employer.employerId}{\" \"}\r\n                                    {/* {window.innerWidth >= 992 && (\r\n                                      <span className=\"d-none d-md-inline\">\r\n                                        |\r\n                                      </span>\r\n                                    )} */}\r\n                                  </div>\r\n                                  {/* <div><b>Job Id:</b> {employer.empJobId}</div> */}\r\n                                  {/* <div>\r\n                                    <b>Id:</b> {employer.id}\r\n                                  </div> */}\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-8 col-md-3 col-sm-12 d-flex flex-column flex-sm-row align-items-start align-items-sm-center gap-1 justify-content-sm-start justify-content-lg-end\">\r\n                                  <div>\r\n                                    {\" \"}\r\n                                    <b>Register Time:</b>{\" \"}\r\n                                    {\r\n                                      <Ddmmmyyyy_date\r\n                                        dateValue={employer.createdTime}\r\n                                      />\r\n                                    }{\" \"}\r\n                                    {/* {window.innerWidth >= 992 && (\r\n                                      <span className=\"d-none d-md-inline\">\r\n                                        |\r\n                                      </span>\r\n                                    )} */}\r\n                                  </div>\r\n                                  {/* <div>\r\n                                    <b>Update Time:</b>{\" \"}\r\n                                    {\r\n                                      <Ddmmmyyyy_date\r\n                                        dateValue={\r\n                                          employer.updatedTime\r\n                                            ? employer.updatedTime\r\n                                            : \"NILL\"\r\n                                        }\r\n                                      />\r\n                                    }\r\n                                  </div> */}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-6 col-sm-12  flex-sm-row align-items-start align-items-sm-center gap-2\">\r\n                                  <div>\r\n                                    <b>Job category:</b> {employer.jobCategory}{\" \"}\r\n                                  </div>\r\n                                  <div>\r\n                                    <b>Job industry:</b>{\" \"}\r\n                                    {employer.jobIndustry\r\n                                      ? employer.jobIndustry\r\n                                      : \"NILL\"}\r\n                                  </div>\r\n                                  <div>\r\n                                    <b>No.of openings:</b>{\" \"}\r\n                                    {employer.noOfOpenings}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <NoLead />\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 d-flex justify-content-center \">\r\n                <div className=\"\">\r\n                  <Stack spacing={2}>\r\n                    <Pagination\r\n                      count={pageCount.totalPages}\r\n                      color=\"success\"\r\n                      onChange={employerPagination}\r\n                    />\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobLead;\r\n"],"names":["_jsx","children","className","JobLead","setJobLead","useState","JobLeadList","setJobLeadList","pageCount","setPageCount","totalPages","totalCount","loading","setLoading","Dispatch","useDispatch","useEffect","debounceJobLead","debounce","GetJobLeadtable","then","data","console","log","code","content","TotalPageCount","totalElements","prev","cancel","_jsxs","TextField","fullWidth","label","id","placeholder","value","type","onChange","e","val","target","isNaN","concat","styled","style","CircularProgress","_Fragment","length","map","employer","i","onClick","employerId","commonPopupActions","setShowPopup","name","Ddmmmyyyy_date","dateValue","createdTime","jobCategory","jobIndustry","noOfOpenings","NoLead","Stack","spacing","Pagination","count","color","event","page","currentPage","totalPageCount"],"sourceRoot":""}